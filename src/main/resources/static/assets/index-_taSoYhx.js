function wI(n,t){for(var e=0;e<t.length;e++){const s=t[e];if(typeof s!="string"&&!Array.isArray(s)){for(const r in s)if(r!=="default"&&!(r in n)){const i=Object.getOwnPropertyDescriptor(s,r);i&&Object.defineProperty(n,r,i.get?i:{enumerable:!0,get:()=>s[r]})}}}return Object.freeze(Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}))}(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))s(r);new MutationObserver(r=>{for(const i of r)if(i.type==="childList")for(const o of i.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&s(o)}).observe(document,{childList:!0,subtree:!0});function e(r){const i={};return r.integrity&&(i.integrity=r.integrity),r.referrerPolicy&&(i.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?i.credentials="include":r.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function s(r){if(r.ep)return;r.ep=!0;const i=e(r);fetch(r.href,i)}})();const Oo=class Oo{constructor(t=0){t<1?(this._ptr=[],this._capacity=0,this._size=0):(this._ptr=new Array(t),this._capacity=t,this._size=0)}at(t){return this._ptr[t]}set(t,e){this._ptr[t]=e}get(t=0){const e=new Array;for(let s=t;s<this._size;s++)e.push(this._ptr[s]);return e}pushBack(t){this._size>=this._capacity&&this.prepareCapacity(this._capacity==0?Oo.DefaultSize:this._capacity*2),this._ptr[this._size++]=t}clear(){this._ptr.length=0,this._size=0}getSize(){return this._size}assign(t,e){this._size<t&&this.prepareCapacity(t);for(let r=0;r<t;r++)this._ptr[r]=e;this._size=t}resize(t,e=null){this.updateSize(t,e,!0)}updateSize(t,e=null,s=!0){if(this._size<t)if(this.prepareCapacity(t),s)for(let i=this._size;i<t;i++)typeof e=="function"?this._ptr[i]=JSON.parse(JSON.stringify(new e)):this._ptr[i]=e;else for(let i=this._size;i<t;i++)this._ptr[i]=e;else{const i=this._size-t;this._ptr.splice(this._size-i,i)}this._size=t}insert(t,e,s){let r=t._index;const i=e._index,o=s._index,a=o-i;this.prepareCapacity(this._size+a);const l=this._size-r;if(l>0)for(let c=0;c<l;c++)this._ptr.splice(r+c,0,null);for(let c=i;c<o;c++,r++)this._ptr[r]=e._vector._ptr[c];this._size=this._size+a}remove(t){return t<0||this._size<=t?!1:(this._ptr.splice(t,1),--this._size,!0)}erase(t){const e=t._index;return e<0||this._size<=e?t:(this._ptr.splice(e,1),--this._size,new ql(this,e))}prepareCapacity(t){t>this._capacity&&(this._capacity==0?(this._ptr=new Array(t),this._capacity=t):(this._ptr.length=t,this._capacity=t))}begin(){return this._size==0?this.end():new ql(this,0)}end(){return new ql(this,this._size)}getOffset(t){const e=new Oo;return e._ptr=this.get(t),e._size=this.get(t).length,e._capacity=this.get(t).length,e}};Oo.DefaultSize=10;let ct=Oo,ql=class qh{constructor(t,e){this._vector=t??null,this._index=e??0}set(t){return this._index=t._index,this._vector=t._vector,this}preIncrement(){return++this._index,this}preDecrement(){return--this._index,this}increment(){return new qh(this._vector,this._index++)}decrement(){return new qh(this._vector,this._index--)}ptr(){return this._vector._ptr[this._index]}substitution(t){return this._index=t._index,this._vector=t._vector,this}notEqual(t){return this._index!=t._index||this._vector!=t._vector}};var Lg;(n=>{n.csmVector=ct,n.iterator=ql})(Lg||(Lg={}));class An{append(t,e){return this.s+=e!==void 0?t.substr(0,e):t,this}expansion(t,e){for(let s=0;s<t;s++)this.append(e);return this}getBytes(){return encodeURIComponent(this.s).replace(/%../g,"x").length}getLength(){return this.s.length}isLess(t){return this.s<t.s}isGreat(t){return this.s>t.s}isEqual(t){return this.s==t}isEmpty(){return this.s.length==0}constructor(t){this.s=t}}var Vg;(n=>{n.csmString=An})(Vg||(Vg={}));class Fi{static createIdInternal(t){return new Fi(t)}getString(){return this._id}isEqual(t){return typeof t=="string"?this._id.isEqual(t):t instanceof An?this._id.isEqual(t.s):t instanceof Fi?this._id.isEqual(t._id.s):!1}isNotEqual(t){return typeof t=="string"?!this._id.isEqual(t):t instanceof An?!this._id.isEqual(t.s):t instanceof Fi?!this._id.isEqual(t._id.s):!1}constructor(t){if(typeof t=="string"){this._id=new An(t);return}this._id=t}}var zg;(n=>{n.CubismId=Fi})(zg||(zg={}));class Xy{constructor(){this._ids=new ct}release(){for(let t=0;t<this._ids.getSize();++t)this._ids.set(t,void 0);this._ids=null}registerIds(t){for(let e=0;e<t.length;e++)this.registerId(t[e])}registerId(t){let e=null;if(typeof t=="string"){if((e=this.findId(t))!=null)return e;e=Fi.createIdInternal(t),this._ids.pushBack(e)}else return this.registerId(t.s);return e}getId(t){return this.registerId(t)}isExist(t){return typeof t=="string"?this.findId(t)!=null:this.isExist(t.s)}findId(t){for(let e=0;e<this._ids.getSize();++e)if(this._ids.at(e).getString().isEqual(t))return this._ids.at(e);return null}}var Ug;(n=>{n.CubismIdManager=Xy})(Ug||(Ug={}));class ge{constructor(){this._tr=new Float32Array(16),this.loadIdentity()}static multiply(t,e,s){const r=new Float32Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),i=4;for(let o=0;o<i;++o)for(let a=0;a<i;++a)for(let l=0;l<i;++l)r[a+o*4]+=t[l+o*4]*e[a+l*4];for(let o=0;o<16;++o)s[o]=r[o]}loadIdentity(){const t=new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]);this.setMatrix(t)}setMatrix(t){for(let e=0;e<16;++e)this._tr[e]=t[e]}getArray(){return this._tr}getScaleX(){return this._tr[0]}getScaleY(){return this._tr[5]}getTranslateX(){return this._tr[12]}getTranslateY(){return this._tr[13]}transformX(t){return this._tr[0]*t+this._tr[12]}transformY(t){return this._tr[5]*t+this._tr[13]}invertTransformX(t){return(t-this._tr[12])/this._tr[0]}invertTransformY(t){return(t-this._tr[13])/this._tr[5]}translateRelative(t,e){const s=new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,t,e,0,1]);ge.multiply(s,this._tr,this._tr)}translate(t,e){this._tr[12]=t,this._tr[13]=e}translateX(t){this._tr[12]=t}translateY(t){this._tr[13]=t}scaleRelative(t,e){const s=new Float32Array([t,0,0,0,0,e,0,0,0,0,1,0,0,0,0,1]);ge.multiply(s,this._tr,this._tr)}scale(t,e){this._tr[0]=t,this._tr[5]=e}multiplyByMatrix(t){ge.multiply(t.getArray(),this._tr,this._tr)}clone(){const t=new ge;for(let e=0;e<this._tr.length;e++)t._tr[e]=this._tr[e];return t}}var Wg;(n=>{n.CubismMatrix44=ge})(Wg||(Wg={}));class tc{constructor(t,e,s,r){this.x=t,this.y=e,this.width=s,this.height=r}getCenterX(){return this.x+.5*this.width}getCenterY(){return this.y+.5*this.height}getRight(){return this.x+this.width}getBottom(){return this.y+this.height}setRect(t){this.x=t.x,this.y=t.y,this.width=t.width,this.height=t.height}expand(t,e){this.x-=t,this.y-=e,this.width+=t*2,this.height+=e*2}}var Gg;(n=>{n.csmRect=tc})(Gg||(Gg={}));class Lc{static create(){return null}static delete(t){}initialize(t){this._model=t}drawModel(){this.getModel()!=null&&(this.saveProfile(),this.doDrawModel(),this.restoreProfile())}setMvpMatrix(t){this._mvpMatrix4x4.setMatrix(t.getArray())}getMvpMatrix(){return this._mvpMatrix4x4}setModelColor(t,e,s,r){t<0?t=0:t>1&&(t=1),e<0?e=0:e>1&&(e=1),s<0?s=0:s>1&&(s=1),r<0?r=0:r>1&&(r=1),this._modelColor.r=t,this._modelColor.g=e,this._modelColor.b=s,this._modelColor.a=r}getModelColor(){return JSON.parse(JSON.stringify(this._modelColor))}getModelColorWithOpacity(t){const e=this.getModelColor();return e.a*=t,this.isPremultipliedAlpha()&&(e.r*=e.a,e.g*=e.a,e.b*=e.a),e}setIsPremultipliedAlpha(t){this._isPremultipliedAlpha=t}isPremultipliedAlpha(){return this._isPremultipliedAlpha}setIsCulling(t){this._isCulling=t}isCulling(){return this._isCulling}setAnisotropy(t){this._anisotropy=t}getAnisotropy(){return this._anisotropy}getModel(){return this._model}useHighPrecisionMask(t){this._useHighPrecisionMask=t}isUsingHighPrecisionMask(){return this._useHighPrecisionMask}constructor(){this._isCulling=!1,this._isPremultipliedAlpha=!1,this._anisotropy=0,this._model=null,this._modelColor=new rn,this._useHighPrecisionMask=!1,this._mvpMatrix4x4=new ge,this._mvpMatrix4x4.loadIdentity()}}var tr=(n=>(n[n.CubismBlendMode_Normal=0]="CubismBlendMode_Normal",n[n.CubismBlendMode_Additive=1]="CubismBlendMode_Additive",n[n.CubismBlendMode_Multiplicative=2]="CubismBlendMode_Multiplicative",n))(tr||{});class rn{constructor(t=1,e=1,s=1,r=1){this.r=t,this.g=e,this.b=s,this.a=r}}class CI{constructor(t,e){this._clippingIdList=t,this._clippingIdCount=e,this._allClippedDrawRect=new tc,this._layoutBounds=new tc,this._clippedDrawableIndexList=[],this._matrixForMask=new ge,this._matrixForDraw=new ge,this._bufferIndex=0}release(){this._layoutBounds!=null&&(this._layoutBounds=null),this._allClippedDrawRect!=null&&(this._allClippedDrawRect=null),this._clippedDrawableIndexList!=null&&(this._clippedDrawableIndexList=null)}addClippedDrawable(t){this._clippedDrawableIndexList.push(t)}}var Hg;(n=>{n.CubismBlendMode=tr,n.CubismRenderer=Lc,n.CubismTextureColor=rn})(Hg||(Hg={}));const _I=(n,t,e)=>{Od.print(n,"[CSM]"+t,e)},$l=(n,t,e)=>{_I(n,t+`
`,e)},qn=n=>{console.assert(n)};let Vo,Kn,qs,Ut;Vo=(n,...t)=>{$l(Fr.LogLevel_Debug,"[D]"+n,t)},Kn=(n,...t)=>{$l(Fr.LogLevel_Info,"[I]"+n,t)},qs=(n,...t)=>{$l(Fr.LogLevel_Warning,"[W]"+n,t)},Ut=(n,...t)=>{$l(Fr.LogLevel_Error,"[E]"+n,t)};class Od{static print(t,e,s){if(t<Nt.getLoggingLevel())return;const r=Nt.coreLogFunction;if(!r)return;const i=e.replace(/\{(\d+)\}/g,(o,a)=>s[a]);r(i)}static dumpBytes(t,e,s){for(let r=0;r<s;r++)r%16==0&&r>0?this.print(t,`
`):r%8==0&&r>0&&this.print(t,"  "),this.print(t,"{0} ",[e[r]&255]);this.print(t,`
`)}constructor(){}}var Xg;(n=>{n.CubismDebug=Od})(Xg||(Xg={}));class jy{constructor(t,e){this.first=t??null,this.second=e??null}}const Bo=class Bo{constructor(t){t!=null?t<1?(this._keyValues=[],this._dummyValue=null,this._size=0):(this._keyValues=new Array(t),this._size=t):(this._keyValues=[],this._dummyValue=null,this._size=0)}release(){this.clear()}appendKey(t){this.prepareCapacity(this._size+1,!1),this._keyValues[this._size]=new jy(t),this._size+=1}getValue(t){let e=-1;for(let s=0;s<this._size;s++)if(this._keyValues[s].first==t){e=s;break}return e>=0?this._keyValues[e].second:(this.appendKey(t),this._keyValues[this._size-1].second)}setValue(t,e){let s=-1;for(let r=0;r<this._size;r++)if(this._keyValues[r].first==t){s=r;break}s>=0?this._keyValues[s].second=e:(this.appendKey(t),this._keyValues[this._size-1].second=e)}isExist(t){for(let e=0;e<this._size;e++)if(this._keyValues[e].first==t)return!0;return!1}clear(){this._keyValues=void 0,this._keyValues=null,this._keyValues=[],this._size=0}getSize(){return this._size}prepareCapacity(t,e){t>this._keyValues.length&&(this._keyValues.length==0?(!e&&t<Bo.DefaultSize&&(t=Bo.DefaultSize),this._keyValues.length=t):(!e&&t<this._keyValues.length*2&&(t=this._keyValues.length*2),this._keyValues.length=t))}begin(){return new Vr(this,0)}end(){return new Vr(this,this._size)}erase(t){const e=t._index;return e<0||this._size<=e?t:(this._keyValues.splice(e,1),--this._size,new Vr(this,e))}dumpAsInt(){for(let t=0;t<this._size;t++)Vo("{0} ,",this._keyValues[t]),Vo(`
`)}};Bo.DefaultSize=10;let xn=Bo;class Vr{constructor(t,e){this._map=t??new xn,this._index=e??0}set(t){return this._index=t._index,this._map=t._map,this}preIncrement(){return++this._index,this}preDecrement(){return--this._index,this}increment(){return new Vr(this._map,this._index++)}decrement(){const t=new Vr(this._map,this._index);return this._map=t._map,this._index=t._index,this}ptr(){return this._map._keyValues[this._index]}notEqual(t){return this._index!=t._index||this._map!=t._map}}var jg;(n=>{n.csmMap=xn,n.csmPair=jy,n.iterator=Vr})(jg||(jg={}));class ec{static parseJsonObject(t,e){return Object.keys(t).forEach(s=>{if(typeof t[s]=="boolean"){const r=!!t[s];e.put(s,new Hn(r))}else if(typeof t[s]=="string"){const r=String(t[s]);e.put(s,new Ui(r))}else if(typeof t[s]=="number"){const r=Number(t[s]);e.put(s,new sc(r))}else t[s]instanceof Array?e.put(s,ec.parseJsonArray(t[s])):t[s]instanceof Object?e.put(s,ec.parseJsonObject(t[s],new Pi)):t[s]==null?e.put(s,new Mi):e.put(s,t[s])}),e}static parseJsonArray(t){const e=new Bd;return Object.keys(t).forEach(s=>{if(typeof Number(s)=="number")if(typeof t[s]=="boolean"){const i=!!t[s];e.add(new Hn(i))}else if(typeof t[s]=="string"){const i=String(t[s]);e.add(new Ui(i))}else if(typeof t[s]=="number"){const i=Number(t[s]);e.add(new sc(i))}else t[s]instanceof Array?e.add(this.parseJsonArray(t[s])):t[s]instanceof Object?e.add(this.parseJsonObject(t[s],new Pi)):t[s]==null?e.add(new Mi):e.add(t[s]);else if(t[s]instanceof Array)e.add(this.parseJsonArray(t[s]));else if(t[s]instanceof Object)e.add(this.parseJsonObject(t[s],new Pi));else if(t[s]==null)e.add(new Mi);else{const i=Array(t[s]);for(let o=0;o<i.length;o++)e.add(i[o])}}),e}}const nc="Error: type mismatch",SI="Error: index out of bounds";let He=class is{constructor(){}getRawString(t,e){return this.getString(t,e)}toInt(t=0){return t}toFloat(t=0){return t}toBoolean(t=!1){return t}getSize(){return 0}getArray(t=null){return t}getVector(t=new ct){return t}getMap(t){return t}getValueByIndex(t){return is.errorValue.setErrorNotForClientCall(nc)}getValueByString(t){return is.nullValue.setErrorNotForClientCall(nc)}getKeys(){return is.dummyKeys}isError(){return!1}isNull(){return!1}isBool(){return!1}isFloat(){return!1}isString(){return!1}isArray(){return!1}isMap(){return!1}equals(t){return!1}isStatic(){return!1}setErrorNotForClientCall(t){return zo.errorValue}static staticInitializeNotForClientCall(){Hn.trueValue=new Hn(!0),Hn.falseValue=new Hn(!1),is.errorValue=new zo("ERROR",!0),is.nullValue=new Mi,is.dummyKeys=new ct}static staticReleaseNotForClientCall(){Hn.trueValue=null,Hn.falseValue=null,is.errorValue=null,is.nullValue=null,is.dummyKeys=null}};class Pe{constructor(t,e){this._parseCallback=ec.parseJsonObject,this._error=null,this._lineCount=0,this._root=null,t!=null&&this.parseBytes(t,e,this._parseCallback)}static create(t,e){const s=new Pe;return s.parseBytes(t,e,s._parseCallback)?s:(Pe.delete(s),null)}static delete(t){}getRoot(){return this._root}static arrayBufferToString(t){const e=new Uint8Array(t);let s="";for(let r=0,i=e.length;r<i;++r)s+="%"+this.pad(e[r].toString(16));return s=decodeURIComponent(s),s}static pad(t){return t.length<2?"0"+t:t}parseBytes(t,e,s){const r=new Array(1),i=Pe.arrayBufferToString(t);if(s==null?this._root=this.parseValue(i,e,0,r):this._root=s(JSON.parse(i),new Pi),this._error){let o="\0";return o="Json parse error : @line "+(this._lineCount+1)+`
`,this._root=new Ui(o),Kn("{0}",this._root.getRawString()),!1}else if(this._root==null)return this._root=new zo(new An(this._error),!1),!1;return!0}getParseError(){return this._error}checkEndOfFile(){return this._root.getArray()[1].equals("EOF")}parseValue(t,e,s,r){if(this._error)return null;let i=null,o=s,a;for(;o<e;o++)switch(t[o]){case"-":case".":case"0":case"1":case"2":case"3":case"4":case"5":case"6":case"7":case"8":case"9":{const c=new Array(1);return a=II(t.slice(o),c),r[0]=t.indexOf(c[0]),new sc(a)}case'"':return new Ui(this.parseString(t,e,o+1,r));case"[":return i=this.parseArray(t,e,o+1,r),i;case"{":return i=this.parseObject(t,e,o+1,r),i;case"n":return o+3<e?(i=new Mi,r[0]=o+4):this._error="parse null",i;case"t":return o+3<e?(i=Hn.trueValue,r[0]=o+4):this._error="parse true",i;case"f":return o+4<e?(i=Hn.falseValue,r[0]=o+5):this._error="illegal ',' position",i;case",":return this._error="illegal ',' position",null;case"]":return r[0]=o,null;case`
`:this._lineCount++}return this._error="illegal end of value",null}parseString(t,e,s,r){if(this._error)return null;if(!t)return this._error="string is null",null;let i=s,o,a;const l=new An("");let c=s;for(;i<e;i++)switch(o=t[i],o){case'"':return r[0]=i+1,l.append(t.slice(c),i-c),l.s;case"//":if(i++,i-1>c&&l.append(t.slice(c),i-c),c=i+1,i<e)switch(a=t[i],a){case"\\":l.expansion(1,"\\");break;case'"':l.expansion(1,'"');break;case"/":l.expansion(1,"/");break;case"b":l.expansion(1,"\b");break;case"f":l.expansion(1,"\f");break;case"n":l.expansion(1,`
`);break;case"r":l.expansion(1,"\r");break;case"t":l.expansion(1,"	");break;case"u":this._error="parse string/unicord escape not supported";break}else this._error="parse string/escape error"}return this._error="parse string/illegal end",null}parseObject(t,e,s,r){if(this._error)return null;if(!t)return this._error="buffer is null",null;const i=new Pi;let o="",a=s,l="";const c=Array(1);let u=!1;for(;a<e;a++){t:for(;a<e;a++)switch(l=t[a],l){case'"':if(o=this.parseString(t,e,a+1,c),this._error)return null;a=c[0],u=!0;break t;case"}":return r[0]=a+1,i;case":":this._error="illegal ':' position";break;case`
`:this._lineCount++}if(!u)return this._error="key not found",null;u=!1;t:for(;a<e;a++)switch(l=t[a],l){case":":u=!0,a++;break t;case"}":this._error="illegal '}' position";break;case`
`:this._lineCount++}if(!u)return this._error="':' not found",null;const h=this.parseValue(t,e,a,c);if(this._error)return null;a=c[0],i.put(o,h);t:for(;a<e;a++)switch(l=t[a],l){case",":break t;case"}":return r[0]=a+1,i;case`
`:this._lineCount++}}return this._error="illegal end of perseObject",null}parseArray(t,e,s,r){if(this._error)return null;if(!t)return this._error="buffer is null",null;let i=new Bd,o=s,a;const l=new Array(1);for(;o<e;o++){const c=this.parseValue(t,e,o,l);if(this._error)return null;o=l[0],c&&i.add(c);t:for(;o<e;o++)switch(a=t[o],a){case",":break t;case"]":return r[0]=o+1,i;case`
`:++this._lineCount}}return i=void 0,this._error="illegal end of parseObject",null}}class sc extends He{constructor(t){super(),this._value=t}isFloat(){return!0}getString(t,e){const s="\0";return this._value=parseFloat(s),this._stringBuffer=s,this._stringBuffer}toInt(t=0){return parseInt(this._value.toString())}toFloat(t=0){return this._value}equals(t){return typeof t=="number"?Math.round(t)?!1:t==this._value:!1}}class Hn extends He{isBool(){return!0}toBoolean(t=!1){return this._boolValue}getString(t,e){return this._stringBuffer=this._boolValue?"true":"false",this._stringBuffer}equals(t){return typeof t=="boolean"?t==this._boolValue:!1}isStatic(){return!0}constructor(t){super(),this._boolValue=t}}class Ui extends He{constructor(t){super(),typeof t=="string"&&(this._stringBuffer=t),t instanceof An&&(this._stringBuffer=t.s)}isString(){return!0}getString(t,e){return this._stringBuffer}equals(t){return typeof t=="string"?this._stringBuffer==t:t instanceof An?this._stringBuffer==t.s:!1}}class zo extends Ui{isStatic(){return this._isStatic}setErrorNotForClientCall(t){return this._stringBuffer=t,this}constructor(t,e){typeof t=="string"?super(t):super(t),this._isStatic=e}isError(){return!0}}class Mi extends He{isNull(){return!0}getString(t,e){return this._stringBuffer}isStatic(){return!0}setErrorNotForClientCall(t){return this._stringBuffer=t,zo.nullValue}constructor(){super(),this._stringBuffer="NullValue"}}class Bd extends He{constructor(){super(),this._array=new ct}release(){for(let t=this._array.begin();t.notEqual(this._array.end());t.preIncrement()){let e=t.ptr();e&&!e.isStatic()&&(e=void 0,e=null)}}isArray(){return!0}getValueByIndex(t){if(t<0||this._array.getSize()<=t)return He.errorValue.setErrorNotForClientCall(SI);const e=this._array.at(t);return e??He.nullValue}getValueByString(t){return He.errorValue.setErrorNotForClientCall(nc)}getString(t,e){const s=e+`[
`;for(let r=this._array.begin();r.notEqual(this._array.end());r.increment()){const i=r.ptr();this._stringBuffer+=e+""+i.getString(e+" ")+`
`}return this._stringBuffer=s+e+`]
`,this._stringBuffer}add(t){this._array.pushBack(t)}getVector(t=null){return this._array}getSize(){return this._array.getSize()}}class Pi extends He{constructor(){super(),this._map=new xn}release(){const t=this._map.begin();for(;t.notEqual(this._map.end());){let e=t.ptr().second;e&&!e.isStatic()&&(e=void 0,e=null),t.preIncrement()}}isMap(){return!0}getValueByString(t){if(t instanceof An){const e=this._map.getValue(t.s);return e??He.nullValue}for(let e=this._map.begin();e.notEqual(this._map.end());e.preIncrement())if(e.ptr().first==t)return e.ptr().second==null?He.nullValue:e.ptr().second;return He.nullValue}getValueByIndex(t){return He.errorValue.setErrorNotForClientCall(nc)}getString(t,e){this._stringBuffer=e+`{
`;const s=this._map.begin();for(;s.notEqual(this._map.end());){const r=s.ptr().first,i=s.ptr().second;this._stringBuffer+=e+" "+r+" : "+i.getString(e+"   ")+` 
`,s.preIncrement()}return this._stringBuffer+=e+`}
`,this._stringBuffer}getMap(t){return this._map}put(t,e){this._map.setValue(t,e)}getKeys(){if(!this._keys){this._keys=new ct;const t=this._map.begin();for(;t.notEqual(this._map.end());){const e=t.ptr().first;this._keys.pushBack(e),t.preIncrement()}}return this._keys}getSize(){return this._keys.getSize()}}var qg;(n=>{n.CubismJson=Pe,n.JsonArray=Bd,n.JsonBoolean=Hn,n.JsonError=zo,n.JsonFloat=sc,n.JsonMap=Pi,n.JsonNullvalue=Mi,n.JsonString=Ui,n.Value=He})(qg||(qg={}));function II(n,t){let e=0;for(let r=1;;r++){const i=n.slice(r-1,r);if(i=="e"||i=="-"||i=="E")continue;const o=n.substring(0,r),a=Number(o);if(isNaN(a))break;e=r}let s=parseFloat(n);return isNaN(s)&&(s=NaN),t[0]=n.slice(e),s}let Vn=!1,yi=!1,bi=null,wo=null;const Ks=Object.freeze({vertexOffset:0,vertexStep:2});function $o(n){n&&(n=void 0)}class Nt{static startUp(t=null){if(Vn)return Kn("CubismFramework.startUp() is already done."),Vn;if(bi=t,bi!=null&&Live2DCubismCore.Logging.csmSetLogFunction(bi.logFunction),Vn=!0,Vn){const e=Live2DCubismCore.Version.csmGetVersion(),s=(e&4278190080)>>24,r=(e&16711680)>>16,i=e&65535,o=e;Kn("Live2D Cubism Core version: {0}.{1}.{2} ({3})",("00"+s).slice(-2),("00"+r).slice(-2),("0000"+i).slice(-4),o)}return Kn("CubismFramework.startUp() is complete."),Vn}static cleanUp(){Vn=!1,yi=!1,bi=null,wo=null}static initialize(t=0){if(qn(Vn),!Vn){qs("CubismFramework is not started.");return}if(yi){qs("CubismFramework.initialize() skipped, already initialized.");return}He.staticInitializeNotForClientCall(),wo=new Xy,Live2DCubismCore.Memory.initializeAmountOfMemory(t),yi=!0,Kn("CubismFramework.initialize() is complete.")}static dispose(){if(qn(Vn),!Vn){qs("CubismFramework is not started.");return}if(!yi){qs("CubismFramework.dispose() skipped, not initialized.");return}He.staticReleaseNotForClientCall(),wo.release(),wo=null,Lc.staticRelease(),yi=!1,Kn("CubismFramework.dispose() is complete.")}static isStarted(){return Vn}static isInitialized(){return yi}static coreLogFunction(t){Live2DCubismCore.Logging.csmGetLogFunction()&&Live2DCubismCore.Logging.csmGetLogFunction()(t)}static getLoggingLevel(){return bi!=null?bi.loggingLevel:5}static getIdManager(){return wo}constructor(){}}class vI{}var Fr=(n=>(n[n.LogLevel_Verbose=0]="LogLevel_Verbose",n[n.LogLevel_Debug=1]="LogLevel_Debug",n[n.LogLevel_Info=2]="LogLevel_Info",n[n.LogLevel_Warning=3]="LogLevel_Warning",n[n.LogLevel_Error=4]="LogLevel_Error",n[n.LogLevel_Off=5]="LogLevel_Off",n))(Fr||{}),Kg;(n=>{n.Constant=Ks,n.csmDelete=$o,n.CubismFramework=Nt})(Kg||(Kg={}));const Yg=1,kI=2,$I=.8,TI=-1,NI=1,EI=-2,RI=2,DI=-2,AI=2,FI="../../Resources/",qy=["usa01c_02","usa04c_02","dosrhd님","happing23","usa02c_02","usa03c_02"],MI=qy.length,PI="Idle",OI="TapBody",Jg="Head",Zg="Body",BI=1,LI=2,Qg=3,VI=Fr.LogLevel_Verbose;let fe=null,ot=null,wi=null;class Ld{static getInstance(){return wi==null&&(wi=new Ld),wi}static releaseInstance(){wi!=null&&wi.release(),wi=null}constructor(){fe=document.createElement("canvas"),ot=fe.getContext("webgl2"),ot||(alert("Cannot initialize WebGL. This browser does not support."),ot=null,document.body.innerHTML="This browser does not support the <code>&lt;canvas&gt;</code> element.")}release(){}}const dt=Object.freeze({HitAreaPrefix:"HitArea",HitAreaHead:"Head",HitAreaBody:"Body",PartsIdCore:"Parts01Core",PartsArmPrefix:"Parts01Arm_",PartsArmLPrefix:"Parts01ArmL_",PartsArmRPrefix:"Parts01ArmR_",ParamAngleX:"ParamAngleX",ParamAngleY:"ParamAngleY",ParamAngleZ:"ParamAngleZ",ParamEyeLOpen:"ParamEyeLOpen",ParamEyeLSmile:"ParamEyeLSmile",ParamEyeROpen:"ParamEyeROpen",ParamEyeRSmile:"ParamEyeRSmile",ParamEyeBallX:"ParamEyeBallX",ParamEyeBallY:"ParamEyeBallY",ParamEyeBallForm:"ParamEyeBallForm",ParamBrowLY:"ParamBrowLY",ParamBrowRY:"ParamBrowRY",ParamBrowLX:"ParamBrowLX",ParamBrowRX:"ParamBrowRX",ParamBrowLAngle:"ParamBrowLAngle",ParamBrowRAngle:"ParamBrowRAngle",ParamBrowLForm:"ParamBrowLForm",ParamBrowRForm:"ParamBrowRForm",ParamMouthForm:"ParamMouthForm",ParamMouthOpenY:"ParamMouthOpenY",ParamCheek:"ParamCheek",ParamBodyAngleX:"ParamBodyAngleX",ParamBodyAngleY:"ParamBodyAngleY",ParamBodyAngleZ:"ParamBodyAngleZ",ParamBreath:"ParamBreath",ParamArmLA:"ParamArmLA",ParamArmRA:"ParamArmRA",ParamArmLB:"ParamArmLB",ParamArmRB:"ParamArmRB",ParamHandL:"ParamHandL",ParamHandR:"ParamHandR",ParamHairFront:"ParamHairFront",ParamHairSide:"ParamHairSide",ParamHairBack:"ParamHairBack",ParamHairFluffy:"ParamHairFluffy",ParamShoulderY:"ParamShoulderY",ParamBustX:"ParamBustX",ParamBustY:"ParamBustY",ParamBaseX:"ParamBaseX",ParamBaseY:"ParamBaseY",ParamNONE:"NONE:"});var tm;(n=>{n.HitAreaBody=dt.HitAreaBody,n.HitAreaHead=dt.HitAreaHead,n.HitAreaPrefix=dt.HitAreaPrefix,n.ParamAngleX=dt.ParamAngleX,n.ParamAngleY=dt.ParamAngleY,n.ParamAngleZ=dt.ParamAngleZ,n.ParamArmLA=dt.ParamArmLA,n.ParamArmLB=dt.ParamArmLB,n.ParamArmRA=dt.ParamArmRA,n.ParamArmRB=dt.ParamArmRB,n.ParamBaseX=dt.ParamBaseX,n.ParamBaseY=dt.ParamBaseY,n.ParamBodyAngleX=dt.ParamBodyAngleX,n.ParamBodyAngleY=dt.ParamBodyAngleY,n.ParamBodyAngleZ=dt.ParamBodyAngleZ,n.ParamBreath=dt.ParamBreath,n.ParamBrowLAngle=dt.ParamBrowLAngle,n.ParamBrowLForm=dt.ParamBrowLForm,n.ParamBrowLX=dt.ParamBrowLX,n.ParamBrowLY=dt.ParamBrowLY,n.ParamBrowRAngle=dt.ParamBrowRAngle,n.ParamBrowRForm=dt.ParamBrowRForm,n.ParamBrowRX=dt.ParamBrowRX,n.ParamBrowRY=dt.ParamBrowRY,n.ParamBustX=dt.ParamBustX,n.ParamBustY=dt.ParamBustY,n.ParamCheek=dt.ParamCheek,n.ParamEyeBallForm=dt.ParamEyeBallForm,n.ParamEyeBallX=dt.ParamEyeBallX,n.ParamEyeBallY=dt.ParamEyeBallY,n.ParamEyeLOpen=dt.ParamEyeLOpen,n.ParamEyeLSmile=dt.ParamEyeLSmile,n.ParamEyeROpen=dt.ParamEyeROpen,n.ParamEyeRSmile=dt.ParamEyeRSmile,n.ParamHairBack=dt.ParamHairBack,n.ParamHairFluffy=dt.ParamHairFluffy,n.ParamHairFront=dt.ParamHairFront,n.ParamHairSide=dt.ParamHairSide,n.ParamHandL=dt.ParamHandL,n.ParamHandR=dt.ParamHandR,n.ParamMouthForm=dt.ParamMouthForm,n.ParamMouthOpenY=dt.ParamMouthOpenY,n.ParamNONE=dt.ParamNONE,n.ParamShoulderY=dt.ParamShoulderY,n.PartsArmLPrefix=dt.PartsArmLPrefix,n.PartsArmPrefix=dt.PartsArmPrefix,n.PartsArmRPrefix=dt.PartsArmRPrefix,n.PartsIdCore=dt.PartsIdCore})(tm||(tm={}));class Ky{}var em;(n=>{n.ICubismModelSetting=Ky})(em||(em={}));const Ws="FileReferences",zI="Groups",UI="Layout",WI="HitAreas",GI="Moc",HI="Textures",XI="Physics",jI="Pose",qI="Expressions",KI="Motions",nm="UserData",Gs="Name",sm="File",YI="Id",Tl="Ids",rm="Sound",im="FadeInTime",om="FadeOutTime",wh="LipSync",Ch="EyeBlink";class Yy extends Ky{constructor(t,e){super(),this._json=Pe.create(t,e),this.getJson()&&(this._jsonValue=new ct,this._jsonValue.pushBack(this.getJson().getRoot().getValueByString(zI)),this._jsonValue.pushBack(this.getJson().getRoot().getValueByString(Ws).getValueByString(GI)),this._jsonValue.pushBack(this.getJson().getRoot().getValueByString(Ws).getValueByString(KI)),this._jsonValue.pushBack(this.getJson().getRoot().getValueByString(Ws).getValueByString(qI)),this._jsonValue.pushBack(this.getJson().getRoot().getValueByString(Ws).getValueByString(HI)),this._jsonValue.pushBack(this.getJson().getRoot().getValueByString(Ws).getValueByString(XI)),this._jsonValue.pushBack(this.getJson().getRoot().getValueByString(Ws).getValueByString(jI)),this._jsonValue.pushBack(this.getJson().getRoot().getValueByString(WI)))}release(){Pe.delete(this._json),this._jsonValue=null}getJson(){return this._json}getModelFileName(){return this.isExistModelFile()?this._jsonValue.at(1).getRawString():""}getTextureCount(){return this.isExistTextureFiles()?this._jsonValue.at(4).getSize():0}getTextureDirectory(){const e=this._jsonValue.at(4).getValueByIndex(0).getRawString().split("/"),s=e.length-1;let r="";for(let i=0;i<s;i++)r+=e[i],i<s-1&&(r+="/");return r}getTextureFileName(t){return this._jsonValue.at(4).getValueByIndex(t).getRawString()}getHitAreasCount(){return this.isExistHitAreas()?this._jsonValue.at(7).getSize():0}getHitAreaId(t){return Nt.getIdManager().getId(this._jsonValue.at(7).getValueByIndex(t).getValueByString(YI).getRawString())}getHitAreaName(t){return this._jsonValue.at(7).getValueByIndex(t).getValueByString(Gs).getRawString()}getPhysicsFileName(){return this.isExistPhysicsFile()?this._jsonValue.at(5).getRawString():""}getPoseFileName(){return this.isExistPoseFile()?this._jsonValue.at(6).getRawString():""}getExpressionCount(){return this.isExistExpressionFile()?this._jsonValue.at(3).getSize():0}getExpressionName(t){return this._jsonValue.at(3).getValueByIndex(t).getValueByString(Gs).getRawString()}getExpressionFileName(t){return this._jsonValue.at(3).getValueByIndex(t).getValueByString(sm).getRawString()}getMotionGroupCount(){return this.isExistMotionGroups()?this._jsonValue.at(2).getKeys().getSize():0}getMotionGroupName(t){return this.isExistMotionGroups()?this._jsonValue.at(2).getKeys().at(t):null}getMotionCount(t){return this.isExistMotionGroupName(t)?this._jsonValue.at(2).getValueByString(t).getSize():0}getMotionFileName(t,e){return this.isExistMotionGroupName(t)?this._jsonValue.at(2).getValueByString(t).getValueByIndex(e).getValueByString(sm).getRawString():""}getMotionSoundFileName(t,e){return this.isExistMotionSoundFile(t,e)?this._jsonValue.at(2).getValueByString(t).getValueByIndex(e).getValueByString(rm).getRawString():""}getMotionFadeInTimeValue(t,e){return this.isExistMotionFadeIn(t,e)?this._jsonValue.at(2).getValueByString(t).getValueByIndex(e).getValueByString(im).toFloat():-1}getMotionFadeOutTimeValue(t,e){return this.isExistMotionFadeOut(t,e)?this._jsonValue.at(2).getValueByString(t).getValueByIndex(e).getValueByString(om).toFloat():-1}getUserDataFile(){return this.isExistUserDataFile()?this.getJson().getRoot().getValueByString(Ws).getValueByString(nm).getRawString():""}getLayoutMap(t){const e=this.getJson().getRoot().getValueByString(UI).getMap();if(e==null)return!1;let s=!1;for(const r=e.begin();r.notEqual(e.end());r.preIncrement())t.setValue(r.ptr().first,r.ptr().second.toFloat()),s=!0;return s}getEyeBlinkParameterCount(){if(!this.isExistEyeBlinkParameters())return 0;let t=0;for(let e=0;e<this._jsonValue.at(0).getSize();e++){const s=this._jsonValue.at(0).getValueByIndex(e);if(!(s.isNull()||s.isError())&&s.getValueByString(Gs).getRawString()==Ch){t=s.getValueByString(Tl).getVector().getSize();break}}return t}getEyeBlinkParameterId(t){if(!this.isExistEyeBlinkParameters())return null;for(let e=0;e<this._jsonValue.at(0).getSize();e++){const s=this._jsonValue.at(0).getValueByIndex(e);if(!(s.isNull()||s.isError())&&s.getValueByString(Gs).getRawString()==Ch)return Nt.getIdManager().getId(s.getValueByString(Tl).getValueByIndex(t).getRawString())}return null}getLipSyncParameterCount(){if(!this.isExistLipSyncParameters())return 0;let t=0;for(let e=0;e<this._jsonValue.at(0).getSize();e++){const s=this._jsonValue.at(0).getValueByIndex(e);if(!(s.isNull()||s.isError())&&s.getValueByString(Gs).getRawString()==wh){t=s.getValueByString(Tl).getVector().getSize();break}}return t}getLipSyncParameterId(t){if(!this.isExistLipSyncParameters())return null;for(let e=0;e<this._jsonValue.at(0).getSize();e++){const s=this._jsonValue.at(0).getValueByIndex(e);if(!(s.isNull()||s.isError())&&s.getValueByString(Gs).getRawString()==wh)return Nt.getIdManager().getId(s.getValueByString(Tl).getValueByIndex(t).getRawString())}return null}isExistModelFile(){const t=this._jsonValue.at(1);return!t.isNull()&&!t.isError()}isExistTextureFiles(){const t=this._jsonValue.at(4);return!t.isNull()&&!t.isError()}isExistHitAreas(){const t=this._jsonValue.at(7);return!t.isNull()&&!t.isError()}isExistPhysicsFile(){const t=this._jsonValue.at(5);return!t.isNull()&&!t.isError()}isExistPoseFile(){const t=this._jsonValue.at(6);return!t.isNull()&&!t.isError()}isExistExpressionFile(){const t=this._jsonValue.at(3);return!t.isNull()&&!t.isError()}isExistMotionGroups(){const t=this._jsonValue.at(2);return!t.isNull()&&!t.isError()}isExistMotionGroupName(t){const e=this._jsonValue.at(2).getValueByString(t);return!e.isNull()&&!e.isError()}isExistMotionSoundFile(t,e){const s=this._jsonValue.at(2).getValueByString(t).getValueByIndex(e).getValueByString(rm);return!s.isNull()&&!s.isError()}isExistMotionFadeIn(t,e){const s=this._jsonValue.at(2).getValueByString(t).getValueByIndex(e).getValueByString(im);return!s.isNull()&&!s.isError()}isExistMotionFadeOut(t,e){const s=this._jsonValue.at(2).getValueByString(t).getValueByIndex(e).getValueByString(om);return!s.isNull()&&!s.isError()}isExistUserDataFile(){const t=this.getJson().getRoot().getValueByString(Ws).getValueByString(nm);return!t.isNull()&&!t.isError()}isExistEyeBlinkParameters(){if(this._jsonValue.at(0).isNull()||this._jsonValue.at(0).isError())return!1;for(let t=0;t<this._jsonValue.at(0).getSize();++t)if(this._jsonValue.at(0).getValueByIndex(t).getValueByString(Gs).getRawString()==Ch)return!0;return!1}isExistLipSyncParameters(){if(this._jsonValue.at(0).isNull()||this._jsonValue.at(0).isError())return!1;for(let t=0;t<this._jsonValue.at(0).getSize();++t)if(this._jsonValue.at(0).getValueByIndex(t).getValueByString(Gs).getRawString()==wh)return!0;return!1}}var am;(n=>{n.CubismModelSettingJson=Yy})(am||(am={}));class oa{static create(){return new oa}static delete(t){}setParameters(t){this._breathParameters=t}getParameters(){return this._breathParameters}updateParameters(t,e){this._currentTime+=e;const s=this._currentTime*2*3.14159;for(let r=0;r<this._breathParameters.getSize();++r){const i=this._breathParameters.at(r);t.addParameterValueById(i.parameterId,i.offset+i.peak*Math.sin(s/i.cycle),i.weight)}}constructor(){this._currentTime=0}}class $i{constructor(t,e,s,r,i){this.parameterId=t??null,this.offset=e??0,this.peak=s??0,this.cycle=r??0,this.weight=i??0}}var lm;(n=>{n.BreathParameterData=$i,n.CubismBreath=oa})(lm||(lm={}));const Lo=class Lo{static create(t=null){return new Lo(t)}static delete(t){}setBlinkingInterval(t){this._blinkingIntervalSeconds=t}setBlinkingSetting(t,e,s){this._closingSeconds=t,this._closedSeconds=e,this._openingSeconds=s}setParameterIds(t){this._parameterIds=t}getParameterIds(){return this._parameterIds}updateParameters(t,e){this._userTimeSeconds+=e;let s,r=0;switch(this._blinkingState){case 2:r=(this._userTimeSeconds-this._stateStartTimeSeconds)/this._closingSeconds,r>=1&&(r=1,this._blinkingState=3,this._stateStartTimeSeconds=this._userTimeSeconds),s=1-r;break;case 3:r=(this._userTimeSeconds-this._stateStartTimeSeconds)/this._closedSeconds,r>=1&&(this._blinkingState=4,this._stateStartTimeSeconds=this._userTimeSeconds),s=0;break;case 4:r=(this._userTimeSeconds-this._stateStartTimeSeconds)/this._openingSeconds,r>=1&&(r=1,this._blinkingState=1,this._nextBlinkingTime=this.determinNextBlinkingTiming()),s=r;break;case 1:this._nextBlinkingTime<this._userTimeSeconds&&(this._blinkingState=2,this._stateStartTimeSeconds=this._userTimeSeconds),s=1;break;case 0:default:this._blinkingState=1,this._nextBlinkingTime=this.determinNextBlinkingTiming(),s=1;break}Lo.CloseIfZero||(s=-s);for(let o=0;o<this._parameterIds.getSize();++o)t.setParameterValueById(this._parameterIds.at(o),s)}constructor(t){if(this._blinkingState=0,this._nextBlinkingTime=0,this._stateStartTimeSeconds=0,this._blinkingIntervalSeconds=4,this._closingSeconds=.1,this._closedSeconds=.05,this._openingSeconds=.15,this._userTimeSeconds=0,this._parameterIds=new ct,t!=null)for(let e=0;e<t.getEyeBlinkParameterCount();++e)this._parameterIds.pushBack(t.getEyeBlinkParameterId(e))}determinNextBlinkingTiming(){const t=Math.random();return this._userTimeSeconds+t*(2*this._blinkingIntervalSeconds-1)}};Lo.CloseIfZero=!0;let Uo=Lo;var Jy=(n=>(n[n.EyeState_First=0]="EyeState_First",n[n.EyeState_Interval=1]="EyeState_Interval",n[n.EyeState_Closing=2]="EyeState_Closing",n[n.EyeState_Closed=3]="EyeState_Closed",n[n.EyeState_Opening=4]="EyeState_Opening",n))(Jy||{}),cm;(n=>{n.CubismEyeBlink=Uo,n.EyeState=Jy})(cm||(cm={}));const JI=.001,_h=.5,um="FadeInTime",hm="Link",ZI="Groups",QI="Id";class Wo{static create(t,e){const s=Pe.create(t,e);if(!s)return null;const r=new Wo,i=s.getRoot();i.getValueByString(um).isNull()||(r._fadeTimeSeconds=i.getValueByString(um).toFloat(_h),r._fadeTimeSeconds<=0&&(r._fadeTimeSeconds=_h));const o=i.getValueByString(ZI),a=o.getSize();for(let l=0;l<a;++l){const c=o.getValueByIndex(l),u=c.getSize();let h=0;for(let d=0;d<u;++d){const p=c.getValueByIndex(d),f=new Go,m=Nt.getIdManager().getId(p.getValueByString(QI).getRawString());if(f.partId=m,!p.getValueByString(hm).isNull()){const g=p.getValueByString(hm),x=g.getSize();for(let y=0;y<x;++y){const w=new Go,b=Nt.getIdManager().getId(g.getValueByIndex(y).getString());w.partId=b,f.link.pushBack(w)}}r._partGroups.pushBack(f.clone()),++h}r._partGroupCounts.pushBack(h)}return Pe.delete(s),r}static delete(t){}updateParameters(t,e){t!=this._lastModel&&this.reset(t),this._lastModel=t,e<0&&(e=0);let s=0;for(let r=0;r<this._partGroupCounts.getSize();r++){const i=this._partGroupCounts.at(r);this.doFade(t,e,s,i),s+=i}this.copyPartOpacities(t)}reset(t){let e=0;for(let s=0;s<this._partGroupCounts.getSize();++s){const r=this._partGroupCounts.at(s);for(let i=e;i<e+r;++i){this._partGroups.at(i).initialize(t);const o=this._partGroups.at(i).partIndex,a=this._partGroups.at(i).parameterIndex;if(!(o<0)){t.setPartOpacityByIndex(o,i==e?1:0),t.setParameterValueByIndex(a,i==e?1:0);for(let l=0;l<this._partGroups.at(i).link.getSize();++l)this._partGroups.at(i).link.at(l).initialize(t)}}e+=r}}copyPartOpacities(t){for(let e=0;e<this._partGroups.getSize();++e){const s=this._partGroups.at(e);if(s.link.getSize()==0)continue;const r=this._partGroups.at(e).partIndex,i=t.getPartOpacityByIndex(r);for(let o=0;o<s.link.getSize();++o){const l=s.link.at(o).partIndex;l<0||t.setPartOpacityByIndex(l,i)}}}doFade(t,e,s,r){let i=-1,o=1;const a=.5,l=.15;for(let c=s;c<s+r;++c){const u=this._partGroups.at(c).partIndex,h=this._partGroups.at(c).parameterIndex;if(t.getParameterValueByIndex(h)>JI){if(i>=0)break;i=c,o=t.getPartOpacityByIndex(u),o+=e/this._fadeTimeSeconds,o>1&&(o=1)}}i<0&&(i=0,o=1);for(let c=s;c<s+r;++c){const u=this._partGroups.at(c).partIndex;if(i==c)t.setPartOpacityByIndex(u,o);else{let h=t.getPartOpacityByIndex(u),d;o<a?d=o*(a-1)/a+1:d=(1-o)*a/(1-a),(1-d)*(1-o)>l&&(d=1-l/(1-o)),h>d&&(h=d),t.setPartOpacityByIndex(u,h)}}}constructor(){this._fadeTimeSeconds=_h,this._lastModel=null,this._partGroups=new ct,this._partGroupCounts=new ct}}class Go{constructor(t){if(this.parameterIndex=0,this.partIndex=0,this.link=new ct,t!=null){this.partId=t.partId;for(const e=t.link.begin();e.notEqual(t.link.end());e.preIncrement())this.link.pushBack(e.ptr().clone())}}assignment(t){this.partId=t.partId;for(const e=t.link.begin();e.notEqual(t.link.end());e.preIncrement())this.link.pushBack(e.ptr().clone());return this}initialize(t){this.parameterIndex=t.getParameterIndex(this.partId),this.partIndex=t.getPartIndex(this.partId),t.setParameterValueByIndex(this.parameterIndex,1)}clone(){const t=new Go;t.partId=this.partId,t.parameterIndex=this.parameterIndex,t.partIndex=this.partIndex,t.link=new ct;for(let e=this.link.begin();e.notEqual(this.link.end());e.increment())t.link.pushBack(e.ptr().clone());return t}}var dm;(n=>{n.CubismPose=Wo,n.PartData=Go})(dm||(dm={}));class Zy extends ge{constructor(t,e){super(),this._width=t!==void 0?t:0,this._height=e!==void 0?e:0,this.setHeight(2)}setWidth(t){const e=t/this._width,s=e;this.scale(e,s)}setHeight(t){const e=t/this._height,s=e;this.scale(e,s)}setPosition(t,e){this.translate(t,e)}setCenterPosition(t,e){this.centerX(t),this.centerY(e)}top(t){this.setY(t)}bottom(t){const e=this._height*this.getScaleY();this.translateY(t-e)}left(t){this.setX(t)}right(t){const e=this._width*this.getScaleX();this.translateX(t-e)}centerX(t){const e=this._width*this.getScaleX();this.translateX(t-e/2)}setX(t){this.translateX(t)}centerY(t){const e=this._height*this.getScaleY();this.translateY(t-e/2)}setY(t){this.translateY(t)}setupFromLayout(t){const e="width",s="height",r="x",i="y",o="center_x",a="center_y",l="top",c="bottom",u="left",h="right";for(const d=t.begin();d.notEqual(t.end());d.preIncrement()){const p=d.ptr().first,f=d.ptr().second;p==e?this.setWidth(f):p==s&&this.setHeight(f)}for(const d=t.begin();d.notEqual(t.end());d.preIncrement()){const p=d.ptr().first,f=d.ptr().second;p==r?this.setX(f):p==i?this.setY(f):p==o?this.centerX(f):p==a?this.centerY(f):p==l?this.top(f):p==c?this.bottom(f):p==u?this.left(f):p==h&&this.right(f)}}}var pm;(n=>{n.CubismModelMatrix=Zy})(pm||(pm={}));class ft{constructor(t,e){this.x=t,this.y=e,this.x=t??0,this.y=e??0}add(t){const e=new ft(0,0);return e.x=this.x+t.x,e.y=this.y+t.y,e}substract(t){const e=new ft(0,0);return e.x=this.x-t.x,e.y=this.y-t.y,e}multiply(t){const e=new ft(0,0);return e.x=this.x*t.x,e.y=this.y*t.y,e}multiplyByScaler(t){return this.multiply(new ft(t,t))}division(t){const e=new ft(0,0);return e.x=this.x/t.x,e.y=this.y/t.y,e}divisionByScalar(t){return this.division(new ft(t,t))}getLength(){return Math.sqrt(this.x*this.x+this.y*this.y)}getDistanceWith(t){return Math.sqrt((this.x-t.x)*(this.x-t.x)+(this.y-t.y)*(this.y-t.y))}dot(t){return this.x*t.x+this.y*t.y}normalize(){const t=Math.pow(this.x*this.x+this.y*this.y,.5);this.x=this.x/t,this.y=this.y/t}isEqual(t){return this.x==t.x&&this.y==t.y}isNotEqual(t){return!this.isEqual(t)}}var fm;(n=>{n.CubismVector2=ft})(fm||(fm={}));const Di=class Di{static range(t,e,s){return t<e?t=e:t>s&&(t=s),t}static sin(t){return Math.sin(t)}static cos(t){return Math.cos(t)}static abs(t){return Math.abs(t)}static sqrt(t){return Math.sqrt(t)}static cbrt(t){if(t===0)return t;let e=t;const s=e<0;s&&(e=-e);let r;return e===1/0?r=1/0:(r=Math.exp(Math.log(e)/3),r=(e/(r*r)+2*r)/3),s?-r:r}static getEasingSine(t){return t<0?0:t>1?1:.5-.5*this.cos(t*Math.PI)}static max(t,e){return t>e?t:e}static min(t,e){return t>e?e:t}static degreesToRadian(t){return t/180*Math.PI}static radianToDegrees(t){return t*180/Math.PI}static directionToRadian(t,e){const s=Math.atan2(e.y,e.x),r=Math.atan2(t.y,t.x);let i=s-r;for(;i<-Math.PI;)i+=Math.PI*2;for(;i>Math.PI;)i-=Math.PI*2;return i}static directionToDegrees(t,e){const s=this.directionToRadian(t,e);let r=this.radianToDegrees(s);return e.x-t.x>0&&(r=-r),r}static radianToDirection(t){const e=new ft;return e.x=this.sin(t),e.y=this.cos(t),e}static quadraticEquation(t,e,s){return this.abs(t)<Di.Epsilon?this.abs(e)<Di.Epsilon?-s:-s/e:-(e+this.sqrt(e*e-4*t*s))/(2*t)}static cardanoAlgorithmForBezier(t,e,s,r){if(this.sqrt(t)<Di.Epsilon)return this.range(this.quadraticEquation(e,s,r),0,1);const i=e/t,o=s/t,a=r/t,l=(3*o-i*i)/3,c=l/3,u=(2*i*i*i-9*i*o+27*a)/27,h=u/2,d=h*h+c*c*c,p=.5,f=p+.01;if(d<0){const w=-l/3,b=w*w*w,C=this.sqrt(b),_=-u/(2*C),I=this.range(_,-1,1),v=Math.acos(I),T=2*this.cbrt(C),D=T*this.cos(v/3)-i/3;if(this.abs(D-p)<f)return this.range(D,0,1);const P=T*this.cos((v+2*Math.PI)/3)-i/3;if(this.abs(P-p)<f)return this.range(P,0,1);const B=T*this.cos((v+4*Math.PI)/3)-i/3;return this.range(B,0,1)}if(d==0){let w;h<0?w=this.cbrt(-h):w=-this.cbrt(h);const b=2*w-i/3;if(this.abs(b-p)<f)return this.range(b,0,1);const C=-w-i/3;return this.range(C,0,1)}const m=this.sqrt(d),g=this.cbrt(m-h),x=this.cbrt(m+h),y=g-x-i/3;return this.range(y,0,1)}static mod(t,e){if(!isFinite(t)||e===0||isNaN(t)||isNaN(e))return console.warn(`divided: ${t}, divisor: ${e} mod() returns 'NaN'.`),NaN;const s=Math.abs(t),r=Math.abs(e);let i=s-Math.floor(s/r)*r;return i*=Math.sign(t),i}constructor(){}};Di.Epsilon=1e-5;let wt=Di;var gm;(n=>{n.CubismMath=wt})(gm||(gm={}));const Sh=30,mm=.01;class Qy{constructor(){this._faceTargetX=0,this._faceTargetY=0,this._faceX=0,this._faceY=0,this._faceVX=0,this._faceVY=0,this._lastTimeSeconds=0,this._userTimeSeconds=0}update(t){this._userTimeSeconds+=t;const s=40/10*1/Sh;if(this._lastTimeSeconds==0){this._lastTimeSeconds=this._userTimeSeconds;return}const r=(this._userTimeSeconds-this._lastTimeSeconds)*Sh;this._lastTimeSeconds=this._userTimeSeconds;const o=.15*Sh,a=r*s/o,l=this._faceTargetX-this._faceX,c=this._faceTargetY-this._faceY;if(wt.abs(l)<=mm&&wt.abs(c)<=mm)return;const u=wt.sqrt(l*l+c*c),h=s*l/u,d=s*c/u;let p=h-this._faceVX,f=d-this._faceVY;const m=wt.sqrt(p*p+f*f);(m<-a||m>a)&&(p*=a/m,f*=a/m),this._faceVX+=p,this._faceVY+=f;{const g=.5*(wt.sqrt(a*a+16*a*u-8*a*u)-a),x=wt.sqrt(this._faceVX*this._faceVX+this._faceVY*this._faceVY);x>g&&(this._faceVX*=g/x,this._faceVY*=g/x)}this._faceX+=this._faceVX,this._faceY+=this._faceVY}getX(){return this._faceX}getY(){return this._faceY}set(t,e){this._faceTargetX=t,this._faceTargetY=e}}var xm;(n=>{n.CubismTargetPoint=Qy})(xm||(xm={}));class Wi{constructor(){this.setFinishedMotionHandler=t=>this._onFinishedMotion=t,this.getFinishedMotionHandler=()=>this._onFinishedMotion,this._fadeInSeconds=-1,this._fadeOutSeconds=-1,this._weight=1,this._offsetSeconds=0,this._firedEventValues=new ct}static delete(t){t.release(),t=null}release(){this._weight=0}updateParameters(t,e,s){if(!e.isAvailable()||e.isFinished())return;this.setupMotionQueueEntry(e,s);const r=this.updateFadeWeight(e,s);this.doUpdateParameters(t,s,r,e),e.getEndTime()>0&&e.getEndTime()<s&&e.setIsFinished(!0)}setupMotionQueueEntry(t,e){if(t==null||t.isStarted()||!t.isAvailable())return;t.setIsStarted(!0),t.setStartTime(e-this._offsetSeconds),t.setFadeInStartTime(e);const s=this.getDuration();t.getEndTime()<0&&t.setEndTime(s<=0?-1:t.getStartTime()+s)}updateFadeWeight(t,e){t==null&&Od.print(Fr.LogLevel_Error,"motionQueueEntry is null.");let s=this._weight;const r=this._fadeInSeconds==0?1:wt.getEasingSine((e-t.getFadeInStartTime())/this._fadeInSeconds),i=this._fadeOutSeconds==0||t.getEndTime()<0?1:wt.getEasingSine((t.getEndTime()-e)/this._fadeOutSeconds);return s=s*r*i,t.setState(e,s),qn(0<=s&&s<=1),s}setFadeInTime(t){this._fadeInSeconds=t}setFadeOutTime(t){this._fadeOutSeconds=t}getFadeOutTime(){return this._fadeOutSeconds}getFadeInTime(){return this._fadeInSeconds}setWeight(t){this._weight=t}getWeight(){return this._weight}getDuration(){return-1}getLoopDuration(){return-1}setOffsetTime(t){this._offsetSeconds=t}getFiredEvent(t,e){return this._firedEventValues}isExistModelOpacity(){return!1}getModelOpacityIndex(){return-1}getModelOpacityId(t){return null}getModelOpacityValue(){return 1}}var ym;(n=>{n.ACubismMotion=Wi})(ym||(ym={}));const tv="FadeInTime",ev="FadeOutTime",bm="Parameters",nv="Id",sv="Value",Nl="Blend",rv="Add",iv="Multiply",ov="Overwrite",wm=1,gn=class gn extends Wi{static create(t,e){const s=new gn;return s.parse(t,e),s}doUpdateParameters(t,e,s,r){for(let i=0;i<this._parameters.getSize();++i){const o=this._parameters.at(i);switch(o.blendType){case 0:{t.addParameterValueById(o.parameterId,o.value,s);break}case 1:{t.multiplyParameterValueById(o.parameterId,o.value,s);break}case 2:{t.setParameterValueById(o.parameterId,o.value,s);break}}}}calculateExpressionParameters(t,e,s,r,i,o){if(!(s==null||r==null)&&s.isAvailable()){this._fadeWeight=this.updateFadeWeight(s,e);for(let a=0;a<r.getSize();++a){const l=r.at(a);if(l.parameterId==null)continue;const c=l.overwriteValue=t.getParameterValueById(l.parameterId),u=this.getExpressionParameters();let h=-1;for(let g=0;g<u.getSize();++g)if(l.parameterId==u.at(g).parameterId){h=g;break}if(h<0){i==0?(l.additiveValue=gn.DefaultAdditiveValue,l.multiplyValue=gn.DefaultMultiplyValue,l.overwriteValue=c):(l.additiveValue=this.calculateValue(l.additiveValue,gn.DefaultAdditiveValue,o),l.multiplyValue=this.calculateValue(l.multiplyValue,gn.DefaultMultiplyValue,o),l.overwriteValue=this.calculateValue(l.overwriteValue,c,o));continue}const d=u.at(h).value;let p,f,m;switch(u.at(h).blendType){case 0:p=d,f=gn.DefaultMultiplyValue,m=c;break;case 1:p=gn.DefaultAdditiveValue,f=d,m=c;break;case 2:p=gn.DefaultAdditiveValue,f=gn.DefaultMultiplyValue,m=d;break;default:return}i==0?(l.additiveValue=p,l.multiplyValue=f,l.overwriteValue=m):(l.additiveValue=l.additiveValue*(1-o)+p*o,l.multiplyValue=l.multiplyValue*(1-o)+f*o,l.overwriteValue=l.overwriteValue*(1-o)+m*o)}}}getExpressionParameters(){return this._parameters}getFadeWeight(){return this._fadeWeight}parse(t,e){const s=Pe.create(t,e);if(!s)return;const r=s.getRoot();this.setFadeInTime(r.getValueByString(tv).toFloat(wm)),this.setFadeOutTime(r.getValueByString(ev).toFloat(wm));const i=r.getValueByString(bm).getSize();this._parameters.prepareCapacity(i);for(let o=0;o<i;++o){const a=r.getValueByString(bm).getValueByIndex(o),l=Nt.getIdManager().getId(a.getValueByString(nv).getRawString()),c=a.getValueByString(sv).toFloat();let u;a.getValueByString(Nl).isNull()||a.getValueByString(Nl).getString()==rv?u=0:a.getValueByString(Nl).getString()==iv?u=1:a.getValueByString(Nl).getString()==ov?u=2:u=0;const h=new eb;h.parameterId=l,h.blendType=u,h.value=c,this._parameters.pushBack(h)}Pe.delete(s)}calculateValue(t,e,s){return t*(1-s)+e*s}constructor(){super(),this._parameters=new ct,this._fadeWeight=0}};gn.DefaultAdditiveValue=0,gn.DefaultMultiplyValue=1;let Ys=gn;var tb=(n=>(n[n.Additive=0]="Additive",n[n.Multiply=1]="Multiply",n[n.Overwrite=2]="Overwrite",n))(tb||{});class eb{}var Cm;(n=>{n.CubismExpressionMotion=Ys,n.ExpressionBlendType=tb,n.ExpressionParameter=eb})(Cm||(Cm={}));class nb{constructor(){this._autoDelete=!1,this._motion=null,this._available=!0,this._finished=!1,this._started=!1,this._startTimeSeconds=-1,this._fadeInStartTimeSeconds=0,this._endTimeSeconds=-1,this._stateTimeSeconds=0,this._stateWeight=0,this._lastEventCheckSeconds=0,this._motionQueueEntryHandle=this,this._fadeOutSeconds=0,this._isTriggeredFadeOut=!1}release(){this._autoDelete&&this._motion&&Wi.delete(this._motion)}setFadeOut(t){this._fadeOutSeconds=t,this._isTriggeredFadeOut=!0}startFadeOut(t,e){const s=e+t;this._isTriggeredFadeOut=!0,(this._endTimeSeconds<0||s<this._endTimeSeconds)&&(this._endTimeSeconds=s)}isFinished(){return this._finished}isStarted(){return this._started}getStartTime(){return this._startTimeSeconds}getFadeInStartTime(){return this._fadeInStartTimeSeconds}getEndTime(){return this._endTimeSeconds}setStartTime(t){this._startTimeSeconds=t}setFadeInStartTime(t){this._fadeInStartTimeSeconds=t}setEndTime(t){this._endTimeSeconds=t}setIsFinished(t){this._finished=t}setIsStarted(t){this._started=t}isAvailable(){return this._available}setIsAvailable(t){this._available=t}setState(t,e){this._stateTimeSeconds=t,this._stateWeight=e}getStateTime(){return this._stateTimeSeconds}getStateWeight(){return this._stateWeight}getLastCheckEventSeconds(){return this._lastEventCheckSeconds}setLastCheckEventSeconds(t){this._lastEventCheckSeconds=t}isTriggeredFadeOut(){return this._isTriggeredFadeOut}getFadeOutSeconds(){return this._fadeOutSeconds}getCubismMotion(){return this._motion}}var _m;(n=>{n.CubismMotionQueueEntry=nb})(_m||(_m={}));class Vd{constructor(){this._userTimeSeconds=0,this._eventCallBack=null,this._eventCustomData=null,this._motions=new ct}release(){for(let t=0;t<this._motions.getSize();++t)this._motions.at(t)&&(this._motions.at(t).release(),this._motions.set(t,null));this._motions=null}startMotion(t,e,s){if(t==null)return rc;let r=null;for(let i=0;i<this._motions.getSize();++i)r=this._motions.at(i),r!=null&&r.setFadeOut(r._motion.getFadeOutTime());return r=new nb,r._autoDelete=e,r._motion=t,this._motions.pushBack(r),r._motionQueueEntryHandle}isFinished(){for(let t=this._motions.begin();t.notEqual(this._motions.end());){let e=t.ptr();if(e==null){t=this._motions.erase(t);continue}if(e._motion==null){e.release(),e=null,t=this._motions.erase(t);continue}if(e.isFinished())t.preIncrement();else return!1}return!0}isFinishedByHandle(t){for(let e=this._motions.begin();e.notEqual(this._motions.end());e.increment()){const s=e.ptr();if(s!=null&&s._motionQueueEntryHandle==t&&!s.isFinished())return!1}return!0}stopAllMotions(){for(let t=this._motions.begin();t.notEqual(this._motions.end());){let e=t.ptr();if(e==null){t=this._motions.erase(t);continue}e.release(),e=null,t=this._motions.erase(t)}}getCubismMotionQueueEntries(){return this._motions}getCubismMotionQueueEntry(t){for(let e=this._motions.begin();e.notEqual(this._motions.end());e.preIncrement()){const s=e.ptr();if(s!=null&&s._motionQueueEntryHandle==t)return s}return null}setEventCallback(t,e=null){this._eventCallBack=t,this._eventCustomData=e}doUpdateMotion(t,e){let s=!1;for(let r=this._motions.begin();r.notEqual(this._motions.end());){let i=r.ptr();if(i==null){r=this._motions.erase(r);continue}const o=i._motion;if(o==null){i.release(),i=null,r=this._motions.erase(r);continue}o.updateParameters(t,i,e),s=!0;const a=o.getFiredEvent(i.getLastCheckEventSeconds()-i.getStartTime(),e-i.getStartTime());for(let l=0;l<a.getSize();++l)this._eventCallBack(this,a.at(l),this._eventCustomData);i.setLastCheckEventSeconds(e),i.isFinished()?(i.release(),i=null,r=this._motions.erase(r)):(i.isTriggeredFadeOut()&&i.startFadeOut(i.getFadeOutSeconds(),e),r.preIncrement())}return s}}const rc=-1;var Sm;(n=>{n.CubismMotionQueueManager=Vd,n.InvalidMotionQueueEntryHandleValue=rc})(Sm||(Sm={}));class av{}class sb extends Vd{constructor(){super(),this._currentPriority=0,this._reservePriority=0,this._expressionParameterValues=new ct,this._fadeWeights=new ct}release(){this._expressionParameterValues&&($o(this._expressionParameterValues),this._expressionParameterValues=null),this._fadeWeights&&($o(this._fadeWeights),this._fadeWeights=null)}getCurrentPriority(){return this._currentPriority}getReservePriority(){return this._reservePriority}getFadeWeight(t){return this._fadeWeights.at(t)}setReservePriority(t){this._reservePriority=t}startMotionPriority(t,e,s){return s==this.getReservePriority()&&this.setReservePriority(0),this._currentPriority=s,this._fadeWeights.pushBack(0),this.startMotion(t,e)}updateMotion(t,e){this._userTimeSeconds+=e;let s=!1;const r=this.getCubismMotionQueueEntries();let i=0,o=0;for(let a=this._motions.begin();a.notEqual(this._motions.end());){const l=a.ptr();if(l==null){a=r.erase(a);continue}const c=l.getCubismMotion();if(c==null){$o(l),a=r.erase(a);continue}const u=c.getExpressionParameters();if(l.isAvailable())for(let h=0;h<u.getSize();++h){if(u.at(h).parameterId==null)continue;let d=-1;for(let f=0;f<this._expressionParameterValues.getSize();++f)if(this._expressionParameterValues.at(f).parameterId==u.at(h).parameterId){d=f;break}if(d>=0)continue;const p=new av;p.parameterId=u.at(h).parameterId,p.additiveValue=Ys.DefaultAdditiveValue,p.multiplyValue=Ys.DefaultMultiplyValue,p.overwriteValue=t.getParameterValueById(p.parameterId),this._expressionParameterValues.pushBack(p)}c.setupMotionQueueEntry(l,this._userTimeSeconds),this._fadeWeights.set(o,c.updateFadeWeight(l,this._userTimeSeconds)),c.calculateExpressionParameters(t,this._userTimeSeconds,l,this._expressionParameterValues,o,this._fadeWeights.at(o)),i+=c.getFadeInTime()==0?1:wt.getEasingSine((this._userTimeSeconds-l.getFadeInStartTime())/c.getFadeInTime()),s=!0,l.isTriggeredFadeOut()&&l.startFadeOut(l.getFadeOutSeconds(),this._userTimeSeconds),a.preIncrement(),++o}if(r.getSize()>1&&(r.at(r.getSize()-1).getCubismMotion(),this._fadeWeights.at(this._fadeWeights.getSize()-1)>=1))for(let l=r.getSize()-2;l>=0;--l){const c=r.at(l);$o(c),r.remove(l),this._fadeWeights.remove(l)}i>1&&(i=1);for(let a=0;a<this._expressionParameterValues.getSize();++a){const l=this._expressionParameterValues.at(a);t.setParameterValueById(l.parameterId,(l.overwriteValue+l.additiveValue)*l.multiplyValue,i),l.additiveValue=Ys.DefaultAdditiveValue,l.multiplyValue=Ys.DefaultMultiplyValue}return s}}var Im;(n=>{n.CubismExpressionMotionManager=sb})(Im||(Im={}));var Un=(n=>(n[n.CubismMotionCurveTarget_Model=0]="CubismMotionCurveTarget_Model",n[n.CubismMotionCurveTarget_Parameter=1]="CubismMotionCurveTarget_Parameter",n[n.CubismMotionCurveTarget_PartOpacity=2]="CubismMotionCurveTarget_PartOpacity",n))(Un||{}),Gn=(n=>(n[n.CubismMotionSegmentType_Linear=0]="CubismMotionSegmentType_Linear",n[n.CubismMotionSegmentType_Bezier=1]="CubismMotionSegmentType_Bezier",n[n.CubismMotionSegmentType_Stepped=2]="CubismMotionSegmentType_Stepped",n[n.CubismMotionSegmentType_InverseStepped=3]="CubismMotionSegmentType_InverseStepped",n))(Gn||{});class zd{constructor(){this.time=0,this.value=0}}class rb{constructor(){this.evaluate=null,this.basePointIndex=0,this.segmentType=0}}class ib{constructor(){this.type=0,this.segmentCount=0,this.baseSegmentIndex=0,this.fadeInTime=0,this.fadeOutTime=0}}class ob{constructor(){this.fireTime=0}}class ab{constructor(){this.duration=0,this.loop=!1,this.curveCount=0,this.eventCount=0,this.fps=0,this.curves=new ct,this.segments=new ct,this.points=new ct,this.events=new ct}}var vm;(n=>{n.CubismMotionCurve=ib,n.CubismMotionCurveTarget=Un,n.CubismMotionData=ab,n.CubismMotionEvent=ob,n.CubismMotionPoint=zd,n.CubismMotionSegment=rb,n.CubismMotionSegmentType=Gn})(vm||(vm={}));const fn="Meta",lv="Duration",cv="Loop",uv="AreBeziersRestricted",hv="CurveCount",dv="Fps",pv="TotalSegmentCount",fv="TotalPointCount",Hs="Curves",gv="Target",mv="Id",El="FadeInTime",Rl="FadeOutTime",km="Segments",$m="UserData",xv="UserDataCount",yv="TotalUserDataSize",bv="Time",wv="Value";class lb{constructor(t,e){this._json=Pe.create(t,e)}release(){Pe.delete(this._json)}getMotionDuration(){return this._json.getRoot().getValueByString(fn).getValueByString(lv).toFloat()}isMotionLoop(){return this._json.getRoot().getValueByString(fn).getValueByString(cv).toBoolean()}getEvaluationOptionFlag(t){return t==0?this._json.getRoot().getValueByString(fn).getValueByString(uv).toBoolean():!1}getMotionCurveCount(){return this._json.getRoot().getValueByString(fn).getValueByString(hv).toInt()}getMotionFps(){return this._json.getRoot().getValueByString(fn).getValueByString(dv).toFloat()}getMotionTotalSegmentCount(){return this._json.getRoot().getValueByString(fn).getValueByString(pv).toInt()}getMotionTotalPointCount(){return this._json.getRoot().getValueByString(fn).getValueByString(fv).toInt()}isExistMotionFadeInTime(){return!this._json.getRoot().getValueByString(fn).getValueByString(El).isNull()}isExistMotionFadeOutTime(){return!this._json.getRoot().getValueByString(fn).getValueByString(Rl).isNull()}getMotionFadeInTime(){return this._json.getRoot().getValueByString(fn).getValueByString(El).toFloat()}getMotionFadeOutTime(){return this._json.getRoot().getValueByString(fn).getValueByString(Rl).toFloat()}getMotionCurveTarget(t){return this._json.getRoot().getValueByString(Hs).getValueByIndex(t).getValueByString(gv).getRawString()}getMotionCurveId(t){return Nt.getIdManager().getId(this._json.getRoot().getValueByString(Hs).getValueByIndex(t).getValueByString(mv).getRawString())}isExistMotionCurveFadeInTime(t){return!this._json.getRoot().getValueByString(Hs).getValueByIndex(t).getValueByString(El).isNull()}isExistMotionCurveFadeOutTime(t){return!this._json.getRoot().getValueByString(Hs).getValueByIndex(t).getValueByString(Rl).isNull()}getMotionCurveFadeInTime(t){return this._json.getRoot().getValueByString(Hs).getValueByIndex(t).getValueByString(El).toFloat()}getMotionCurveFadeOutTime(t){return this._json.getRoot().getValueByString(Hs).getValueByIndex(t).getValueByString(Rl).toFloat()}getMotionCurveSegmentCount(t){return this._json.getRoot().getValueByString(Hs).getValueByIndex(t).getValueByString(km).getVector().getSize()}getMotionCurveSegment(t,e){return this._json.getRoot().getValueByString(Hs).getValueByIndex(t).getValueByString(km).getValueByIndex(e).toFloat()}getEventCount(){return this._json.getRoot().getValueByString(fn).getValueByString(xv).toInt()}getTotalEventValueSize(){return this._json.getRoot().getValueByString(fn).getValueByString(yv).toInt()}getEventTime(t){return this._json.getRoot().getValueByString($m).getValueByIndex(t).getValueByString(bv).toFloat()}getEventValue(t){return new An(this._json.getRoot().getValueByString($m).getValueByIndex(t).getValueByString(wv).getRawString())}}var cb=(n=>(n[n.EvaluationOptionFlag_AreBeziersRistricted=0]="EvaluationOptionFlag_AreBeziersRistricted",n))(cb||{}),Tm;(n=>{n.CubismMotionJson=lb})(Tm||(Tm={}));const Cv="EyeBlink",_v="LipSync",Sv="Model",Iv="Parameter",vv="PartOpacity",Dl="Opacity",kv=!1;function kn(n,t,e){const s=new zd;return s.time=n.time+(t.time-n.time)*e,s.value=n.value+(t.value-n.value)*e,s}function $v(n,t){let e=(t-n[0].time)/(n[1].time-n[0].time);return e<0&&(e=0),n[0].value+(n[1].value-n[0].value)*e}function Tv(n,t){let e=(t-n[0].time)/(n[3].time-n[0].time);e<0&&(e=0);const s=kn(n[0],n[1],e),r=kn(n[1],n[2],e),i=kn(n[2],n[3],e),o=kn(s,r,e),a=kn(r,i,e);return kn(o,a,e).value}function Nv(n,t){const e=t,s=n[0].time,r=n[3].time,i=n[1].time,o=n[2].time,a=r-3*o+3*i-s,l=3*o-6*i+3*s,c=3*i-3*s,u=s-e,h=wt.cardanoAlgorithmForBezier(a,l,c,u),d=kn(n[0],n[1],h),p=kn(n[1],n[2],h),f=kn(n[2],n[3],h),m=kn(d,p,h),g=kn(p,f,h);return kn(m,g,h).value}function Ev(n,t){return n[0].value}function Rv(n,t){return n[1].value}function Ih(n,t,e){const s=n.curves.at(t);let r=-1;const i=s.baseSegmentIndex+s.segmentCount;let o=0;for(let l=s.baseSegmentIndex;l<i;++l)if(o=n.segments.at(l).basePointIndex+(n.segments.at(l).segmentType==Gn.CubismMotionSegmentType_Bezier?3:1),n.points.at(o).time>e){r=l;break}if(r==-1)return n.points.at(o).value;const a=n.segments.at(r);return a.evaluate(n.points.get(a.basePointIndex),e)}class Vc extends Wi{static create(t,e,s){const r=new Vc;return r.parse(t,e),r._sourceFrameRate=r._motionData.fps,r._loopDurationSeconds=r._motionData.duration,r._onFinishedMotion=s,r}doUpdateParameters(t,e,s,r){this._modelCurveIdEyeBlink==null&&(this._modelCurveIdEyeBlink=Nt.getIdManager().getId(Cv)),this._modelCurveIdLipSync==null&&(this._modelCurveIdLipSync=Nt.getIdManager().getId(_v)),this._modelCurveIdOpacity==null&&(this._modelCurveIdOpacity=Nt.getIdManager().getId(Dl));let i=e-r.getStartTime();i<0&&(i=0);let o=Number.MAX_VALUE,a=Number.MAX_VALUE;const l=64;let c=0,u=0;this._eyeBlinkParameterIds.getSize()>l&&Vo("too many eye blink targets : {0}",this._eyeBlinkParameterIds.getSize()),this._lipSyncParameterIds.getSize()>l&&Vo("too many lip sync targets : {0}",this._lipSyncParameterIds.getSize());const h=this._fadeInSeconds<=0?1:wt.getEasingSine((e-r.getFadeInStartTime())/this._fadeInSeconds),d=this._fadeOutSeconds<=0||r.getEndTime()<0?1:wt.getEasingSine((r.getEndTime()-e)/this._fadeOutSeconds);let p,f,m,g=i;if(this._isLoop)for(;g>this._motionData.duration;)g-=this._motionData.duration;const x=this._motionData.curves;for(f=0;f<this._motionData.curveCount&&x.at(f).type==Un.CubismMotionCurveTarget_Model;++f)p=Ih(this._motionData,f,g),x.at(f).id==this._modelCurveIdEyeBlink?a=p:x.at(f).id==this._modelCurveIdLipSync?o=p:x.at(f).id==this._modelCurveIdOpacity&&(this._modelOpacity=p,t.setModelOapcity(this.getModelOpacityValue()));for(;f<this._motionData.curveCount&&x.at(f).type==Un.CubismMotionCurveTarget_Parameter;++f){if(m=t.getParameterIndex(x.at(f).id),m==-1)continue;const y=t.getParameterValueByIndex(m);if(p=Ih(this._motionData,f,g),a!=Number.MAX_VALUE){for(let b=0;b<this._eyeBlinkParameterIds.getSize()&&b<l;++b)if(this._eyeBlinkParameterIds.at(b)==x.at(f).id){p*=a,u|=1<<b;break}}if(o!=Number.MAX_VALUE){for(let b=0;b<this._lipSyncParameterIds.getSize()&&b<l;++b)if(this._lipSyncParameterIds.at(b)==x.at(f).id){p+=o,c|=1<<b;break}}let w;if(x.at(f).fadeInTime<0&&x.at(f).fadeOutTime<0)w=y+(p-y)*s;else{let b,C;x.at(f).fadeInTime<0?b=h:b=x.at(f).fadeInTime==0?1:wt.getEasingSine((e-r.getFadeInStartTime())/x.at(f).fadeInTime),x.at(f).fadeOutTime<0?C=d:C=x.at(f).fadeOutTime==0||r.getEndTime()<0?1:wt.getEasingSine((r.getEndTime()-e)/x.at(f).fadeOutTime);const _=this._weight*b*C;w=y+(p-y)*_}t.setParameterValueByIndex(m,w,1)}{if(a!=Number.MAX_VALUE)for(let y=0;y<this._eyeBlinkParameterIds.getSize()&&y<l;++y){const w=t.getParameterValueById(this._eyeBlinkParameterIds.at(y));if(u>>y&1)continue;const b=w+(a-w)*s;t.setParameterValueById(this._eyeBlinkParameterIds.at(y),b)}if(o!=Number.MAX_VALUE)for(let y=0;y<this._lipSyncParameterIds.getSize()&&y<l;++y){const w=t.getParameterValueById(this._lipSyncParameterIds.at(y));if(c>>y&1)continue;const b=w+(o-w)*s;t.setParameterValueById(this._lipSyncParameterIds.at(y),b)}}for(;f<this._motionData.curveCount&&x.at(f).type==Un.CubismMotionCurveTarget_PartOpacity;++f)m=t.getParameterIndex(x.at(f).id),m!=-1&&(p=Ih(this._motionData,f,g),t.setParameterValueByIndex(m,p));i>=this._motionData.duration&&(this._isLoop?(r.setStartTime(e),this._isLoopFadeIn&&r.setFadeInStartTime(e)):(this._onFinishedMotion&&this._onFinishedMotion(this),r.setIsFinished(!0))),this._lastWeight=s}setIsLoop(t){this._isLoop=t}isLoop(){return this._isLoop}setIsLoopFadeIn(t){this._isLoopFadeIn=t}isLoopFadeIn(){return this._isLoopFadeIn}getDuration(){return this._isLoop?-1:this._loopDurationSeconds}getLoopDuration(){return this._loopDurationSeconds}setParameterFadeInTime(t,e){const s=this._motionData.curves;for(let r=0;r<this._motionData.curveCount;++r)if(t==s.at(r).id){s.at(r).fadeInTime=e;return}}setParameterFadeOutTime(t,e){const s=this._motionData.curves;for(let r=0;r<this._motionData.curveCount;++r)if(t==s.at(r).id){s.at(r).fadeOutTime=e;return}}getParameterFadeInTime(t){const e=this._motionData.curves;for(let s=0;s<this._motionData.curveCount;++s)if(t==e.at(s).id)return e.at(s).fadeInTime;return-1}getParameterFadeOutTime(t){const e=this._motionData.curves;for(let s=0;s<this._motionData.curveCount;++s)if(t==e.at(s).id)return e.at(s).fadeOutTime;return-1}setEffectIds(t,e){this._eyeBlinkParameterIds=t,this._lipSyncParameterIds=e}constructor(){super(),this._sourceFrameRate=30,this._loopDurationSeconds=-1,this._isLoop=!1,this._isLoopFadeIn=!0,this._lastWeight=0,this._motionData=null,this._modelCurveIdEyeBlink=null,this._modelCurveIdLipSync=null,this._modelCurveIdOpacity=null,this._eyeBlinkParameterIds=null,this._lipSyncParameterIds=null,this._modelOpacity=1}release(){this._motionData=void 0,this._motionData=null}parse(t,e){this._motionData=new ab;let s=new lb(t,e);if(!s){s.release(),s=void 0;return}this._motionData.duration=s.getMotionDuration(),this._motionData.loop=s.isMotionLoop(),this._motionData.curveCount=s.getMotionCurveCount(),this._motionData.fps=s.getMotionFps(),this._motionData.eventCount=s.getEventCount();const r=s.getEvaluationOptionFlag(cb.EvaluationOptionFlag_AreBeziersRistricted);s.isExistMotionFadeInTime()?this._fadeInSeconds=s.getMotionFadeInTime()<0?1:s.getMotionFadeInTime():this._fadeInSeconds=1,s.isExistMotionFadeOutTime()?this._fadeOutSeconds=s.getMotionFadeOutTime()<0?1:s.getMotionFadeOutTime():this._fadeOutSeconds=1,this._motionData.curves.updateSize(this._motionData.curveCount,ib,!0),this._motionData.segments.updateSize(s.getMotionTotalSegmentCount(),rb,!0),this._motionData.points.updateSize(s.getMotionTotalPointCount(),zd,!0),this._motionData.events.updateSize(this._motionData.eventCount,ob,!0);let i=0,o=0;for(let a=0;a<this._motionData.curveCount;++a){s.getMotionCurveTarget(a)==Sv?this._motionData.curves.at(a).type=Un.CubismMotionCurveTarget_Model:s.getMotionCurveTarget(a)==Iv?this._motionData.curves.at(a).type=Un.CubismMotionCurveTarget_Parameter:s.getMotionCurveTarget(a)==vv?this._motionData.curves.at(a).type=Un.CubismMotionCurveTarget_PartOpacity:qs('Warning : Unable to get segment type from Curve! The number of "CurveCount" may be incorrect!'),this._motionData.curves.at(a).id=s.getMotionCurveId(a),this._motionData.curves.at(a).baseSegmentIndex=o,this._motionData.curves.at(a).fadeInTime=s.isExistMotionCurveFadeInTime(a)?s.getMotionCurveFadeInTime(a):-1,this._motionData.curves.at(a).fadeOutTime=s.isExistMotionCurveFadeOutTime(a)?s.getMotionCurveFadeOutTime(a):-1;for(let l=0;l<s.getMotionCurveSegmentCount(a);){switch(l==0?(this._motionData.segments.at(o).basePointIndex=i,this._motionData.points.at(i).time=s.getMotionCurveSegment(a,l),this._motionData.points.at(i).value=s.getMotionCurveSegment(a,l+1),i+=1,l+=2):this._motionData.segments.at(o).basePointIndex=i-1,s.getMotionCurveSegment(a,l)){case Gn.CubismMotionSegmentType_Linear:{this._motionData.segments.at(o).segmentType=Gn.CubismMotionSegmentType_Linear,this._motionData.segments.at(o).evaluate=$v,this._motionData.points.at(i).time=s.getMotionCurveSegment(a,l+1),this._motionData.points.at(i).value=s.getMotionCurveSegment(a,l+2),i+=1,l+=3;break}case Gn.CubismMotionSegmentType_Bezier:{this._motionData.segments.at(o).segmentType=Gn.CubismMotionSegmentType_Bezier,r||kv?this._motionData.segments.at(o).evaluate=Tv:this._motionData.segments.at(o).evaluate=Nv,this._motionData.points.at(i).time=s.getMotionCurveSegment(a,l+1),this._motionData.points.at(i).value=s.getMotionCurveSegment(a,l+2),this._motionData.points.at(i+1).time=s.getMotionCurveSegment(a,l+3),this._motionData.points.at(i+1).value=s.getMotionCurveSegment(a,l+4),this._motionData.points.at(i+2).time=s.getMotionCurveSegment(a,l+5),this._motionData.points.at(i+2).value=s.getMotionCurveSegment(a,l+6),i+=3,l+=7;break}case Gn.CubismMotionSegmentType_Stepped:{this._motionData.segments.at(o).segmentType=Gn.CubismMotionSegmentType_Stepped,this._motionData.segments.at(o).evaluate=Ev,this._motionData.points.at(i).time=s.getMotionCurveSegment(a,l+1),this._motionData.points.at(i).value=s.getMotionCurveSegment(a,l+2),i+=1,l+=3;break}case Gn.CubismMotionSegmentType_InverseStepped:{this._motionData.segments.at(o).segmentType=Gn.CubismMotionSegmentType_InverseStepped,this._motionData.segments.at(o).evaluate=Rv,this._motionData.points.at(i).time=s.getMotionCurveSegment(a,l+1),this._motionData.points.at(i).value=s.getMotionCurveSegment(a,l+2),i+=1,l+=3;break}default:{qn(0);break}}++this._motionData.curves.at(a).segmentCount,++o}}for(let a=0;a<s.getEventCount();++a)this._motionData.events.at(a).fireTime=s.getEventTime(a),this._motionData.events.at(a).value=s.getEventValue(a);s.release(),s=void 0,s=null}getFiredEvent(t,e){this._firedEventValues.updateSize(0);for(let s=0;s<this._motionData.eventCount;++s)this._motionData.events.at(s).fireTime>t&&this._motionData.events.at(s).fireTime<=e&&this._firedEventValues.pushBack(new An(this._motionData.events.at(s).value.s));return this._firedEventValues}isExistModelOpacity(){for(let t=0;t<this._motionData.curveCount;t++){const e=this._motionData.curves.at(t);if(e.type==Un.CubismMotionCurveTarget_Model&&e.id.getString().s.localeCompare(Dl)==0)return!0}return!1}getModelOpacityIndex(){if(this.isExistModelOpacity())for(let t=0;t<this._motionData.curveCount;t++){const e=this._motionData.curves.at(t);if(e.type==Un.CubismMotionCurveTarget_Model&&e.id.getString().s.localeCompare(Dl)==0)return t}return-1}getModelOpacityId(t){if(t!=-1){const e=this._motionData.curves.at(t);if(e.type==Un.CubismMotionCurveTarget_Model&&e.id.getString().s.localeCompare(Dl)==0)return Nt.getIdManager().getId(e.id.getString().s)}return null}getModelOpacityValue(){return this._modelOpacity}}var Nm;(n=>{n.CubismMotion=Vc})(Nm||(Nm={}));class ub extends Vd{constructor(){super(),this._currentPriority=0,this._reservePriority=0}getCurrentPriority(){return this._currentPriority}getReservePriority(){return this._reservePriority}setReservePriority(t){this._reservePriority=t}startMotionPriority(t,e,s){return s==this._reservePriority&&(this._reservePriority=0),this._currentPriority=s,super.startMotion(t,e)}updateMotion(t,e){this._userTimeSeconds+=e;const s=super.doUpdateMotion(t,this._userTimeSeconds);return this.isFinished()&&(this._currentPriority=0),s}reserveMotion(t){return t<=this._reservePriority||t<=this._currentPriority?!1:(this._reservePriority=t,!0)}}var Em;(n=>{n.CubismMotionManager=ub})(Em||(Em={}));var ic=(n=>(n[n.CubismPhysicsTargetType_Parameter=0]="CubismPhysicsTargetType_Parameter",n))(ic||{}),Xs=(n=>(n[n.CubismPhysicsSource_X=0]="CubismPhysicsSource_X",n[n.CubismPhysicsSource_Y=1]="CubismPhysicsSource_Y",n[n.CubismPhysicsSource_Angle=2]="CubismPhysicsSource_Angle",n))(Xs||{});class Dv{constructor(){this.gravity=new ft(0,0),this.wind=new ft(0,0)}}class Ud{}class Kh{}class hb{constructor(){this.initialPosition=new ft(0,0),this.position=new ft(0,0),this.lastPosition=new ft(0,0),this.lastGravity=new ft(0,0),this.force=new ft(0,0),this.velocity=new ft(0,0)}}class db{constructor(){this.normalizationPosition=new Kh,this.normalizationAngle=new Kh}}class pb{constructor(){this.source=new Ud}}class fb{constructor(){this.destination=new Ud,this.translationScale=new ft(0,0)}}class gb{constructor(){this.settings=new ct,this.inputs=new ct,this.outputs=new ct,this.particles=new ct,this.gravity=new ft(0,0),this.wind=new ft(0,0),this.fps=0}}var Rm;(n=>{n.CubismPhysicsInput=pb,n.CubismPhysicsNormalization=Kh,n.CubismPhysicsOutput=fb,n.CubismPhysicsParameter=Ud,n.CubismPhysicsParticle=hb,n.CubismPhysicsRig=gb,n.CubismPhysicsSource=Xs,n.CubismPhysicsSubRig=db,n.CubismPhysicsTargetType=ic,n.PhysicsJsonEffectiveForces=Dv})(Rm||(Rm={}));const Co="Position",vh="X",kh="Y",$h="Angle",Dm="Type",Am="Id",ks="Meta",Al="EffectiveForces",Av="TotalInputCount",Fv="TotalOutputCount",Mv="PhysicsSettingCount",Fm="Gravity",Mm="Wind",Pv="VertexCount",Ov="Fps",ee="PhysicsSettings",Ci="Normalization",Pm="Minimum",Om="Maximum",Bm="Default",Lm="Reflect",Vm="Weight",_o="Input",Bv="Source",Ir="Output",Lv="Scale",Vv="VertexIndex",zv="Destination",vr="Vertices",Uv="Mobility",Wv="Delay",Gv="Radius",Hv="Acceleration";class mb{constructor(t,e){this._json=Pe.create(t,e)}release(){Pe.delete(this._json)}getGravity(){const t=new ft(0,0);return t.x=this._json.getRoot().getValueByString(ks).getValueByString(Al).getValueByString(Fm).getValueByString(vh).toFloat(),t.y=this._json.getRoot().getValueByString(ks).getValueByString(Al).getValueByString(Fm).getValueByString(kh).toFloat(),t}getWind(){const t=new ft(0,0);return t.x=this._json.getRoot().getValueByString(ks).getValueByString(Al).getValueByString(Mm).getValueByString(vh).toFloat(),t.y=this._json.getRoot().getValueByString(ks).getValueByString(Al).getValueByString(Mm).getValueByString(kh).toFloat(),t}getFps(){return this._json.getRoot().getValueByString(ks).getValueByString(Ov).toFloat(0)}getSubRigCount(){return this._json.getRoot().getValueByString(ks).getValueByString(Mv).toInt()}getTotalInputCount(){return this._json.getRoot().getValueByString(ks).getValueByString(Av).toInt()}getTotalOutputCount(){return this._json.getRoot().getValueByString(ks).getValueByString(Fv).toInt()}getVertexCount(){return this._json.getRoot().getValueByString(ks).getValueByString(Pv).toInt()}getNormalizationPositionMinimumValue(t){return this._json.getRoot().getValueByString(ee).getValueByIndex(t).getValueByString(Ci).getValueByString(Co).getValueByString(Pm).toFloat()}getNormalizationPositionMaximumValue(t){return this._json.getRoot().getValueByString(ee).getValueByIndex(t).getValueByString(Ci).getValueByString(Co).getValueByString(Om).toFloat()}getNormalizationPositionDefaultValue(t){return this._json.getRoot().getValueByString(ee).getValueByIndex(t).getValueByString(Ci).getValueByString(Co).getValueByString(Bm).toFloat()}getNormalizationAngleMinimumValue(t){return this._json.getRoot().getValueByString(ee).getValueByIndex(t).getValueByString(Ci).getValueByString($h).getValueByString(Pm).toFloat()}getNormalizationAngleMaximumValue(t){return this._json.getRoot().getValueByString(ee).getValueByIndex(t).getValueByString(Ci).getValueByString($h).getValueByString(Om).toFloat()}getNormalizationAngleDefaultValue(t){return this._json.getRoot().getValueByString(ee).getValueByIndex(t).getValueByString(Ci).getValueByString($h).getValueByString(Bm).toFloat()}getInputCount(t){return this._json.getRoot().getValueByString(ee).getValueByIndex(t).getValueByString(_o).getVector().getSize()}getInputWeight(t,e){return this._json.getRoot().getValueByString(ee).getValueByIndex(t).getValueByString(_o).getValueByIndex(e).getValueByString(Vm).toFloat()}getInputReflect(t,e){return this._json.getRoot().getValueByString(ee).getValueByIndex(t).getValueByString(_o).getValueByIndex(e).getValueByString(Lm).toBoolean()}getInputType(t,e){return this._json.getRoot().getValueByString(ee).getValueByIndex(t).getValueByString(_o).getValueByIndex(e).getValueByString(Dm).getRawString()}getInputSourceId(t,e){return Nt.getIdManager().getId(this._json.getRoot().getValueByString(ee).getValueByIndex(t).getValueByString(_o).getValueByIndex(e).getValueByString(Bv).getValueByString(Am).getRawString())}getOutputCount(t){return this._json.getRoot().getValueByString(ee).getValueByIndex(t).getValueByString(Ir).getVector().getSize()}getOutputVertexIndex(t,e){return this._json.getRoot().getValueByString(ee).getValueByIndex(t).getValueByString(Ir).getValueByIndex(e).getValueByString(Vv).toInt()}getOutputAngleScale(t,e){return this._json.getRoot().getValueByString(ee).getValueByIndex(t).getValueByString(Ir).getValueByIndex(e).getValueByString(Lv).toFloat()}getOutputWeight(t,e){return this._json.getRoot().getValueByString(ee).getValueByIndex(t).getValueByString(Ir).getValueByIndex(e).getValueByString(Vm).toFloat()}getOutputDestinationId(t,e){return Nt.getIdManager().getId(this._json.getRoot().getValueByString(ee).getValueByIndex(t).getValueByString(Ir).getValueByIndex(e).getValueByString(zv).getValueByString(Am).getRawString())}getOutputType(t,e){return this._json.getRoot().getValueByString(ee).getValueByIndex(t).getValueByString(Ir).getValueByIndex(e).getValueByString(Dm).getRawString()}getOutputReflect(t,e){return this._json.getRoot().getValueByString(ee).getValueByIndex(t).getValueByString(Ir).getValueByIndex(e).getValueByString(Lm).toBoolean()}getParticleCount(t){return this._json.getRoot().getValueByString(ee).getValueByIndex(t).getValueByString(vr).getVector().getSize()}getParticleMobility(t,e){return this._json.getRoot().getValueByString(ee).getValueByIndex(t).getValueByString(vr).getValueByIndex(e).getValueByString(Uv).toFloat()}getParticleDelay(t,e){return this._json.getRoot().getValueByString(ee).getValueByIndex(t).getValueByString(vr).getValueByIndex(e).getValueByString(Wv).toFloat()}getParticleAcceleration(t,e){return this._json.getRoot().getValueByString(ee).getValueByIndex(t).getValueByString(vr).getValueByIndex(e).getValueByString(Hv).toFloat()}getParticleRadius(t,e){return this._json.getRoot().getValueByString(ee).getValueByIndex(t).getValueByString(vr).getValueByIndex(e).getValueByString(Gv).toFloat()}getParticlePosition(t,e){const s=new ft(0,0);return s.x=this._json.getRoot().getValueByString(ee).getValueByIndex(t).getValueByString(vr).getValueByIndex(e).getValueByString(Co).getValueByString(vh).toFloat(),s.y=this._json.getRoot().getValueByString(ee).getValueByIndex(t).getValueByString(vr).getValueByIndex(e).getValueByString(Co).getValueByString(kh).toFloat(),s}}var zm;(n=>{n.CubismPhysicsJson=mb})(zm||(zm={}));const Um="X",Wm="Y",Gm="Angle",Xv=5,Yh=100,Hm=.001,jv=5;class Ho{static create(t,e){const s=new Ho;return s.parse(t,e),s._physicsRig.gravity.y=0,s}static delete(t){t!=null&&(t.release(),t=null)}parse(t,e){this._physicsRig=new gb;let s=new mb(t,e);this._physicsRig.gravity=s.getGravity(),this._physicsRig.wind=s.getWind(),this._physicsRig.subRigCount=s.getSubRigCount(),this._physicsRig.fps=s.getFps(),this._physicsRig.settings.updateSize(this._physicsRig.subRigCount,db,!0),this._physicsRig.inputs.updateSize(s.getTotalInputCount(),pb,!0),this._physicsRig.outputs.updateSize(s.getTotalOutputCount(),fb,!0),this._physicsRig.particles.updateSize(s.getVertexCount(),hb,!0),this._currentRigOutputs.clear(),this._previousRigOutputs.clear();let r=0,i=0,o=0;for(let a=0;a<this._physicsRig.settings.getSize();++a){this._physicsRig.settings.at(a).normalizationPosition.minimum=s.getNormalizationPositionMinimumValue(a),this._physicsRig.settings.at(a).normalizationPosition.maximum=s.getNormalizationPositionMaximumValue(a),this._physicsRig.settings.at(a).normalizationPosition.defalut=s.getNormalizationPositionDefaultValue(a),this._physicsRig.settings.at(a).normalizationAngle.minimum=s.getNormalizationAngleMinimumValue(a),this._physicsRig.settings.at(a).normalizationAngle.maximum=s.getNormalizationAngleMaximumValue(a),this._physicsRig.settings.at(a).normalizationAngle.defalut=s.getNormalizationAngleDefaultValue(a),this._physicsRig.settings.at(a).inputCount=s.getInputCount(a),this._physicsRig.settings.at(a).baseInputIndex=r;for(let u=0;u<this._physicsRig.settings.at(a).inputCount;++u)this._physicsRig.inputs.at(r+u).sourceParameterIndex=-1,this._physicsRig.inputs.at(r+u).weight=s.getInputWeight(a,u),this._physicsRig.inputs.at(r+u).reflect=s.getInputReflect(a,u),s.getInputType(a,u)==Um?(this._physicsRig.inputs.at(r+u).type=Xs.CubismPhysicsSource_X,this._physicsRig.inputs.at(r+u).getNormalizedParameterValue=Kv):s.getInputType(a,u)==Wm?(this._physicsRig.inputs.at(r+u).type=Xs.CubismPhysicsSource_Y,this._physicsRig.inputs.at(r+u).getNormalizedParameterValue=Yv):s.getInputType(a,u)==Gm&&(this._physicsRig.inputs.at(r+u).type=Xs.CubismPhysicsSource_Angle,this._physicsRig.inputs.at(r+u).getNormalizedParameterValue=Jv),this._physicsRig.inputs.at(r+u).source.targetType=ic.CubismPhysicsTargetType_Parameter,this._physicsRig.inputs.at(r+u).source.id=s.getInputSourceId(a,u);r+=this._physicsRig.settings.at(a).inputCount,this._physicsRig.settings.at(a).outputCount=s.getOutputCount(a),this._physicsRig.settings.at(a).baseOutputIndex=i;const l=new Xm;l.outputs.resize(this._physicsRig.settings.at(a).outputCount);const c=new Xm;c.outputs.resize(this._physicsRig.settings.at(a).outputCount);for(let u=0;u<this._physicsRig.settings.at(a).outputCount;++u)l.outputs.set(u,0),c.outputs.set(u,0),this._physicsRig.outputs.at(i+u).destinationParameterIndex=-1,this._physicsRig.outputs.at(i+u).vertexIndex=s.getOutputVertexIndex(a,u),this._physicsRig.outputs.at(i+u).angleScale=s.getOutputAngleScale(a,u),this._physicsRig.outputs.at(i+u).weight=s.getOutputWeight(a,u),this._physicsRig.outputs.at(i+u).destination.targetType=ic.CubismPhysicsTargetType_Parameter,this._physicsRig.outputs.at(i+u).destination.id=s.getOutputDestinationId(a,u),s.getOutputType(a,u)==Um?(this._physicsRig.outputs.at(i+u).type=Xs.CubismPhysicsSource_X,this._physicsRig.outputs.at(i+u).getValue=Zv,this._physicsRig.outputs.at(i+u).getScale=sk):s.getOutputType(a,u)==Wm?(this._physicsRig.outputs.at(i+u).type=Xs.CubismPhysicsSource_Y,this._physicsRig.outputs.at(i+u).getValue=Qv,this._physicsRig.outputs.at(i+u).getScale=rk):s.getOutputType(a,u)==Gm&&(this._physicsRig.outputs.at(i+u).type=Xs.CubismPhysicsSource_Angle,this._physicsRig.outputs.at(i+u).getValue=tk,this._physicsRig.outputs.at(i+u).getScale=ik),this._physicsRig.outputs.at(i+u).reflect=s.getOutputReflect(a,u);this._currentRigOutputs.pushBack(l),this._previousRigOutputs.pushBack(c),i+=this._physicsRig.settings.at(a).outputCount,this._physicsRig.settings.at(a).particleCount=s.getParticleCount(a),this._physicsRig.settings.at(a).baseParticleIndex=o;for(let u=0;u<this._physicsRig.settings.at(a).particleCount;++u)this._physicsRig.particles.at(o+u).mobility=s.getParticleMobility(a,u),this._physicsRig.particles.at(o+u).delay=s.getParticleDelay(a,u),this._physicsRig.particles.at(o+u).acceleration=s.getParticleAcceleration(a,u),this._physicsRig.particles.at(o+u).radius=s.getParticleRadius(a,u),this._physicsRig.particles.at(o+u).position=s.getParticlePosition(a,u);o+=this._physicsRig.settings.at(a).particleCount}this.initialize(),s.release(),s=void 0,s=null}stabilization(t){var m,g;let e,s,r,i;const o=new ft;let a,l,c,u;const h=t.getModel().parameters.values,d=t.getModel().parameters.maximumValues,p=t.getModel().parameters.minimumValues,f=t.getModel().parameters.defaultValues;(((m=this._parameterCaches)==null?void 0:m.length)??0)<t.getParameterCount()&&(this._parameterCaches=new Float32Array(t.getParameterCount())),(((g=this._parameterInputCaches)==null?void 0:g.length)??0)<t.getParameterCount()&&(this._parameterInputCaches=new Float32Array(t.getParameterCount()));for(let x=0;x<t.getParameterCount();++x)this._parameterCaches[x]=h[x],this._parameterInputCaches[x]=h[x];for(let x=0;x<this._physicsRig.subRigCount;++x){e={angle:0},o.x=0,o.y=0,a=this._physicsRig.settings.at(x),l=this._physicsRig.inputs.get(a.baseInputIndex),c=this._physicsRig.outputs.get(a.baseOutputIndex),u=this._physicsRig.particles.get(a.baseParticleIndex);for(let y=0;y<a.inputCount;++y)s=l[y].weight/Yh,l[y].sourceParameterIndex==-1&&(l[y].sourceParameterIndex=t.getParameterIndex(l[y].source.id)),l[y].getNormalizedParameterValue(o,e,h[l[y].sourceParameterIndex],p[l[y].sourceParameterIndex],d[l[y].sourceParameterIndex],f[l[y].sourceParameterIndex],a.normalizationPosition,a.normalizationAngle,l[y].reflect,s),this._parameterCaches[l[y].sourceParameterIndex]=h[l[y].sourceParameterIndex];r=wt.degreesToRadian(-e.angle),o.x=o.x*wt.cos(r)-o.y*wt.sin(r),o.y=o.x*wt.sin(r)+o.y*wt.cos(r),ak(u,a.particleCount,o,e.angle,this._options.wind,Hm*a.normalizationPosition.maximum);for(let y=0;y<a.outputCount;++y){const w=c[y].vertexIndex;if(c[y].destinationParameterIndex==-1&&(c[y].destinationParameterIndex=t.getParameterIndex(c[y].destination.id)),w<1||w>=a.particleCount)continue;let b=new ft;b=u[w].position.substract(u[w-1].position),i=c[y].getValue(b,u,w,c[y].reflect,this._options.gravity),this._currentRigOutputs.at(x).outputs.set(y,i),this._previousRigOutputs.at(x).outputs.set(y,i);const C=c[y].destinationParameterIndex,_=!Float32Array.prototype.slice&&"subarray"in Float32Array.prototype?JSON.parse(JSON.stringify(h.subarray(C))):h.slice(C);Th(_,p[C],d[C],i,c[y]);for(let I=C,v=0;I<this._parameterCaches.length;I++,v++)h[I]=this._parameterCaches[I]=_[v]}}}evaluate(t,e){var y,w;let s,r,i,o;const a=new ft;let l,c,u,h;if(0>=e)return;const d=t.getModel().parameters.values,p=t.getModel().parameters.maximumValues,f=t.getModel().parameters.minimumValues,m=t.getModel().parameters.defaultValues;let g;if(this._currentRemainTime+=e,this._currentRemainTime>jv&&(this._currentRemainTime=0),(((y=this._parameterCaches)==null?void 0:y.length)??0)<t.getParameterCount()&&(this._parameterCaches=new Float32Array(t.getParameterCount())),(((w=this._parameterInputCaches)==null?void 0:w.length)??0)<t.getParameterCount()){this._parameterInputCaches=new Float32Array(t.getParameterCount());for(let b=0;b<t.getParameterCount();++b)this._parameterInputCaches[b]=d[b]}for(this._physicsRig.fps>0?g=1/this._physicsRig.fps:g=e;this._currentRemainTime>=g;){for(let C=0;C<this._physicsRig.subRigCount;++C){l=this._physicsRig.settings.at(C),u=this._physicsRig.outputs.get(l.baseOutputIndex);for(let _=0;_<l.outputCount;++_)this._previousRigOutputs.at(C).outputs.set(_,this._currentRigOutputs.at(C).outputs.at(_))}const b=g/this._currentRemainTime;for(let C=0;C<t.getParameterCount();++C)this._parameterCaches[C]=this._parameterInputCaches[C]*(1-b)+d[C]*b,this._parameterInputCaches[C]=this._parameterCaches[C];for(let C=0;C<this._physicsRig.subRigCount;++C){s={angle:0},a.x=0,a.y=0,l=this._physicsRig.settings.at(C),c=this._physicsRig.inputs.get(l.baseInputIndex),u=this._physicsRig.outputs.get(l.baseOutputIndex),h=this._physicsRig.particles.get(l.baseParticleIndex);for(let _=0;_<l.inputCount;++_)r=c[_].weight/Yh,c[_].sourceParameterIndex==-1&&(c[_].sourceParameterIndex=t.getParameterIndex(c[_].source.id)),c[_].getNormalizedParameterValue(a,s,this._parameterCaches[c[_].sourceParameterIndex],f[c[_].sourceParameterIndex],p[c[_].sourceParameterIndex],m[c[_].sourceParameterIndex],l.normalizationPosition,l.normalizationAngle,c[_].reflect,r);i=wt.degreesToRadian(-s.angle),a.x=a.x*wt.cos(i)-a.y*wt.sin(i),a.y=a.x*wt.sin(i)+a.y*wt.cos(i),ok(h,l.particleCount,a,s.angle,this._options.wind,Hm*l.normalizationPosition.maximum,g,Xv);for(let _=0;_<l.outputCount;++_){const I=u[_].vertexIndex;if(u[_].destinationParameterIndex==-1&&(u[_].destinationParameterIndex=t.getParameterIndex(u[_].destination.id)),I<1||I>=l.particleCount)continue;const v=new ft;v.x=h[I].position.x-h[I-1].position.x,v.y=h[I].position.y-h[I-1].position.y,o=u[_].getValue(v,h,I,u[_].reflect,this._options.gravity),this._currentRigOutputs.at(C).outputs.set(_,o);const k=u[_].destinationParameterIndex,T=!Float32Array.prototype.slice&&"subarray"in Float32Array.prototype?JSON.parse(JSON.stringify(this._parameterCaches.subarray(k))):this._parameterCaches.slice(k);Th(T,f[k],p[k],o,u[_]);for(let D=k,P=0;D<this._parameterCaches.length;D++,P++)this._parameterCaches[D]=T[P]}}this._currentRemainTime-=g}const x=this._currentRemainTime/g;this.interpolate(t,x)}interpolate(t,e){let s,r;const i=t.getModel().parameters.values,o=t.getModel().parameters.maximumValues,a=t.getModel().parameters.minimumValues;for(let l=0;l<this._physicsRig.subRigCount;++l){r=this._physicsRig.settings.at(l),s=this._physicsRig.outputs.get(r.baseOutputIndex);for(let c=0;c<r.outputCount;++c){if(s[c].destinationParameterIndex==-1)continue;const u=s[c].destinationParameterIndex,h=!Float32Array.prototype.slice&&"subarray"in Float32Array.prototype?JSON.parse(JSON.stringify(i.subarray(u))):i.slice(u);Th(h,a[u],o[u],this._previousRigOutputs.at(l).outputs.at(c)*(1-e)+this._currentRigOutputs.at(l).outputs.at(c)*e,s[c]);for(let d=u,p=0;d<i.length;d++,p++)i[d]=h[p]}}}setOptions(t){this._options=t}getOption(){return this._options}constructor(){this._physicsRig=null,this._options=new xb,this._options.gravity.y=-1,this._options.gravity.x=0,this._options.wind.x=0,this._options.wind.y=0,this._currentRigOutputs=new ct,this._previousRigOutputs=new ct,this._currentRemainTime=0,this._parameterCaches=null,this._parameterInputCaches=null}release(){this._physicsRig=void 0,this._physicsRig=null}initialize(){let t,e,s;for(let r=0;r<this._physicsRig.subRigCount;++r){e=this._physicsRig.settings.at(r),t=this._physicsRig.particles.get(e.baseParticleIndex),t[0].initialPosition=new ft(0,0),t[0].lastPosition=new ft(t[0].initialPosition.x,t[0].initialPosition.y),t[0].lastGravity=new ft(0,-1),t[0].lastGravity.y*=-1,t[0].velocity=new ft(0,0),t[0].force=new ft(0,0);for(let i=1;i<e.particleCount;++i)s=new ft(0,0),s.y=t[i].radius,t[i].initialPosition=new ft(t[i-1].initialPosition.x+s.x,t[i-1].initialPosition.y+s.y),t[i].position=new ft(t[i].initialPosition.x,t[i].initialPosition.y),t[i].lastPosition=new ft(t[i].initialPosition.x,t[i].initialPosition.y),t[i].lastGravity=new ft(0,-1),t[i].lastGravity.y*=-1,t[i].velocity=new ft(0,0),t[i].force=new ft(0,0)}}}class xb{constructor(){this.gravity=new ft(0,0),this.wind=new ft(0,0)}}class Xm{constructor(){this.outputs=new ct(0)}}function qv(n){let t=0;return n>0?t=1:n<0&&(t=-1),t}function Kv(n,t,e,s,r,i,o,a,l,c){n.x+=Wd(e,s,r,i,o.minimum,o.maximum,o.defalut,l)*c}function Yv(n,t,e,s,r,i,o,a,l,c){n.y+=Wd(e,s,r,i,o.minimum,o.maximum,o.defalut,l)*c}function Jv(n,t,e,s,r,i,o,a,l,c){t.angle+=Wd(e,s,r,i,a.minimum,a.maximum,a.defalut,l)*c}function Zv(n,t,e,s,r){let i=n.x;return s&&(i*=-1),i}function Qv(n,t,e,s,r){let i=n.y;return s&&(i*=-1),i}function tk(n,t,e,s,r){let i;return e>=2?r=t[e-1].position.substract(t[e-2].position):r=r.multiplyByScaler(-1),i=wt.directionToRadian(r,n),s&&(i*=-1),i}function ek(n,t){const e=wt.max(n,t),s=wt.min(n,t);return wt.abs(e-s)}function nk(n,t){return wt.min(n,t)+ek(n,t)/2}function sk(n,t){return JSON.parse(JSON.stringify(n.x))}function rk(n,t){return JSON.parse(JSON.stringify(n.y))}function ik(n,t){return JSON.parse(JSON.stringify(t))}function ok(n,t,e,s,r,i,o,a){let l,c,u=new ft(0,0),h=new ft(0,0),d=new ft(0,0),p=new ft(0,0);n[0].position=new ft(e.x,e.y);const f=wt.degreesToRadian(s),m=wt.radianToDirection(f);m.normalize();for(let g=1;g<t;++g)n[g].force=m.multiplyByScaler(n[g].acceleration).add(r),n[g].lastPosition=new ft(n[g].position.x,n[g].position.y),l=n[g].delay*o*30,u=n[g].position.substract(n[g-1].position),c=wt.directionToRadian(n[g].lastGravity,m)/a,u.x=wt.cos(c)*u.x-u.y*wt.sin(c),u.y=wt.sin(c)*u.x+u.y*wt.cos(c),n[g].position=n[g-1].position.add(u),h=n[g].velocity.multiplyByScaler(l),d=n[g].force.multiplyByScaler(l).multiplyByScaler(l),n[g].position=n[g].position.add(h).add(d),p=n[g].position.substract(n[g-1].position),p.normalize(),n[g].position=n[g-1].position.add(p.multiplyByScaler(n[g].radius)),wt.abs(n[g].position.x)<i&&(n[g].position.x=0),l!=0&&(n[g].velocity=n[g].position.substract(n[g].lastPosition),n[g].velocity=n[g].velocity.divisionByScalar(l),n[g].velocity=n[g].velocity.multiplyByScaler(n[g].mobility)),n[g].force=new ft(0,0),n[g].lastGravity=new ft(m.x,m.y)}function ak(n,t,e,s,r,i){let o=new ft(0,0);n[0].position=new ft(e.x,e.y);const a=wt.degreesToRadian(s),l=wt.radianToDirection(a);l.normalize();for(let c=1;c<t;++c)n[c].force=l.multiplyByScaler(n[c].acceleration).add(r),n[c].lastPosition=new ft(n[c].position.x,n[c].position.y),n[c].velocity=new ft(0,0),o=n[c].force,o.normalize(),o=o.multiplyByScaler(n[c].radius),n[c].position=n[c-1].position.add(o),wt.abs(n[c].position.x)<i&&(n[c].position.x=0),n[c].force=new ft(0,0),n[c].lastGravity=new ft(l.x,l.y)}function Th(n,t,e,s,r){let i;const o=r.getScale(r.translationScale,r.angleScale);i=s*o,i<t?(i<r.valueBelowMinimum&&(r.valueBelowMinimum=i),i=t):i>e&&(i>r.valueExceededMaximum&&(r.valueExceededMaximum=i),i=e);const a=r.weight/Yh;a>=1||(i=n[0]*(1-a)+i*a),n[0]=i}function Wd(n,t,e,s,r,i,o,a){let l=0;const c=wt.max(e,t);c<n&&(n=c);const u=wt.min(e,t);u>n&&(n=u);const h=wt.min(r,i),d=wt.max(r,i),p=o,f=nk(u,c),m=n-f;switch(qv(m)){case 1:{const g=d-p,x=c-f;x!=0&&(l=m*(g/x),l+=p);break}case-1:{const g=h-p,x=u-f;x!=0&&(l=m*(g/x),l+=p);break}case 0:{l=p;break}}return a?l:l*-1}var jm;(n=>{n.CubismPhysics=Ho,n.Options=xb})(jm||(jm={}));const Nh=4,lk=36,ck=32;class uk{constructor(t){this._renderTextureCount=0,this._clippingMaskBufferSize=256,this._clippingContextListForMask=new ct,this._clippingContextListForDraw=new ct,this._channelColors=new ct,this._tmpBoundsOnModel=new tc,this._tmpMatrix=new ge,this._tmpMatrixForMask=new ge,this._tmpMatrixForDraw=new ge,this._clippingContexttConstructor=t;let e=new rn;e.r=1,e.g=0,e.b=0,e.a=0,this._channelColors.pushBack(e),e=new rn,e.r=0,e.g=1,e.b=0,e.a=0,this._channelColors.pushBack(e),e=new rn,e.r=0,e.g=0,e.b=1,e.a=0,this._channelColors.pushBack(e),e=new rn,e.r=0,e.g=0,e.b=0,e.a=1,this._channelColors.pushBack(e)}release(){for(let t=0;t<this._clippingContextListForMask.getSize();t++)this._clippingContextListForMask.at(t)&&(this._clippingContextListForMask.at(t).release(),this._clippingContextListForMask.set(t,void 0)),this._clippingContextListForMask.set(t,null);this._clippingContextListForMask=null;for(let t=0;t<this._clippingContextListForDraw.getSize();t++)this._clippingContextListForDraw.set(t,null);this._clippingContextListForDraw=null;for(let t=0;t<this._channelColors.getSize();t++)this._channelColors.set(t,null);this._channelColors=null,this._clearedFrameBufferFlags!=null&&this._clearedFrameBufferFlags.clear(),this._clearedFrameBufferFlags=null}initialize(t,e){e%1!=0&&(qs("The number of render textures must be specified as an integer. The decimal point is rounded down and corrected to an integer."),e=~~e),e<1&&qs("The number of render textures must be an integer greater than or equal to 1. Set the number of render textures to 1."),this._renderTextureCount=e<1?1:e,this._clearedFrameBufferFlags=new ct(this._renderTextureCount);for(let s=0;s<t.getDrawableCount();s++){if(t.getDrawableMaskCounts()[s]<=0){this._clippingContextListForDraw.pushBack(null);continue}let r=this.findSameClip(t.getDrawableMasks()[s],t.getDrawableMaskCounts()[s]);r==null&&(r=new this._clippingContexttConstructor(this,t.getDrawableMasks()[s],t.getDrawableMaskCounts()[s]),this._clippingContextListForMask.pushBack(r)),r.addClippedDrawable(s),this._clippingContextListForDraw.pushBack(r)}}findSameClip(t,e){for(let s=0;s<this._clippingContextListForMask.getSize();s++){const r=this._clippingContextListForMask.at(s),i=r._clippingIdCount;if(i!=e)continue;let o=0;for(let a=0;a<i;a++){const l=r._clippingIdList[a];for(let c=0;c<i;c++)if(t[c]==l){o++;break}}if(o==i)return r}return null}setupMatrixForHighPrecision(t,e){let s=0;for(let r=0;r<this._clippingContextListForMask.getSize();r++){const i=this._clippingContextListForMask.at(r);this.calcClippedDrawTotalBounds(t,i),i._isUsing&&s++}if(s>0){if(this.setupLayoutBounds(0),this._clearedFrameBufferFlags.getSize()!=this._renderTextureCount){this._clearedFrameBufferFlags.clear();for(let r=0;r<this._renderTextureCount;r++)this._clearedFrameBufferFlags.pushBack(!1)}else for(let r=0;r<this._renderTextureCount;r++)this._clearedFrameBufferFlags.set(r,!1);for(let r=0;r<this._clippingContextListForMask.getSize();r++){const i=this._clippingContextListForMask.at(r),o=i._allClippedDrawRect,a=i._layoutBounds,l=.05;let c=0,u=0;const h=t.getPixelsPerUnit(),d=i.getClippingManager().getClippingMaskBufferSize(),p=a.width*d,f=a.height*d;this._tmpBoundsOnModel.setRect(o),this._tmpBoundsOnModel.width*h>p?(this._tmpBoundsOnModel.expand(o.width*l,0),c=a.width/this._tmpBoundsOnModel.width):c=h/p,this._tmpBoundsOnModel.height*h>f?(this._tmpBoundsOnModel.expand(0,o.height*l),u=a.height/this._tmpBoundsOnModel.height):u=h/f,this.createMatrixForMask(e,a,c,u),i._matrixForMask.setMatrix(this._tmpMatrixForMask.getArray()),i._matrixForDraw.setMatrix(this._tmpMatrixForDraw.getArray())}}}createMatrixForMask(t,e,s,r){this._tmpMatrix.loadIdentity(),this._tmpMatrix.translateRelative(-1,-1),this._tmpMatrix.scaleRelative(2,2),this._tmpMatrix.translateRelative(e.x,e.y),this._tmpMatrix.scaleRelative(s,r),this._tmpMatrix.translateRelative(-this._tmpBoundsOnModel.x,-this._tmpBoundsOnModel.y),this._tmpMatrixForMask.setMatrix(this._tmpMatrix.getArray()),this._tmpMatrix.loadIdentity(),this._tmpMatrix.translateRelative(e.x,e.y*(t?-1:1)),this._tmpMatrix.scaleRelative(s,r*(t?-1:1)),this._tmpMatrix.translateRelative(-this._tmpBoundsOnModel.x,-this._tmpBoundsOnModel.y),this._tmpMatrixForDraw.setMatrix(this._tmpMatrix.getArray())}setupLayoutBounds(t){const e=this._renderTextureCount<=1?lk:ck*this._renderTextureCount;if(t<=0||t>e){t>e&&Ut(`not supported mask count : {0}
[Details] render texture count : {1}, mask count : {2}`,t-e,this._renderTextureCount,t);for(let c=0;c<this._clippingContextListForMask.getSize();c++){const u=this._clippingContextListForMask.at(c);u._layoutChannelIndex=0,u._layoutBounds.x=0,u._layoutBounds.y=0,u._layoutBounds.width=1,u._layoutBounds.height=1,u._bufferIndex=0}return}const s=this._renderTextureCount<=1?9:8;let r=t/this._renderTextureCount;const i=t%this._renderTextureCount;r=Math.ceil(r);let o=r/Nh;const a=r%Nh;o=~~o;let l=0;for(let c=0;c<this._renderTextureCount;c++)for(let u=0;u<Nh;u++){let h=o+(u<a?1:0);const d=a+(o<1?-1:0);if(u==d&&i>0&&(h-=c<i?0:1),h!=0)if(h==1){const p=this._clippingContextListForMask.at(l++);p._layoutChannelIndex=u,p._layoutBounds.x=0,p._layoutBounds.y=0,p._layoutBounds.width=1,p._layoutBounds.height=1,p._bufferIndex=c}else if(h==2)for(let p=0;p<h;p++){let f=p%2;f=~~f;const m=this._clippingContextListForMask.at(l++);m._layoutChannelIndex=u,m._layoutBounds.x=f*.5,m._layoutBounds.y=0,m._layoutBounds.width=.5,m._layoutBounds.height=1,m._bufferIndex=c}else if(h<=4)for(let p=0;p<h;p++){let f=p%2,m=p/2;f=~~f,m=~~m;const g=this._clippingContextListForMask.at(l++);g._layoutChannelIndex=u,g._layoutBounds.x=f*.5,g._layoutBounds.y=m*.5,g._layoutBounds.width=.5,g._layoutBounds.height=.5,g._bufferIndex=c}else if(h<=s)for(let p=0;p<h;p++){let f=p%3,m=p/3;f=~~f,m=~~m;const g=this._clippingContextListForMask.at(l++);g._layoutChannelIndex=u,g._layoutBounds.x=f/3,g._layoutBounds.y=m/3,g._layoutBounds.width=1/3,g._layoutBounds.height=1/3,g._bufferIndex=c}else{Ut(`not supported mask count : {0}
[Details] render texture count : {1}, mask count : {2}`,t-e,this._renderTextureCount,t);for(let p=0;p<h;p++){const f=this._clippingContextListForMask.at(l++);f._layoutChannelIndex=0,f._layoutBounds.x=0,f._layoutBounds.y=0,f._layoutBounds.width=1,f._layoutBounds.height=1,f._bufferIndex=0}}}}calcClippedDrawTotalBounds(t,e){let s=Number.MAX_VALUE,r=Number.MAX_VALUE,i=Number.MIN_VALUE,o=Number.MIN_VALUE;const a=e._clippedDrawableIndexList.length;for(let l=0;l<a;l++){const c=e._clippedDrawableIndexList[l],u=t.getDrawableVertexCount(c),h=t.getDrawableVertices(c);let d=Number.MAX_VALUE,p=Number.MAX_VALUE,f=-Number.MAX_VALUE,m=-Number.MAX_VALUE;const g=u*Ks.vertexStep;for(let x=Ks.vertexOffset;x<g;x+=Ks.vertexStep){const y=h[x],w=h[x+1];y<d&&(d=y),y>f&&(f=y),w<p&&(p=w),w>m&&(m=w)}if(d!=Number.MAX_VALUE)if(d<s&&(s=d),p<r&&(r=p),f>i&&(i=f),m>o&&(o=m),s==Number.MAX_VALUE)e._allClippedDrawRect.x=0,e._allClippedDrawRect.y=0,e._allClippedDrawRect.width=0,e._allClippedDrawRect.height=0,e._isUsing=!1;else{e._isUsing=!0;const x=i-s,y=o-r;e._allClippedDrawRect.x=s,e._allClippedDrawRect.y=r,e._allClippedDrawRect.width=x,e._allClippedDrawRect.height=y}}}getClippingContextListForDraw(){return this._clippingContextListForDraw}getClippingMaskBufferSize(){return this._clippingMaskBufferSize}getRenderTextureCount(){return this._renderTextureCount}getChannelFlagAsColor(t){return this._channelColors.at(t)}setClippingMaskBufferSize(t){this._clippingMaskBufferSize=t}}let kr;const hk=10;class Mr{static getInstance(){return kr==null&&(kr=new Mr),kr}static deleteInstance(){kr&&(kr.release(),kr=null)}constructor(){this._shaderSets=new ct}release(){this.releaseShaderProgram()}setupShaderProgramForDraw(t,e,s){t.isPremultipliedAlpha()||Ut("NoPremultipliedAlpha is not allowed"),this._shaderSets.getSize()==0&&this.generateShaders();let r,i,o,a;const l=t.getClippingContextBufferForDraw()!=null,c=e.getDrawableInvertedMaskBit(s),u=l?c?2:1:0;let h;switch(e.getDrawableBlendMode(s)){case tr.CubismBlendMode_Normal:default:h=this._shaderSets.at(1+u),r=this.gl.ONE,i=this.gl.ONE_MINUS_SRC_ALPHA,o=this.gl.ONE,a=this.gl.ONE_MINUS_SRC_ALPHA;break;case tr.CubismBlendMode_Additive:h=this._shaderSets.at(4+u),r=this.gl.ONE,i=this.gl.ONE,o=this.gl.ZERO,a=this.gl.ONE;break;case tr.CubismBlendMode_Multiplicative:h=this._shaderSets.at(7+u),r=this.gl.DST_COLOR,i=this.gl.ONE_MINUS_SRC_ALPHA,o=this.gl.ZERO,a=this.gl.ONE;break}this.gl.useProgram(h.shaderProgram),t._bufferData.vertex==null&&(t._bufferData.vertex=this.gl.createBuffer()),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,t._bufferData.vertex);const d=e.getDrawableVertices(s);this.gl.bufferData(this.gl.ARRAY_BUFFER,d,this.gl.DYNAMIC_DRAW),this.gl.enableVertexAttribArray(h.attributePositionLocation),this.gl.vertexAttribPointer(h.attributePositionLocation,2,this.gl.FLOAT,!1,0,0),t._bufferData.uv==null&&(t._bufferData.uv=this.gl.createBuffer()),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,t._bufferData.uv);const p=e.getDrawableVertexUvs(s);if(this.gl.bufferData(this.gl.ARRAY_BUFFER,p,this.gl.DYNAMIC_DRAW),this.gl.enableVertexAttribArray(h.attributeTexCoordLocation),this.gl.vertexAttribPointer(h.attributeTexCoordLocation,2,this.gl.FLOAT,!1,0,0),l){this.gl.activeTexture(this.gl.TEXTURE1);const C=t.getClippingContextBufferForDraw().getClippingManager().getColorBuffer().at(t.getClippingContextBufferForDraw()._bufferIndex);this.gl.bindTexture(this.gl.TEXTURE_2D,C),this.gl.uniform1i(h.samplerTexture1Location,1),this.gl.uniformMatrix4fv(h.uniformClipMatrixLocation,!1,t.getClippingContextBufferForDraw()._matrixForDraw.getArray());const _=t.getClippingContextBufferForDraw()._layoutChannelIndex,I=t.getClippingContextBufferForDraw().getClippingManager().getChannelFlagAsColor(_);this.gl.uniform4f(h.uniformChannelFlagLocation,I.r,I.g,I.b,I.a)}const f=e.getDrawableTextureIndex(s),m=t.getBindedTextures().getValue(f);this.gl.activeTexture(this.gl.TEXTURE0),this.gl.bindTexture(this.gl.TEXTURE_2D,m),this.gl.uniform1i(h.samplerTexture0Location,0);const g=t.getMvpMatrix();this.gl.uniformMatrix4fv(h.uniformMatrixLocation,!1,g.getArray());const x=t.getModelColorWithOpacity(e.getDrawableOpacity(s)),y=e.getMultiplyColor(s),w=e.getScreenColor(s);this.gl.uniform4f(h.uniformBaseColorLocation,x.r,x.g,x.b,x.a),this.gl.uniform4f(h.uniformMultiplyColorLocation,y.r,y.g,y.b,y.a),this.gl.uniform4f(h.uniformScreenColorLocation,w.r,w.g,w.b,w.a),t._bufferData.index==null&&(t._bufferData.index=this.gl.createBuffer());const b=e.getDrawableVertexIndices(s);this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER,t._bufferData.index),this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER,b,this.gl.DYNAMIC_DRAW),this.gl.blendFuncSeparate(r,i,o,a)}setupShaderProgramForMask(t,e,s){t.isPremultipliedAlpha()||Ut("NoPremultipliedAlpha is not allowed"),this._shaderSets.getSize()==0&&this.generateShaders();const r=this._shaderSets.at(0);this.gl.useProgram(r.shaderProgram),t._bufferData.vertex==null&&(t._bufferData.vertex=this.gl.createBuffer()),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,t._bufferData.vertex);const i=e.getDrawableVertices(s);this.gl.bufferData(this.gl.ARRAY_BUFFER,i,this.gl.DYNAMIC_DRAW),this.gl.enableVertexAttribArray(r.attributePositionLocation),this.gl.vertexAttribPointer(r.attributePositionLocation,2,this.gl.FLOAT,!1,0,0),t._bufferData.uv==null&&(t._bufferData.uv=this.gl.createBuffer()),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,t._bufferData.uv);const o=e.getDrawableTextureIndex(s),a=t.getBindedTextures().getValue(o);this.gl.activeTexture(this.gl.TEXTURE0),this.gl.bindTexture(this.gl.TEXTURE_2D,a),this.gl.uniform1i(r.samplerTexture0Location,0),t._bufferData.uv==null&&(t._bufferData.uv=this.gl.createBuffer()),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,t._bufferData.uv);const l=e.getDrawableVertexUvs(s);this.gl.bufferData(this.gl.ARRAY_BUFFER,l,this.gl.DYNAMIC_DRAW),this.gl.enableVertexAttribArray(r.attributeTexCoordLocation),this.gl.vertexAttribPointer(r.attributeTexCoordLocation,2,this.gl.FLOAT,!1,0,0),t.getClippingContextBufferForMask();const c=t.getClippingContextBufferForMask()._layoutChannelIndex,u=t.getClippingContextBufferForMask().getClippingManager().getChannelFlagAsColor(c);this.gl.uniform4f(r.uniformChannelFlagLocation,u.r,u.g,u.b,u.a),this.gl.uniformMatrix4fv(r.uniformClipMatrixLocation,!1,t.getClippingContextBufferForMask()._matrixForMask.getArray());const h=t.getClippingContextBufferForMask()._layoutBounds;this.gl.uniform4f(r.uniformBaseColorLocation,h.x*2-1,h.y*2-1,h.getRight()*2-1,h.getBottom()*2-1);const d=e.getMultiplyColor(s),p=e.getScreenColor(s);this.gl.uniform4f(r.uniformMultiplyColorLocation,d.r,d.g,d.b,d.a),this.gl.uniform4f(r.uniformScreenColorLocation,p.r,p.g,p.b,p.a);const f=this.gl.ZERO,m=this.gl.ONE_MINUS_SRC_COLOR,g=this.gl.ZERO,x=this.gl.ONE_MINUS_SRC_ALPHA;t._bufferData.index==null&&(t._bufferData.index=this.gl.createBuffer());const y=e.getDrawableVertexIndices(s);this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER,t._bufferData.index),this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER,y,this.gl.DYNAMIC_DRAW),this.gl.blendFuncSeparate(f,m,g,x)}releaseShaderProgram(){for(let t=0;t<this._shaderSets.getSize();t++)this.gl.deleteProgram(this._shaderSets.at(t).shaderProgram),this._shaderSets.at(t).shaderProgram=0,this._shaderSets.set(t,void 0),this._shaderSets.set(t,null)}generateShaders(){for(let t=0;t<hk;t++)this._shaderSets.pushBack(new yb);this._shaderSets.at(0).shaderProgram=this.loadShaderProgram(dk,pk),this._shaderSets.at(1).shaderProgram=this.loadShaderProgram(fk,gk),this._shaderSets.at(2).shaderProgram=this.loadShaderProgram(qm,mk),this._shaderSets.at(3).shaderProgram=this.loadShaderProgram(qm,xk),this._shaderSets.at(4).shaderProgram=this._shaderSets.at(1).shaderProgram,this._shaderSets.at(5).shaderProgram=this._shaderSets.at(2).shaderProgram,this._shaderSets.at(6).shaderProgram=this._shaderSets.at(3).shaderProgram,this._shaderSets.at(7).shaderProgram=this._shaderSets.at(1).shaderProgram,this._shaderSets.at(8).shaderProgram=this._shaderSets.at(2).shaderProgram,this._shaderSets.at(9).shaderProgram=this._shaderSets.at(3).shaderProgram,this._shaderSets.at(0).attributePositionLocation=this.gl.getAttribLocation(this._shaderSets.at(0).shaderProgram,"a_position"),this._shaderSets.at(0).attributeTexCoordLocation=this.gl.getAttribLocation(this._shaderSets.at(0).shaderProgram,"a_texCoord"),this._shaderSets.at(0).samplerTexture0Location=this.gl.getUniformLocation(this._shaderSets.at(0).shaderProgram,"s_texture0"),this._shaderSets.at(0).uniformClipMatrixLocation=this.gl.getUniformLocation(this._shaderSets.at(0).shaderProgram,"u_clipMatrix"),this._shaderSets.at(0).uniformChannelFlagLocation=this.gl.getUniformLocation(this._shaderSets.at(0).shaderProgram,"u_channelFlag"),this._shaderSets.at(0).uniformBaseColorLocation=this.gl.getUniformLocation(this._shaderSets.at(0).shaderProgram,"u_baseColor"),this._shaderSets.at(0).uniformMultiplyColorLocation=this.gl.getUniformLocation(this._shaderSets.at(0).shaderProgram,"u_multiplyColor"),this._shaderSets.at(0).uniformScreenColorLocation=this.gl.getUniformLocation(this._shaderSets.at(0).shaderProgram,"u_screenColor"),this._shaderSets.at(1).attributePositionLocation=this.gl.getAttribLocation(this._shaderSets.at(1).shaderProgram,"a_position"),this._shaderSets.at(1).attributeTexCoordLocation=this.gl.getAttribLocation(this._shaderSets.at(1).shaderProgram,"a_texCoord"),this._shaderSets.at(1).samplerTexture0Location=this.gl.getUniformLocation(this._shaderSets.at(1).shaderProgram,"s_texture0"),this._shaderSets.at(1).uniformMatrixLocation=this.gl.getUniformLocation(this._shaderSets.at(1).shaderProgram,"u_matrix"),this._shaderSets.at(1).uniformBaseColorLocation=this.gl.getUniformLocation(this._shaderSets.at(1).shaderProgram,"u_baseColor"),this._shaderSets.at(1).uniformMultiplyColorLocation=this.gl.getUniformLocation(this._shaderSets.at(1).shaderProgram,"u_multiplyColor"),this._shaderSets.at(1).uniformScreenColorLocation=this.gl.getUniformLocation(this._shaderSets.at(1).shaderProgram,"u_screenColor"),this._shaderSets.at(2).attributePositionLocation=this.gl.getAttribLocation(this._shaderSets.at(2).shaderProgram,"a_position"),this._shaderSets.at(2).attributeTexCoordLocation=this.gl.getAttribLocation(this._shaderSets.at(2).shaderProgram,"a_texCoord"),this._shaderSets.at(2).samplerTexture0Location=this.gl.getUniformLocation(this._shaderSets.at(2).shaderProgram,"s_texture0"),this._shaderSets.at(2).samplerTexture1Location=this.gl.getUniformLocation(this._shaderSets.at(2).shaderProgram,"s_texture1"),this._shaderSets.at(2).uniformMatrixLocation=this.gl.getUniformLocation(this._shaderSets.at(2).shaderProgram,"u_matrix"),this._shaderSets.at(2).uniformClipMatrixLocation=this.gl.getUniformLocation(this._shaderSets.at(2).shaderProgram,"u_clipMatrix"),this._shaderSets.at(2).uniformChannelFlagLocation=this.gl.getUniformLocation(this._shaderSets.at(2).shaderProgram,"u_channelFlag"),this._shaderSets.at(2).uniformBaseColorLocation=this.gl.getUniformLocation(this._shaderSets.at(2).shaderProgram,"u_baseColor"),this._shaderSets.at(2).uniformMultiplyColorLocation=this.gl.getUniformLocation(this._shaderSets.at(2).shaderProgram,"u_multiplyColor"),this._shaderSets.at(2).uniformScreenColorLocation=this.gl.getUniformLocation(this._shaderSets.at(2).shaderProgram,"u_screenColor"),this._shaderSets.at(3).attributePositionLocation=this.gl.getAttribLocation(this._shaderSets.at(3).shaderProgram,"a_position"),this._shaderSets.at(3).attributeTexCoordLocation=this.gl.getAttribLocation(this._shaderSets.at(3).shaderProgram,"a_texCoord"),this._shaderSets.at(3).samplerTexture0Location=this.gl.getUniformLocation(this._shaderSets.at(3).shaderProgram,"s_texture0"),this._shaderSets.at(3).samplerTexture1Location=this.gl.getUniformLocation(this._shaderSets.at(3).shaderProgram,"s_texture1"),this._shaderSets.at(3).uniformMatrixLocation=this.gl.getUniformLocation(this._shaderSets.at(3).shaderProgram,"u_matrix"),this._shaderSets.at(3).uniformClipMatrixLocation=this.gl.getUniformLocation(this._shaderSets.at(3).shaderProgram,"u_clipMatrix"),this._shaderSets.at(3).uniformChannelFlagLocation=this.gl.getUniformLocation(this._shaderSets.at(3).shaderProgram,"u_channelFlag"),this._shaderSets.at(3).uniformBaseColorLocation=this.gl.getUniformLocation(this._shaderSets.at(3).shaderProgram,"u_baseColor"),this._shaderSets.at(3).uniformMultiplyColorLocation=this.gl.getUniformLocation(this._shaderSets.at(3).shaderProgram,"u_multiplyColor"),this._shaderSets.at(3).uniformScreenColorLocation=this.gl.getUniformLocation(this._shaderSets.at(3).shaderProgram,"u_screenColor"),this._shaderSets.at(4).attributePositionLocation=this.gl.getAttribLocation(this._shaderSets.at(4).shaderProgram,"a_position"),this._shaderSets.at(4).attributeTexCoordLocation=this.gl.getAttribLocation(this._shaderSets.at(4).shaderProgram,"a_texCoord"),this._shaderSets.at(4).samplerTexture0Location=this.gl.getUniformLocation(this._shaderSets.at(4).shaderProgram,"s_texture0"),this._shaderSets.at(4).uniformMatrixLocation=this.gl.getUniformLocation(this._shaderSets.at(4).shaderProgram,"u_matrix"),this._shaderSets.at(4).uniformBaseColorLocation=this.gl.getUniformLocation(this._shaderSets.at(4).shaderProgram,"u_baseColor"),this._shaderSets.at(4).uniformMultiplyColorLocation=this.gl.getUniformLocation(this._shaderSets.at(4).shaderProgram,"u_multiplyColor"),this._shaderSets.at(4).uniformScreenColorLocation=this.gl.getUniformLocation(this._shaderSets.at(4).shaderProgram,"u_screenColor"),this._shaderSets.at(5).attributePositionLocation=this.gl.getAttribLocation(this._shaderSets.at(5).shaderProgram,"a_position"),this._shaderSets.at(5).attributeTexCoordLocation=this.gl.getAttribLocation(this._shaderSets.at(5).shaderProgram,"a_texCoord"),this._shaderSets.at(5).samplerTexture0Location=this.gl.getUniformLocation(this._shaderSets.at(5).shaderProgram,"s_texture0"),this._shaderSets.at(5).samplerTexture1Location=this.gl.getUniformLocation(this._shaderSets.at(5).shaderProgram,"s_texture1"),this._shaderSets.at(5).uniformMatrixLocation=this.gl.getUniformLocation(this._shaderSets.at(5).shaderProgram,"u_matrix"),this._shaderSets.at(5).uniformClipMatrixLocation=this.gl.getUniformLocation(this._shaderSets.at(5).shaderProgram,"u_clipMatrix"),this._shaderSets.at(5).uniformChannelFlagLocation=this.gl.getUniformLocation(this._shaderSets.at(5).shaderProgram,"u_channelFlag"),this._shaderSets.at(5).uniformBaseColorLocation=this.gl.getUniformLocation(this._shaderSets.at(5).shaderProgram,"u_baseColor"),this._shaderSets.at(5).uniformMultiplyColorLocation=this.gl.getUniformLocation(this._shaderSets.at(5).shaderProgram,"u_multiplyColor"),this._shaderSets.at(5).uniformScreenColorLocation=this.gl.getUniformLocation(this._shaderSets.at(5).shaderProgram,"u_screenColor"),this._shaderSets.at(6).attributePositionLocation=this.gl.getAttribLocation(this._shaderSets.at(6).shaderProgram,"a_position"),this._shaderSets.at(6).attributeTexCoordLocation=this.gl.getAttribLocation(this._shaderSets.at(6).shaderProgram,"a_texCoord"),this._shaderSets.at(6).samplerTexture0Location=this.gl.getUniformLocation(this._shaderSets.at(6).shaderProgram,"s_texture0"),this._shaderSets.at(6).samplerTexture1Location=this.gl.getUniformLocation(this._shaderSets.at(6).shaderProgram,"s_texture1"),this._shaderSets.at(6).uniformMatrixLocation=this.gl.getUniformLocation(this._shaderSets.at(6).shaderProgram,"u_matrix"),this._shaderSets.at(6).uniformClipMatrixLocation=this.gl.getUniformLocation(this._shaderSets.at(6).shaderProgram,"u_clipMatrix"),this._shaderSets.at(6).uniformChannelFlagLocation=this.gl.getUniformLocation(this._shaderSets.at(6).shaderProgram,"u_channelFlag"),this._shaderSets.at(6).uniformBaseColorLocation=this.gl.getUniformLocation(this._shaderSets.at(6).shaderProgram,"u_baseColor"),this._shaderSets.at(6).uniformMultiplyColorLocation=this.gl.getUniformLocation(this._shaderSets.at(6).shaderProgram,"u_multiplyColor"),this._shaderSets.at(6).uniformScreenColorLocation=this.gl.getUniformLocation(this._shaderSets.at(6).shaderProgram,"u_screenColor"),this._shaderSets.at(7).attributePositionLocation=this.gl.getAttribLocation(this._shaderSets.at(7).shaderProgram,"a_position"),this._shaderSets.at(7).attributeTexCoordLocation=this.gl.getAttribLocation(this._shaderSets.at(7).shaderProgram,"a_texCoord"),this._shaderSets.at(7).samplerTexture0Location=this.gl.getUniformLocation(this._shaderSets.at(7).shaderProgram,"s_texture0"),this._shaderSets.at(7).uniformMatrixLocation=this.gl.getUniformLocation(this._shaderSets.at(7).shaderProgram,"u_matrix"),this._shaderSets.at(7).uniformBaseColorLocation=this.gl.getUniformLocation(this._shaderSets.at(7).shaderProgram,"u_baseColor"),this._shaderSets.at(7).uniformMultiplyColorLocation=this.gl.getUniformLocation(this._shaderSets.at(7).shaderProgram,"u_multiplyColor"),this._shaderSets.at(7).uniformScreenColorLocation=this.gl.getUniformLocation(this._shaderSets.at(7).shaderProgram,"u_screenColor"),this._shaderSets.at(8).attributePositionLocation=this.gl.getAttribLocation(this._shaderSets.at(8).shaderProgram,"a_position"),this._shaderSets.at(8).attributeTexCoordLocation=this.gl.getAttribLocation(this._shaderSets.at(8).shaderProgram,"a_texCoord"),this._shaderSets.at(8).samplerTexture0Location=this.gl.getUniformLocation(this._shaderSets.at(8).shaderProgram,"s_texture0"),this._shaderSets.at(8).samplerTexture1Location=this.gl.getUniformLocation(this._shaderSets.at(8).shaderProgram,"s_texture1"),this._shaderSets.at(8).uniformMatrixLocation=this.gl.getUniformLocation(this._shaderSets.at(8).shaderProgram,"u_matrix"),this._shaderSets.at(8).uniformClipMatrixLocation=this.gl.getUniformLocation(this._shaderSets.at(8).shaderProgram,"u_clipMatrix"),this._shaderSets.at(8).uniformChannelFlagLocation=this.gl.getUniformLocation(this._shaderSets.at(8).shaderProgram,"u_channelFlag"),this._shaderSets.at(8).uniformBaseColorLocation=this.gl.getUniformLocation(this._shaderSets.at(8).shaderProgram,"u_baseColor"),this._shaderSets.at(8).uniformMultiplyColorLocation=this.gl.getUniformLocation(this._shaderSets.at(8).shaderProgram,"u_multiplyColor"),this._shaderSets.at(8).uniformScreenColorLocation=this.gl.getUniformLocation(this._shaderSets.at(8).shaderProgram,"u_screenColor"),this._shaderSets.at(9).attributePositionLocation=this.gl.getAttribLocation(this._shaderSets.at(9).shaderProgram,"a_position"),this._shaderSets.at(9).attributeTexCoordLocation=this.gl.getAttribLocation(this._shaderSets.at(9).shaderProgram,"a_texCoord"),this._shaderSets.at(9).samplerTexture0Location=this.gl.getUniformLocation(this._shaderSets.at(9).shaderProgram,"s_texture0"),this._shaderSets.at(9).samplerTexture1Location=this.gl.getUniformLocation(this._shaderSets.at(9).shaderProgram,"s_texture1"),this._shaderSets.at(9).uniformMatrixLocation=this.gl.getUniformLocation(this._shaderSets.at(9).shaderProgram,"u_matrix"),this._shaderSets.at(9).uniformClipMatrixLocation=this.gl.getUniformLocation(this._shaderSets.at(9).shaderProgram,"u_clipMatrix"),this._shaderSets.at(9).uniformChannelFlagLocation=this.gl.getUniformLocation(this._shaderSets.at(9).shaderProgram,"u_channelFlag"),this._shaderSets.at(9).uniformBaseColorLocation=this.gl.getUniformLocation(this._shaderSets.at(9).shaderProgram,"u_baseColor"),this._shaderSets.at(9).uniformMultiplyColorLocation=this.gl.getUniformLocation(this._shaderSets.at(9).shaderProgram,"u_multiplyColor"),this._shaderSets.at(9).uniformScreenColorLocation=this.gl.getUniformLocation(this._shaderSets.at(9).shaderProgram,"u_screenColor")}loadShaderProgram(t,e){let s=this.gl.createProgram(),r=this.compileShaderSource(this.gl.VERTEX_SHADER,t);if(!r)return Ut("Vertex shader compile error!"),0;let i=this.compileShaderSource(this.gl.FRAGMENT_SHADER,e);return i?(this.gl.attachShader(s,r),this.gl.attachShader(s,i),this.gl.linkProgram(s),this.gl.getProgramParameter(s,this.gl.LINK_STATUS)?(this.gl.deleteShader(r),this.gl.deleteShader(i),s):(Ut("Failed to link program: {0}",s),this.gl.deleteShader(r),r=0,this.gl.deleteShader(i),i=0,s&&(this.gl.deleteProgram(s),s=0),0)):(Ut("Vertex shader compile error!"),0)}compileShaderSource(t,e){const s=e,r=this.gl.createShader(t);if(this.gl.shaderSource(r,s),this.gl.compileShader(r),!r){const o=this.gl.getShaderInfoLog(r);Ut("Shader compile log: {0} ",o)}return this.gl.getShaderParameter(r,this.gl.COMPILE_STATUS)?r:(this.gl.deleteShader(r),null)}setGl(t){this.gl=t}}class yb{}var bb=(n=>(n[n.ShaderNames_SetupMask=0]="ShaderNames_SetupMask",n[n.ShaderNames_NormalPremultipliedAlpha=1]="ShaderNames_NormalPremultipliedAlpha",n[n.ShaderNames_NormalMaskedPremultipliedAlpha=2]="ShaderNames_NormalMaskedPremultipliedAlpha",n[n.ShaderNames_NomralMaskedInvertedPremultipliedAlpha=3]="ShaderNames_NomralMaskedInvertedPremultipliedAlpha",n[n.ShaderNames_AddPremultipliedAlpha=4]="ShaderNames_AddPremultipliedAlpha",n[n.ShaderNames_AddMaskedPremultipliedAlpha=5]="ShaderNames_AddMaskedPremultipliedAlpha",n[n.ShaderNames_AddMaskedPremultipliedAlphaInverted=6]="ShaderNames_AddMaskedPremultipliedAlphaInverted",n[n.ShaderNames_MultPremultipliedAlpha=7]="ShaderNames_MultPremultipliedAlpha",n[n.ShaderNames_MultMaskedPremultipliedAlpha=8]="ShaderNames_MultMaskedPremultipliedAlpha",n[n.ShaderNames_MultMaskedPremultipliedAlphaInverted=9]="ShaderNames_MultMaskedPremultipliedAlphaInverted",n))(bb||{});const dk="attribute vec4     a_position;attribute vec2     a_texCoord;varying vec2       v_texCoord;varying vec4       v_myPos;uniform mat4       u_clipMatrix;void main(){   gl_Position = u_clipMatrix * a_position;   v_myPos = u_clipMatrix * a_position;   v_texCoord = a_texCoord;   v_texCoord.y = 1.0 - v_texCoord.y;}",pk="precision mediump float;varying vec2       v_texCoord;varying vec4       v_myPos;uniform vec4       u_baseColor;uniform vec4       u_channelFlag;uniform sampler2D  s_texture0;void main(){   float isInside =        step(u_baseColor.x, v_myPos.x/v_myPos.w)       * step(u_baseColor.y, v_myPos.y/v_myPos.w)       * step(v_myPos.x/v_myPos.w, u_baseColor.z)       * step(v_myPos.y/v_myPos.w, u_baseColor.w);   gl_FragColor = u_channelFlag * texture2D(s_texture0, v_texCoord).a * isInside;}",fk="attribute vec4     a_position;attribute vec2     a_texCoord;varying vec2       v_texCoord;uniform mat4       u_matrix;void main(){   gl_Position = u_matrix * a_position;   v_texCoord = a_texCoord;   v_texCoord.y = 1.0 - v_texCoord.y;}",qm="attribute vec4     a_position;attribute vec2     a_texCoord;varying vec2       v_texCoord;varying vec4       v_clipPos;uniform mat4       u_matrix;uniform mat4       u_clipMatrix;void main(){   gl_Position = u_matrix * a_position;   v_clipPos = u_clipMatrix * a_position;   v_texCoord = a_texCoord;   v_texCoord.y = 1.0 - v_texCoord.y;}",gk="precision mediump float;varying vec2       v_texCoord;uniform vec4       u_baseColor;uniform sampler2D  s_texture0;uniform vec4       u_multiplyColor;uniform vec4       u_screenColor;void main(){   vec4 texColor = texture2D(s_texture0, v_texCoord);   texColor.rgb = texColor.rgb * u_multiplyColor.rgb;   texColor.rgb = (texColor.rgb + u_screenColor.rgb * texColor.a) - (texColor.rgb * u_screenColor.rgb);   vec4 color = texColor * u_baseColor;   gl_FragColor = vec4(color.rgb, color.a);}",mk="precision mediump float;varying vec2       v_texCoord;varying vec4       v_clipPos;uniform vec4       u_baseColor;uniform vec4       u_channelFlag;uniform sampler2D  s_texture0;uniform sampler2D  s_texture1;uniform vec4       u_multiplyColor;uniform vec4       u_screenColor;void main(){   vec4 texColor = texture2D(s_texture0, v_texCoord);   texColor.rgb = texColor.rgb * u_multiplyColor.rgb;   texColor.rgb = (texColor.rgb + u_screenColor.rgb * texColor.a) - (texColor.rgb * u_screenColor.rgb);   vec4 col_formask = texColor * u_baseColor;   vec4 clipMask = (1.0 - texture2D(s_texture1, v_clipPos.xy / v_clipPos.w)) * u_channelFlag;   float maskVal = clipMask.r + clipMask.g + clipMask.b + clipMask.a;   col_formask = col_formask * maskVal;   gl_FragColor = col_formask;}",xk="precision mediump float;varying vec2      v_texCoord;varying vec4      v_clipPos;uniform sampler2D s_texture0;uniform sampler2D s_texture1;uniform vec4      u_channelFlag;uniform vec4      u_baseColor;uniform vec4      u_multiplyColor;uniform vec4      u_screenColor;void main(){   vec4 texColor = texture2D(s_texture0, v_texCoord);   texColor.rgb = texColor.rgb * u_multiplyColor.rgb;   texColor.rgb = (texColor.rgb + u_screenColor.rgb * texColor.a) - (texColor.rgb * u_screenColor.rgb);   vec4 col_formask = texColor * u_baseColor;   vec4 clipMask = (1.0 - texture2D(s_texture1, v_clipPos.xy / v_clipPos.w)) * u_channelFlag;   float maskVal = clipMask.r + clipMask.g + clipMask.b + clipMask.a;   col_formask = col_formask * (1.0 - maskVal);   gl_FragColor = col_formask;}";var Km;(n=>{n.CubismShaderSet=yb,n.CubismShader_WebGL=Mr,n.ShaderNames=bb})(Km||(Km={}));let Ts,oc;class Jh extends uk{getMaskRenderTexture(){if(this._maskTexture&&this._maskTexture.textures!=null)this._maskTexture.frameNo=this._currentFrameNo;else{this._maskRenderTextures!=null&&this._maskRenderTextures.clear(),this._maskRenderTextures=new ct,this._maskColorBuffers!=null&&this._maskColorBuffers.clear(),this._maskColorBuffers=new ct;const t=this._clippingMaskBufferSize;for(let e=0;e<this._renderTextureCount;e++)this._maskColorBuffers.pushBack(this.gl.createTexture()),this.gl.bindTexture(this.gl.TEXTURE_2D,this._maskColorBuffers.at(e)),this.gl.texImage2D(this.gl.TEXTURE_2D,0,this.gl.RGBA,t,t,0,this.gl.RGBA,this.gl.UNSIGNED_BYTE,null),this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_WRAP_S,this.gl.CLAMP_TO_EDGE),this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_WRAP_T,this.gl.CLAMP_TO_EDGE),this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_MIN_FILTER,this.gl.LINEAR),this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_MAG_FILTER,this.gl.LINEAR),this.gl.bindTexture(this.gl.TEXTURE_2D,null),this._maskRenderTextures.pushBack(this.gl.createFramebuffer()),this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,this._maskRenderTextures.at(e)),this.gl.framebufferTexture2D(this.gl.FRAMEBUFFER,this.gl.COLOR_ATTACHMENT0,this.gl.TEXTURE_2D,this._maskColorBuffers.at(e),0);this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,oc),this._maskTexture=new wb(this._currentFrameNo,this._maskRenderTextures)}return this._maskTexture.textures}setGL(t){this.gl=t}constructor(){super(Cb)}setupClippingContext(t,e){this._currentFrameNo++;let s=0;for(let r=0;r<this._clippingContextListForMask.getSize();r++){const i=this._clippingContextListForMask.at(r);this.calcClippedDrawTotalBounds(t,i),i._isUsing&&s++}if(s>0){this.gl.viewport(0,0,this._clippingMaskBufferSize,this._clippingMaskBufferSize),this._currentMaskRenderTexture=this.getMaskRenderTexture().at(0),e.preDraw(),this.setupLayoutBounds(s),this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,this._currentMaskRenderTexture),this._clearedFrameBufferFlags.getSize()!=this._renderTextureCount&&(this._clearedFrameBufferFlags.clear(),this._clearedFrameBufferFlags=new ct(this._renderTextureCount));for(let r=0;r<this._clearedFrameBufferFlags.getSize();r++)this._clearedFrameBufferFlags.set(r,!1);for(let r=0;r<this._clippingContextListForMask.getSize();r++){const i=this._clippingContextListForMask.at(r),o=i._allClippedDrawRect,a=i._layoutBounds,l=.05;let c=0,u=0;const h=this.getMaskRenderTexture().at(i._bufferIndex);this._currentMaskRenderTexture!=h&&(this._currentMaskRenderTexture=h,e.preDraw(),this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,this._currentMaskRenderTexture)),this._tmpBoundsOnModel.setRect(o),this._tmpBoundsOnModel.expand(o.width*l,o.height*l),c=a.width/this._tmpBoundsOnModel.width,u=a.height/this._tmpBoundsOnModel.height,this._tmpMatrix.loadIdentity(),this._tmpMatrix.translateRelative(-1,-1),this._tmpMatrix.scaleRelative(2,2),this._tmpMatrix.translateRelative(a.x,a.y),this._tmpMatrix.scaleRelative(c,u),this._tmpMatrix.translateRelative(-this._tmpBoundsOnModel.x,-this._tmpBoundsOnModel.y),this._tmpMatrixForMask.setMatrix(this._tmpMatrix.getArray()),this._tmpMatrix.loadIdentity(),this._tmpMatrix.translateRelative(a.x,a.y),this._tmpMatrix.scaleRelative(c,u),this._tmpMatrix.translateRelative(-this._tmpBoundsOnModel.x,-this._tmpBoundsOnModel.y),this._tmpMatrixForDraw.setMatrix(this._tmpMatrix.getArray()),i._matrixForMask.setMatrix(this._tmpMatrixForMask.getArray()),i._matrixForDraw.setMatrix(this._tmpMatrixForDraw.getArray());const d=i._clippingIdCount;for(let p=0;p<d;p++){const f=i._clippingIdList[p];t.getDrawableDynamicFlagVertexPositionsDidChange(f)&&(e.setIsCulling(t.getDrawableCulling(f)!=!1),this._clearedFrameBufferFlags.at(i._bufferIndex)||(this.gl.clearColor(1,1,1,1),this.gl.clear(this.gl.COLOR_BUFFER_BIT),this._clearedFrameBufferFlags.set(i._bufferIndex,!0)),e.setClippingContextBufferForMask(i),e.drawMeshWebGL(t,f))}}this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,oc),e.setClippingContextBufferForMask(null),this.gl.viewport(Ts[0],Ts[1],Ts[2],Ts[3])}}getColorBuffer(){return this._maskColorBuffers}getClippingMaskCount(){return this._clippingContextListForMask.getSize()}}class wb{constructor(t,e){this.frameNo=t,this.textures=e}}class Cb extends CI{constructor(t,e,s){super(e,s),this._owner=t}getClippingManager(){return this._owner}setGl(t){this._owner.setGL(t)}}class yk{setGlEnable(t,e){e?this.gl.enable(t):this.gl.disable(t)}setGlEnableVertexAttribArray(t,e){e?this.gl.enableVertexAttribArray(t):this.gl.disableVertexAttribArray(t)}save(){if(this.gl==null){Ut(`'gl' is null. WebGLRenderingContext is required.
Please call 'CubimRenderer_WebGL.startUp' function.`);return}this._lastArrayBufferBinding=this.gl.getParameter(this.gl.ARRAY_BUFFER_BINDING),this._lastElementArrayBufferBinding=this.gl.getParameter(this.gl.ELEMENT_ARRAY_BUFFER_BINDING),this._lastProgram=this.gl.getParameter(this.gl.CURRENT_PROGRAM),this._lastActiveTexture=this.gl.getParameter(this.gl.ACTIVE_TEXTURE),this.gl.activeTexture(this.gl.TEXTURE1),this._lastTexture1Binding2D=this.gl.getParameter(this.gl.TEXTURE_BINDING_2D),this.gl.activeTexture(this.gl.TEXTURE0),this._lastTexture0Binding2D=this.gl.getParameter(this.gl.TEXTURE_BINDING_2D),this._lastVertexAttribArrayEnabled[0]=this.gl.getVertexAttrib(0,this.gl.VERTEX_ATTRIB_ARRAY_ENABLED),this._lastVertexAttribArrayEnabled[1]=this.gl.getVertexAttrib(1,this.gl.VERTEX_ATTRIB_ARRAY_ENABLED),this._lastVertexAttribArrayEnabled[2]=this.gl.getVertexAttrib(2,this.gl.VERTEX_ATTRIB_ARRAY_ENABLED),this._lastVertexAttribArrayEnabled[3]=this.gl.getVertexAttrib(3,this.gl.VERTEX_ATTRIB_ARRAY_ENABLED),this._lastScissorTest=this.gl.isEnabled(this.gl.SCISSOR_TEST),this._lastStencilTest=this.gl.isEnabled(this.gl.STENCIL_TEST),this._lastDepthTest=this.gl.isEnabled(this.gl.DEPTH_TEST),this._lastCullFace=this.gl.isEnabled(this.gl.CULL_FACE),this._lastBlend=this.gl.isEnabled(this.gl.BLEND),this._lastFrontFace=this.gl.getParameter(this.gl.FRONT_FACE),this._lastColorMask=this.gl.getParameter(this.gl.COLOR_WRITEMASK),this._lastBlending[0]=this.gl.getParameter(this.gl.BLEND_SRC_RGB),this._lastBlending[1]=this.gl.getParameter(this.gl.BLEND_DST_RGB),this._lastBlending[2]=this.gl.getParameter(this.gl.BLEND_SRC_ALPHA),this._lastBlending[3]=this.gl.getParameter(this.gl.BLEND_DST_ALPHA),this._lastFBO=this.gl.getParameter(this.gl.FRAMEBUFFER_BINDING),this._lastViewport=this.gl.getParameter(this.gl.VIEWPORT)}restore(){if(this.gl==null){Ut(`'gl' is null. WebGLRenderingContext is required.
Please call 'CubimRenderer_WebGL.startUp' function.`);return}this.gl.useProgram(this._lastProgram),this.setGlEnableVertexAttribArray(0,this._lastVertexAttribArrayEnabled[0]),this.setGlEnableVertexAttribArray(1,this._lastVertexAttribArrayEnabled[1]),this.setGlEnableVertexAttribArray(2,this._lastVertexAttribArrayEnabled[2]),this.setGlEnableVertexAttribArray(3,this._lastVertexAttribArrayEnabled[3]),this.setGlEnable(this.gl.SCISSOR_TEST,this._lastScissorTest),this.setGlEnable(this.gl.STENCIL_TEST,this._lastStencilTest),this.setGlEnable(this.gl.DEPTH_TEST,this._lastDepthTest),this.setGlEnable(this.gl.CULL_FACE,this._lastCullFace),this.setGlEnable(this.gl.BLEND,this._lastBlend),this.gl.frontFace(this._lastFrontFace),this.gl.colorMask(this._lastColorMask[0],this._lastColorMask[1],this._lastColorMask[2],this._lastColorMask[3]),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this._lastArrayBufferBinding),this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER,this._lastElementArrayBufferBinding),this.gl.activeTexture(this.gl.TEXTURE1),this.gl.bindTexture(this.gl.TEXTURE_2D,this._lastTexture1Binding2D),this.gl.activeTexture(this.gl.TEXTURE0),this.gl.bindTexture(this.gl.TEXTURE_2D,this._lastTexture0Binding2D),this.gl.activeTexture(this._lastActiveTexture),this.gl.blendFuncSeparate(this._lastBlending[0],this._lastBlending[1],this._lastBlending[2],this._lastBlending[3])}setGl(t){this.gl=t}constructor(){this._lastVertexAttribArrayEnabled=new Array(4),this._lastColorMask=new Array(4),this._lastBlending=new Array(4),this._lastViewport=new Array(4)}}class Gd extends Lc{initialize(t,e=1){t.isUsingMasking()&&(this._clippingManager=new Jh,this._clippingManager.initialize(t,e)),this._sortedDrawableIndexList.resize(t.getDrawableCount(),0),super.initialize(t)}bindTexture(t,e){this._textures.setValue(t,e)}getBindedTextures(){return this._textures}setClippingMaskBufferSize(t){if(!this._model.isUsingMasking())return;const e=this._clippingManager.getRenderTextureCount();this._clippingManager.release(),this._clippingManager=void 0,this._clippingManager=null,this._clippingManager=new Jh,this._clippingManager.setClippingMaskBufferSize(t),this._clippingManager.initialize(this.getModel(),e)}getClippingMaskBufferSize(){return this._model.isUsingMasking()?this._clippingManager.getClippingMaskBufferSize():-1}getRenderTextureCount(){return this._model.isUsingMasking()?this._clippingManager.getRenderTextureCount():-1}constructor(){super(),this._clippingContextBufferForMask=null,this._clippingContextBufferForDraw=null,this._rendererProfile=new yk,this.firstDraw=!0,this._textures=new xn,this._sortedDrawableIndexList=new ct,this._bufferData={vertex:WebGLBuffer=null,uv:WebGLBuffer=null,index:WebGLBuffer=null},this._textures.prepareCapacity(32,!0)}release(){this._clippingManager&&(this._clippingManager.release(),this._clippingManager=void 0,this._clippingManager=null),this.gl!=null&&(this.gl.deleteBuffer(this._bufferData.vertex),this._bufferData.vertex=null,this.gl.deleteBuffer(this._bufferData.uv),this._bufferData.uv=null,this.gl.deleteBuffer(this._bufferData.index),this._bufferData.index=null,this._bufferData=null,this._textures=null)}doDrawModel(){if(this.gl==null){Ut(`'gl' is null. WebGLRenderingContext is required.
Please call 'CubimRenderer_WebGL.startUp' function.`);return}this._clippingManager!=null&&(this.preDraw(),this.isUsingHighPrecisionMask()?this._clippingManager.setupMatrixForHighPrecision(this.getModel(),!1):this._clippingManager.setupClippingContext(this.getModel(),this)),this.preDraw();const t=this.getModel().getDrawableCount(),e=this.getModel().getDrawableRenderOrders();for(let s=0;s<t;++s){const r=e[s];this._sortedDrawableIndexList.set(r,s)}for(let s=0;s<t;++s){const r=this._sortedDrawableIndexList.at(s);if(!this.getModel().getDrawableDynamicFlagIsVisible(r))continue;const i=this._clippingManager!=null?this._clippingManager.getClippingContextListForDraw().at(r):null;if(i!=null&&this.isUsingHighPrecisionMask()){i._isUsing&&(this.gl.viewport(0,0,this._clippingManager.getClippingMaskBufferSize(),this._clippingManager.getClippingMaskBufferSize()),this.preDraw(),this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,i.getClippingManager().getMaskRenderTexture().at(i._bufferIndex)),this.gl.clearColor(1,1,1,1),this.gl.clear(this.gl.COLOR_BUFFER_BIT));{const o=i._clippingIdCount;for(let a=0;a<o;a++){const l=i._clippingIdList[a];this._model.getDrawableDynamicFlagVertexPositionsDidChange(l)&&(this.setIsCulling(this._model.getDrawableCulling(l)!=!1),this.setClippingContextBufferForMask(i),this.drawMeshWebGL(this._model,l))}}this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,oc),this.setClippingContextBufferForMask(null),this.gl.viewport(Ts[0],Ts[1],Ts[2],Ts[3]),this.preDraw()}this.setClippingContextBufferForDraw(i),this.setIsCulling(this.getModel().getDrawableCulling(r)),this.drawMeshWebGL(this._model,r)}}drawMeshWebGL(t,e){this.isCulling()?this.gl.enable(this.gl.CULL_FACE):this.gl.disable(this.gl.CULL_FACE),this.gl.frontFace(this.gl.CCW),this.isGeneratingMask()?Mr.getInstance().setupShaderProgramForMask(this,t,e):Mr.getInstance().setupShaderProgramForDraw(this,t,e);{const s=t.getDrawableVertexIndexCount(e);this.gl.drawElements(this.gl.TRIANGLES,s,this.gl.UNSIGNED_SHORT,0)}this.gl.useProgram(null),this.setClippingContextBufferForDraw(null),this.setClippingContextBufferForMask(null)}saveProfile(){this._rendererProfile.save()}restoreProfile(){this._rendererProfile.restore()}static doStaticRelease(){Mr.deleteInstance()}setRenderState(t,e){oc=t,Ts=e}preDraw(){if(this.firstDraw&&(this.firstDraw=!1),this.gl.disable(this.gl.SCISSOR_TEST),this.gl.disable(this.gl.STENCIL_TEST),this.gl.disable(this.gl.DEPTH_TEST),this.gl.frontFace(this.gl.CW),this.gl.enable(this.gl.BLEND),this.gl.colorMask(!0,!0,!0,!0),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,null),this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER,null),this.getAnisotropy()>0&&this._extension)for(let t=0;t<this._textures.getSize();++t)this.gl.bindTexture(this.gl.TEXTURE_2D,this._textures.getValue(t)),this.gl.texParameterf(this.gl.TEXTURE_2D,this._extension.TEXTURE_MAX_ANISOTROPY_EXT,this.getAnisotropy())}setClippingContextBufferForMask(t){this._clippingContextBufferForMask=t}getClippingContextBufferForMask(){return this._clippingContextBufferForMask}setClippingContextBufferForDraw(t){this._clippingContextBufferForDraw=t}getClippingContextBufferForDraw(){return this._clippingContextBufferForDraw}isGeneratingMask(){return this.getClippingContextBufferForMask()!=null}startUp(t){this.gl=t,this._clippingManager&&this._clippingManager.setGL(t),Mr.getInstance().setGl(t),this._rendererProfile.setGl(t),this._extension=this.gl.getExtension("EXT_texture_filter_anisotropic")||this.gl.getExtension("WEBKIT_EXT_texture_filter_anisotropic")||this.gl.getExtension("MOZ_EXT_texture_filter_anisotropic")}}Lc.staticRelease=()=>{Gd.doStaticRelease()};var Ym;(n=>{n.CubismClippingContext=Cb,n.CubismClippingManager_WebGL=Jh,n.CubismRenderTextureResource=wb,n.CubismRenderer_WebGL=Gd})(Ym||(Ym={}));class Jm{constructor(t=!1,e=new rn){this.isOverwritten=t,this.color=e}}class Zm{constructor(t=!1,e=new rn){this.isOverwritten=t,this.color=e}}class bk{constructor(t=!1,e=!1){this.isOverwritten=t,this.isCulling=e}}class _b{update(){this._model.update(),this._model.drawables.resetDynamicFlags()}getPixelsPerUnit(){return this._model==null?0:this._model.canvasinfo.PixelsPerUnit}getCanvasWidth(){return this._model==null?0:this._model.canvasinfo.CanvasWidth/this._model.canvasinfo.PixelsPerUnit}getCanvasHeight(){return this._model==null?0:this._model.canvasinfo.CanvasHeight/this._model.canvasinfo.PixelsPerUnit}saveParameters(){const t=this._model.parameters.count,e=this._savedParameters.getSize();for(let s=0;s<t;++s)s<e?this._savedParameters.set(s,this._parameterValues[s]):this._savedParameters.pushBack(this._parameterValues[s])}getMultiplyColor(t){return this.getOverwriteFlagForModelMultiplyColors()||this.getOverwriteFlagForDrawableMultiplyColors(t)?this._userMultiplyColors.at(t).color:this.getDrawableMultiplyColor(t)}getScreenColor(t){return this.getOverwriteFlagForModelScreenColors()||this.getOverwriteFlagForDrawableScreenColors(t)?this._userScreenColors.at(t).color:this.getDrawableScreenColor(t)}setMultiplyColorByTextureColor(t,e){this.setMultiplyColorByRGBA(t,e.r,e.g,e.b,e.a)}setMultiplyColorByRGBA(t,e,s,r,i=1){this._userMultiplyColors.at(t).color.r=e,this._userMultiplyColors.at(t).color.g=s,this._userMultiplyColors.at(t).color.b=r,this._userMultiplyColors.at(t).color.a=i}setScreenColorByTextureColor(t,e){this.setScreenColorByRGBA(t,e.r,e.g,e.b,e.a)}setScreenColorByRGBA(t,e,s,r,i=1){this._userScreenColors.at(t).color.r=e,this._userScreenColors.at(t).color.g=s,this._userScreenColors.at(t).color.b=r,this._userScreenColors.at(t).color.a=i}getPartMultiplyColor(t){return this._userPartMultiplyColors.at(t).color}getPartScreenColor(t){return this._userPartScreenColors.at(t).color}setPartColor(t,e,s,r,i,o,a){if(o.at(t).color.r=e,o.at(t).color.g=s,o.at(t).color.b=r,o.at(t).color.a=i,o.at(t).isOverwritten)for(let l=0;l<this._partChildDrawables.at(t).getSize();++l){const c=this._partChildDrawables.at(t).at(l);a.at(c).color.r=e,a.at(c).color.g=s,a.at(c).color.b=r,a.at(c).color.a=i}}setPartMultiplyColorByTextureColor(t,e){this.setPartMultiplyColorByRGBA(t,e.r,e.g,e.b,e.a)}setPartMultiplyColorByRGBA(t,e,s,r,i){this.setPartColor(t,e,s,r,i,this._userPartMultiplyColors,this._userMultiplyColors)}setPartScreenColorByTextureColor(t,e){this.setPartScreenColorByRGBA(t,e.r,e.g,e.b,e.a)}setPartScreenColorByRGBA(t,e,s,r,i){this.setPartColor(t,e,s,r,i,this._userPartScreenColors,this._userScreenColors)}getOverwriteFlagForModelMultiplyColors(){return this._isOverwrittenModelMultiplyColors}getOverwriteFlagForModelScreenColors(){return this._isOverwrittenModelScreenColors}setOverwriteFlagForModelMultiplyColors(t){this._isOverwrittenModelMultiplyColors=t}setOverwriteFlagForModelScreenColors(t){this._isOverwrittenModelScreenColors=t}getOverwriteFlagForDrawableMultiplyColors(t){return this._userMultiplyColors.at(t).isOverwritten}getOverwriteFlagForDrawableScreenColors(t){return this._userScreenColors.at(t).isOverwritten}setOverwriteFlagForDrawableMultiplyColors(t,e){this._userMultiplyColors.at(t).isOverwritten=e}setOverwriteFlagForDrawableScreenColors(t,e){this._userScreenColors.at(t).isOverwritten=e}getOverwriteColorForPartMultiplyColors(t){return this._userPartMultiplyColors.at(t).isOverwritten}getOverwriteColorForPartScreenColors(t){return this._userPartScreenColors.at(t).isOverwritten}setOverwriteColorForPartColors(t,e,s,r){s.at(t).isOverwritten=e;for(let i=0;i<this._partChildDrawables.at(t).getSize();++i){const o=this._partChildDrawables.at(t).at(i);r.at(o).isOverwritten=e,e&&(r.at(o).color.r=s.at(t).color.r,r.at(o).color.g=s.at(t).color.g,r.at(o).color.b=s.at(t).color.b,r.at(o).color.a=s.at(t).color.a)}}setOverwriteColorForPartMultiplyColors(t,e){this._userPartMultiplyColors.at(t).isOverwritten=e,this.setOverwriteColorForPartColors(t,e,this._userPartMultiplyColors,this._userMultiplyColors)}setOverwriteColorForPartScreenColors(t,e){this._userPartScreenColors.at(t).isOverwritten=e,this.setOverwriteColorForPartColors(t,e,this._userPartScreenColors,this._userScreenColors)}getDrawableCulling(t){if(this.getOverwriteFlagForModelCullings()||this.getOverwriteFlagForDrawableCullings(t))return this._userCullings.at(t).isCulling;const e=this._model.drawables.constantFlags;return!Live2DCubismCore.Utils.hasIsDoubleSidedBit(e[t])}setDrawableCulling(t,e){this._userCullings.at(t).isCulling=e}getOverwriteFlagForModelCullings(){return this._isOverwrittenCullings}setOverwriteFlagForModelCullings(t){this._isOverwrittenCullings=t}getOverwriteFlagForDrawableCullings(t){return this._userCullings.at(t).isOverwritten}setOverwriteFlagForDrawableCullings(t,e){this._userCullings.at(t).isOverwritten=e}getModelOapcity(){return this._modelOpacity}setModelOapcity(t){this._modelOpacity=t}getModel(){return this._model}getPartIndex(t){let e;const s=this._model.parts.count;for(e=0;e<s;++e)if(t==this._partIds.at(e))return e;return this._notExistPartId.isExist(t)?this._notExistPartId.getValue(t):(e=s+this._notExistPartId.getSize(),this._notExistPartId.setValue(t,e),this._notExistPartOpacities.appendKey(e),e)}getPartId(t){const e=this._model.parts.ids[t];return Nt.getIdManager().getId(e)}getPartCount(){return this._model.parts.count}setPartOpacityByIndex(t,e){if(this._notExistPartOpacities.isExist(t)){this._notExistPartOpacities.setValue(t,e);return}qn(0<=t&&t<this.getPartCount()),this._partOpacities[t]=e}setPartOpacityById(t,e){const s=this.getPartIndex(t);s<0||this.setPartOpacityByIndex(s,e)}getPartOpacityByIndex(t){return this._notExistPartOpacities.isExist(t)?this._notExistPartOpacities.getValue(t):(qn(0<=t&&t<this.getPartCount()),this._partOpacities[t])}getPartOpacityById(t){const e=this.getPartIndex(t);return e<0?0:this.getPartOpacityByIndex(e)}getParameterIndex(t){let e;const s=this._model.parameters.count;for(e=0;e<s;++e)if(t==this._parameterIds.at(e))return e;return this._notExistParameterId.isExist(t)?this._notExistParameterId.getValue(t):(e=this._model.parameters.count+this._notExistParameterId.getSize(),this._notExistParameterId.setValue(t,e),this._notExistParameterValues.appendKey(e),e)}getParameterCount(){return this._model.parameters.count}getParameterType(t){return this._model.parameters.types[t]}getParameterMaximumValue(t){return this._model.parameters.maximumValues[t]}getParameterMinimumValue(t){return this._model.parameters.minimumValues[t]}getParameterDefaultValue(t){return this._model.parameters.defaultValues[t]}getParameterId(t){return Nt.getIdManager().getId(this._model.parameters.ids[t])}getParameterValueByIndex(t){return this._notExistParameterValues.isExist(t)?this._notExistParameterValues.getValue(t):(qn(0<=t&&t<this.getParameterCount()),this._parameterValues[t])}getParameterValueById(t){const e=this.getParameterIndex(t);return this.getParameterValueByIndex(e)}setParameterValueByIndex(t,e,s=1){if(this._notExistParameterValues.isExist(t)){this._notExistParameterValues.setValue(t,s==1?e:this._notExistParameterValues.getValue(t)*(1-s)+e*s);return}qn(0<=t&&t<this.getParameterCount()),this._model.parameters.maximumValues[t]<e&&(e=this._model.parameters.maximumValues[t]),this._model.parameters.minimumValues[t]>e&&(e=this._model.parameters.minimumValues[t]),this._parameterValues[t]=s==1?e:this._parameterValues[t]=this._parameterValues[t]*(1-s)+e*s}setParameterValueById(t,e,s=1){const r=this.getParameterIndex(t);this.setParameterValueByIndex(r,e,s)}addParameterValueByIndex(t,e,s=1){this.setParameterValueByIndex(t,this.getParameterValueByIndex(t)+e*s)}addParameterValueById(t,e,s=1){const r=this.getParameterIndex(t);this.addParameterValueByIndex(r,e,s)}multiplyParameterValueById(t,e,s=1){const r=this.getParameterIndex(t);this.multiplyParameterValueByIndex(r,e,s)}multiplyParameterValueByIndex(t,e,s=1){this.setParameterValueByIndex(t,this.getParameterValueByIndex(t)*(1+(e-1)*s))}getDrawableIndex(t){const e=this._model.drawables.count;for(let s=0;s<e;++s)if(this._drawableIds.at(s)==t)return s;return-1}getDrawableCount(){return this._model.drawables.count}getDrawableId(t){const e=this._model.drawables.ids;return Nt.getIdManager().getId(e[t])}getDrawableRenderOrders(){return this._model.drawables.renderOrders}getDrawableTextureIndices(t){return this.getDrawableTextureIndex(t)}getDrawableTextureIndex(t){return this._model.drawables.textureIndices[t]}getDrawableDynamicFlagVertexPositionsDidChange(t){const e=this._model.drawables.dynamicFlags;return Live2DCubismCore.Utils.hasVertexPositionsDidChangeBit(e[t])}getDrawableVertexIndexCount(t){return this._model.drawables.indexCounts[t]}getDrawableVertexCount(t){return this._model.drawables.vertexCounts[t]}getDrawableVertices(t){return this.getDrawableVertexPositions(t)}getDrawableVertexIndices(t){return this._model.drawables.indices[t]}getDrawableVertexPositions(t){return this._model.drawables.vertexPositions[t]}getDrawableVertexUvs(t){return this._model.drawables.vertexUvs[t]}getDrawableOpacity(t){return this._model.drawables.opacities[t]}getDrawableMultiplyColor(t){const e=this._model.drawables.multiplyColors,s=t*4,r=new rn;return r.r=e[s],r.g=e[s+1],r.b=e[s+2],r.a=e[s+3],r}getDrawableScreenColor(t){const e=this._model.drawables.screenColors,s=t*4,r=new rn;return r.r=e[s],r.g=e[s+1],r.b=e[s+2],r.a=e[s+3],r}getDrawableParentPartIndex(t){return this._model.drawables.parentPartIndices[t]}getDrawableBlendMode(t){const e=this._model.drawables.constantFlags;return Live2DCubismCore.Utils.hasBlendAdditiveBit(e[t])?tr.CubismBlendMode_Additive:Live2DCubismCore.Utils.hasBlendMultiplicativeBit(e[t])?tr.CubismBlendMode_Multiplicative:tr.CubismBlendMode_Normal}getDrawableInvertedMaskBit(t){const e=this._model.drawables.constantFlags;return Live2DCubismCore.Utils.hasIsInvertedMaskBit(e[t])}getDrawableMasks(){return this._model.drawables.masks}getDrawableMaskCounts(){return this._model.drawables.maskCounts}isUsingMasking(){for(let t=0;t<this._model.drawables.count;++t)if(!(this._model.drawables.maskCounts[t]<=0))return!0;return!1}getDrawableDynamicFlagIsVisible(t){const e=this._model.drawables.dynamicFlags;return Live2DCubismCore.Utils.hasIsVisibleBit(e[t])}getDrawableDynamicFlagVisibilityDidChange(t){const e=this._model.drawables.dynamicFlags;return Live2DCubismCore.Utils.hasVisibilityDidChangeBit(e[t])}getDrawableDynamicFlagOpacityDidChange(t){const e=this._model.drawables.dynamicFlags;return Live2DCubismCore.Utils.hasOpacityDidChangeBit(e[t])}getDrawableDynamicFlagRenderOrderDidChange(t){const e=this._model.drawables.dynamicFlags;return Live2DCubismCore.Utils.hasRenderOrderDidChangeBit(e[t])}getDrawableDynamicFlagBlendColorDidChange(t){const e=this._model.drawables.dynamicFlags;return Live2DCubismCore.Utils.hasBlendColorDidChangeBit(e[t])}loadParameters(){let t=this._model.parameters.count;const e=this._savedParameters.getSize();t>e&&(t=e);for(let s=0;s<t;++s)this._parameterValues[s]=this._savedParameters.at(s)}initialize(){qn(this._model),this._parameterValues=this._model.parameters.values,this._partOpacities=this._model.parts.opacities,this._parameterMaximumValues=this._model.parameters.maximumValues,this._parameterMinimumValues=this._model.parameters.minimumValues;{const e=this._model.parameters.ids,s=this._model.parameters.count;this._parameterIds.prepareCapacity(s);for(let r=0;r<s;++r)this._parameterIds.pushBack(Nt.getIdManager().getId(e[r]))}const t=this._model.parts.count;{const e=this._model.parts.ids;this._partIds.prepareCapacity(t);for(let s=0;s<t;++s)this._partIds.pushBack(Nt.getIdManager().getId(e[s]));this._userPartMultiplyColors.prepareCapacity(t),this._userPartScreenColors.prepareCapacity(t),this._partChildDrawables.prepareCapacity(t)}{const e=this._model.drawables.ids,s=this._model.drawables.count;this._userMultiplyColors.prepareCapacity(s),this._userScreenColors.prepareCapacity(s),this._userCullings.prepareCapacity(s);const r=new bk(!1,!1);for(let i=0;i<t;++i){const o=new rn(1,1,1,1),a=new rn(0,0,0,1),l=new Zm(!1,o),c=new Zm(!1,a);this._userPartMultiplyColors.pushBack(l),this._userPartScreenColors.pushBack(c),this._partChildDrawables.pushBack(new ct),this._partChildDrawables.at(i).prepareCapacity(s)}for(let i=0;i<s;++i){const o=new rn(1,1,1,1),a=new rn(0,0,0,1),l=new Jm(!1,o),c=new Jm(!1,a);this._drawableIds.pushBack(Nt.getIdManager().getId(e[i])),this._userMultiplyColors.pushBack(l),this._userScreenColors.pushBack(c),this._userCullings.pushBack(r);const u=this.getDrawableParentPartIndex(i);u>=0&&this._partChildDrawables.at(u).pushBack(i)}}}constructor(t){this._model=t,this._parameterValues=null,this._parameterMaximumValues=null,this._parameterMinimumValues=null,this._partOpacities=null,this._savedParameters=new ct,this._parameterIds=new ct,this._drawableIds=new ct,this._partIds=new ct,this._isOverwrittenModelMultiplyColors=!1,this._isOverwrittenModelScreenColors=!1,this._isOverwrittenCullings=!1,this._modelOpacity=1,this._userMultiplyColors=new ct,this._userScreenColors=new ct,this._userCullings=new ct,this._userPartMultiplyColors=new ct,this._userPartScreenColors=new ct,this._partChildDrawables=new ct,this._notExistPartId=new xn,this._notExistParameterId=new xn,this._notExistParameterValues=new xn,this._notExistPartOpacities=new xn}release(){this._model.release(),this._model=null}}var Qm;(n=>{n.CubismModel=_b})(Qm||(Qm={}));class aa{static create(t,e){let s=null;if(e&&!this.hasMocConsistency(t))return Ut("Inconsistent MOC3."),s;const r=Live2DCubismCore.Moc.fromArrayBuffer(t);return r&&(s=new aa(r),s._mocVersion=Live2DCubismCore.Version.csmGetMocVersion(r,t)),s}static delete(t){t._moc._release(),t._moc=null,t=null}createModel(){let t=null;const e=Live2DCubismCore.Model.fromMoc(this._moc);return e&&(t=new _b(e),t.initialize(),++this._modelCount),t}deleteModel(t){t!=null&&(t.release(),t=null,--this._modelCount)}constructor(t){this._moc=t,this._modelCount=0,this._mocVersion=0}release(){qn(this._modelCount==0),this._moc._release(),this._moc=null}getLatestMocVersion(){return Live2DCubismCore.Version.csmGetLatestMocVersion()}getMocVersion(){return this._mocVersion}static hasMocConsistency(t){return Live2DCubismCore.Moc.prototype.hasMocConsistency(t)===1}}var tx;(n=>{n.CubismMoc=aa})(tx||(tx={}));const ex="Meta",wk="UserDataCount",Ck="TotalUserDataSize",Eh="UserData",_k="Target",Sk="Id",Ik="Value";class Sb{constructor(t,e){this._json=Pe.create(t,e)}release(){Pe.delete(this._json)}getUserDataCount(){return this._json.getRoot().getValueByString(ex).getValueByString(wk).toInt()}getTotalUserDataSize(){return this._json.getRoot().getValueByString(ex).getValueByString(Ck).toInt()}getUserDataTargetType(t){return this._json.getRoot().getValueByString(Eh).getValueByIndex(t).getValueByString(_k).getRawString()}getUserDataId(t){return Nt.getIdManager().getId(this._json.getRoot().getValueByString(Eh).getValueByIndex(t).getValueByString(Sk).getRawString())}getUserDataValue(t){return this._json.getRoot().getValueByString(Eh).getValueByIndex(t).getValueByString(Ik).getRawString()}}var nx;(n=>{n.CubismModelUserDataJson=Sb})(nx||(nx={}));const vk="ArtMesh";class Ib{}class Xo{static create(t,e){const s=new Xo;return s.parseUserData(t,e),s}static delete(t){t!=null&&(t.release(),t=null)}getArtMeshUserDatas(){return this._artMeshUserDataNode}parseUserData(t,e){let s=new Sb(t,e);if(!s){s.release(),s=void 0;return}const r=Nt.getIdManager().getId(vk),i=s.getUserDataCount();for(let o=0;o<i;o++){const a=new Ib;a.targetId=s.getUserDataId(o),a.targetType=Nt.getIdManager().getId(s.getUserDataTargetType(o)),a.value=new An(s.getUserDataValue(o)),this._userDataNodes.pushBack(a),a.targetType==r&&this._artMeshUserDataNode.pushBack(a)}s.release(),s=void 0}constructor(){this._userDataNodes=new ct,this._artMeshUserDataNode=new ct}release(){for(let t=0;t<this._userDataNodes.getSize();++t)this._userDataNodes.set(t,null);this._userDataNodes=null}}var sx;(n=>{n.CubismModelUserData=Xo,n.CubismModelUserDataNode=Ib})(sx||(sx={}));class zc{isInitialized(){return this._initialized}setInitialized(t){this._initialized=t}isUpdating(){return this._updating}setUpdating(t){this._updating=t}setDragging(t,e){this._dragManager.set(t,e)}setAcceleration(t,e,s){this._accelerationX=t,this._accelerationY=e,this._accelerationZ=s}getModelMatrix(){return this._modelMatrix}setOpacity(t){this._opacity=t}getOpacity(){return this._opacity}loadModel(t,e=!1){if(this._moc=aa.create(t,e),this._moc==null){Ut("Failed to CubismMoc.create().");return}if(this._model=this._moc.createModel(),this._model==null){Ut("Failed to CreateModel().");return}this._model.saveParameters(),this._modelMatrix=new Zy(this._model.getCanvasWidth(),this._model.getCanvasHeight())}loadMotion(t,e,s,r){return t==null||e==0?(Ut("Failed to loadMotion()."),null):Vc.create(t,e,r)}loadExpression(t,e,s){return t==null||e==0?(Ut("Failed to loadExpression()."),null):Ys.create(t,e)}loadPose(t,e){if(t==null||e==0){Ut("Failed to loadPose().");return}this._pose=Wo.create(t,e)}loadUserData(t,e){if(t==null||e==0){Ut("Failed to loadUserData().");return}this._modelUserData=Xo.create(t,e)}loadPhysics(t,e){if(t==null||e==0){Ut("Failed to loadPhysics().");return}this._physics=Ho.create(t,e)}isHit(t,e,s){const r=this._model.getDrawableIndex(t);if(r<0)return!1;const i=this._model.getDrawableVertexCount(r),o=this._model.getDrawableVertices(r);let a=o[0],l=o[0],c=o[1],u=o[1];for(let p=1;p<i;++p){const f=o[Ks.vertexOffset+p*Ks.vertexStep],m=o[Ks.vertexOffset+p*Ks.vertexStep+1];f<a&&(a=f),f>l&&(l=f),m<c&&(c=m),m>u&&(u=m)}const h=this._modelMatrix.invertTransformX(e),d=this._modelMatrix.invertTransformY(s);return a<=h&&h<=l&&c<=d&&d<=u}getModel(){return this._model}getRenderer(){return this._renderer}createRenderer(t=1){this._renderer&&this.deleteRenderer(),this._renderer=new Gd,this._renderer.initialize(this._model,t)}deleteRenderer(){this._renderer!=null&&(this._renderer.release(),this._renderer=null)}motionEventFired(t){Kn("{0}",t.s)}static cubismDefaultMotionEventCallback(t,e,s){const r=s;r!=null&&r.motionEventFired(e)}constructor(){this._moc=null,this._model=null,this._motionManager=null,this._expressionManager=null,this._eyeBlink=null,this._breath=null,this._modelMatrix=null,this._pose=null,this._dragManager=null,this._physics=null,this._modelUserData=null,this._initialized=!1,this._updating=!1,this._opacity=1,this._lipsync=!0,this._lastLipSyncValue=0,this._dragX=0,this._dragY=0,this._accelerationX=0,this._accelerationY=0,this._accelerationZ=0,this._mocConsistency=!1,this._debugMode=!1,this._renderer=null,this._motionManager=new ub,this._motionManager.setEventCallback(zc.cubismDefaultMotionEventCallback,this),this._expressionManager=new sb,this._dragManager=new Qy}release(){this._motionManager!=null&&(this._motionManager.release(),this._motionManager=null),this._expressionManager!=null&&(this._expressionManager.release(),this._expressionManager=null),this._moc!=null&&(this._moc.deleteModel(this._model),this._moc.release(),this._moc=null),this._modelMatrix=null,Wo.delete(this._pose),Uo.delete(this._eyeBlink),oa.delete(this._breath),this._dragManager=null,Ho.delete(this._physics),Xo.delete(this._modelUserData),this.deleteRenderer()}}var rx;(n=>{n.CubismUserModel=zc})(rx||(rx={}));const Ai=class Ai{static loadFileAsBytes(t,e){fetch(t).then(s=>s.arrayBuffer()).then(s=>e(s,s.byteLength))}static getDeltaTime(){return this.s_deltaTime}static updateTime(){this.s_currentFrame=Date.now(),this.s_deltaTime=(this.s_currentFrame-this.s_lastFrame)/1e3,this.s_lastFrame=this.s_currentFrame}static printMessage(t){console.log(t)}};Ai.lastUpdate=Date.now(),Ai.s_currentFrame=0,Ai.s_lastFrame=0,Ai.s_deltaTime=0;let Kt=Ai,_i=null;class Hd{constructor(){this._loadFiletoBytes=(t,e)=>{this._byteReader._fileByte=t,this._byteReader._fileDataView=new DataView(this._byteReader._fileByte),this._byteReader._fileSize=e},this._pcmData=null,this._userTimeSeconds=0,this._lastRms=0,this._sampleOffset=0,this._wavFileInfo=new kk,this._byteReader=new $k}static getInstance(){return _i==null&&(_i=new Hd),_i}static releaseInstance(){_i!=null&&(_i=void 0),_i=null}update(t){let e,s;if(this._pcmData==null||this._sampleOffset>=this._wavFileInfo._samplesPerChannel)return this._lastRms=0,!1;this._userTimeSeconds+=t,e=Math.floor(this._userTimeSeconds*this._wavFileInfo._samplingRate),e>this._wavFileInfo._samplesPerChannel&&(e=this._wavFileInfo._samplesPerChannel),s=0;for(let r=0;r<this._wavFileInfo._numberOfChannels;r++)for(let i=this._sampleOffset;i<e;i++){const o=this._pcmData[r][i];s+=o*o}return s=Math.sqrt(s/(this._wavFileInfo._numberOfChannels*(e-this._sampleOffset))),this._lastRms=s,this._sampleOffset=e,!0}start(t){this._sampleOffset=0,this._userTimeSeconds=0,this._lastRms=0,this.loadWavFile(t)}getRms(){return this._lastRms}loadWavFile(t){return new Promise(e=>{let s=!1;this._pcmData!=null&&this.releasePcmData();const r=async()=>fetch(t).then(i=>i.arrayBuffer());(async()=>{if(this._byteReader._fileByte=await r(),this._byteReader._fileDataView=new DataView(this._byteReader._fileByte),this._byteReader._fileSize=this._byteReader._fileByte.byteLength,this._byteReader._readOffset=0,this._byteReader._fileByte==null||this._byteReader._fileSize<4){e(!1);return}this._wavFileInfo._fileName=t;try{if(!this._byteReader.getCheckSignature("RIFF"))throw s=!1,new Error('Cannot find Signeture "RIFF".');if(this._byteReader.get32LittleEndian(),!this._byteReader.getCheckSignature("WAVE"))throw s=!1,new Error('Cannot find Signeture "WAVE".');if(!this._byteReader.getCheckSignature("fmt "))throw s=!1,new Error('Cannot find Signeture "fmt".');const i=this._byteReader.get32LittleEndian();if(this._byteReader.get16LittleEndian()!=1)throw s=!1,new Error("File is not linear PCM.");for(this._wavFileInfo._numberOfChannels=this._byteReader.get16LittleEndian(),this._wavFileInfo._samplingRate=this._byteReader.get32LittleEndian(),this._byteReader.get32LittleEndian(),this._byteReader.get16LittleEndian(),this._wavFileInfo._bitsPerSample=this._byteReader.get16LittleEndian(),i>16&&(this._byteReader._readOffset+=i-16);!this._byteReader.getCheckSignature("data")&&this._byteReader._readOffset<this._byteReader._fileSize;)this._byteReader._readOffset+=this._byteReader.get32LittleEndian()+4;if(this._byteReader._readOffset>=this._byteReader._fileSize)throw s=!1,new Error('Cannot find "data" Chunk.');{const o=this._byteReader.get32LittleEndian();this._wavFileInfo._samplesPerChannel=o*8/(this._wavFileInfo._bitsPerSample*this._wavFileInfo._numberOfChannels)}this._pcmData=new Array(this._wavFileInfo._numberOfChannels);for(let o=0;o<this._wavFileInfo._numberOfChannels;o++)this._pcmData[o]=new Float32Array(this._wavFileInfo._samplesPerChannel);for(let o=0;o<this._wavFileInfo._samplesPerChannel;o++)for(let a=0;a<this._wavFileInfo._numberOfChannels;a++)this._pcmData[a][o]=this.getPcmSample();s=!0,e(s)}catch(i){console.log(i)}})().then(()=>{e(s)})})}getPcmSample(){let t;switch(this._wavFileInfo._bitsPerSample){case 8:t=this._byteReader.get8()-128,t<<=24;break;case 16:t=this._byteReader.get16LittleEndian()<<16;break;case 24:t=this._byteReader.get24LittleEndian()<<8;break;default:t=0;break}return t/2147483647}getPcmDataChannel(t){return!this._pcmData||!(t<this._pcmData.length)?null:Float32Array.from(this._pcmData[t])}getWavSamplingRate(){return!this._wavFileInfo||this._wavFileInfo._samplingRate<1?null:this._wavFileInfo._samplingRate}releasePcmData(){for(let t=0;t<this._wavFileInfo._numberOfChannels;t++)delete this._pcmData[t];delete this._pcmData,this._pcmData=null}}class kk{constructor(){this._fileName="",this._numberOfChannels=0,this._bitsPerSample=0,this._samplingRate=0,this._samplesPerChannel=0}}class $k{constructor(){this._fileByte=null,this._fileDataView=null,this._fileSize=0,this._readOffset=0}get8(){const t=this._fileDataView.getUint8(this._readOffset);return this._readOffset++,t}get16LittleEndian(){const t=this._fileDataView.getUint8(this._readOffset+1)<<8|this._fileDataView.getUint8(this._readOffset);return this._readOffset+=2,t}get24LittleEndian(){const t=this._fileDataView.getUint8(this._readOffset+2)<<16|this._fileDataView.getUint8(this._readOffset+1)<<8|this._fileDataView.getUint8(this._readOffset);return this._readOffset+=3,t}get32LittleEndian(){const t=this._fileDataView.getUint8(this._readOffset+3)<<24|this._fileDataView.getUint8(this._readOffset+2)<<16|this._fileDataView.getUint8(this._readOffset+1)<<8|this._fileDataView.getUint8(this._readOffset);return this._readOffset+=4,t}getCheckSignature(t){const e=new Uint8Array(4),s=new TextEncoder().encode(t);if(t.length!=4)return!1;for(let r=0;r<4;r++)e[r]=this.get8();return e[0]==s[0]&&e[1]==s[1]&&e[2]==s[2]&&e[3]==s[3]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tk=1e-7,Nk=1e-4;class vb{constructor(t,e){this.backend=t,this.dataMover=e,this.data=new WeakMap,this.dataIdsCount=0}get(t){return this.data.has(t)||this.dataMover.moveData(this.backend,t),this.data.get(t)}set(t,e){this.dataIdsCount++,this.data.set(t,e)}has(t){return this.data.has(t)}delete(t){return this.dataIdsCount--,this.data.delete(t)}numDataIds(){return this.dataIdsCount}}class Xd{refCount(t){return sn("refCount")}incRef(t){return sn("incRef")}timerAvailable(){return!0}time(t){return sn("time")}read(t){return sn("read")}readSync(t){return sn("readSync")}readToGPU(t,e){return sn("readToGPU")}numDataIds(){return sn("numDataIds")}disposeData(t,e){return sn("disposeData")}write(t,e,s){return sn("write")}move(t,e,s,r,i){return sn("move")}createTensorFromGPUData(t,e,s){return sn("createTensorFromGPUData")}memory(){return sn("memory")}floatPrecision(){return sn("floatPrecision")}epsilon(){return this.floatPrecision()===32?Tk:Nk}dispose(){return sn("dispose")}}function sn(n){throw new Error(`'${n}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ek(n){let t=n.length,e=0;for(;t>0;)e=Math.random()*t|0,t--,Ti(n,t,e)}function Gr(n,t,e){return Math.max(n,Math.min(t,e))}function jd(n){return n%2===0?n:n+1}function Ti(n,t,e){const s=n[t];n[t]=n[e],n[e]=s}function Rk(n){let t=0;for(let e=0;e<n.length;e++)t+=n[e];return t}function S(n,t){if(!n)throw new Error(typeof t=="string"?t:t())}function qd(n,t,e=""){S(Pt(n,t),()=>e+` Shapes ${n} and ${t} must match`)}function kb(n){S(n!=null,()=>"The input to the tensor constructor must be a non-null value.")}function W(n){if(n.length===0)return 1;let t=n[0];for(let e=1;e<n.length;e++)t*=n[e];return t}function Pt(n,t){if(n===t)return!0;if(n==null||t==null||n.length!==t.length)return!1;for(let e=0;e<n.length;e++)if(n[e]!==t[e])return!1;return!0}function Gi(n){return n%1===0}function Zh(n){const t=Math.ceil(Math.sqrt(n));return[t,Math.ceil(n/t)]}function Oi(n,t){return t<=n.length?n:n+" ".repeat(t-n.length)}function ix(n,t=r=>0,e,s){return new Promise((r,i)=>{let o=0;const a=()=>{if(n()){r();return}o++;const l=t(o);if(e!=null&&o>=e){i();return}s!=null?s(a,l):setTimeout(a,l)};a()})}function $b(n,t){let e=1,s=-1;for(let i=0;i<n.length;++i)if(n[i]>=0)e*=n[i];else if(n[i]===-1){if(s!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${s} and dim ${i}`);s=i}else if(n[i]<0)throw Error(`Shapes can not be < 0. Found ${n[i]} at dim ${i}`);if(s===-1){if(t>0&&t!==e)throw Error(`Size(${t}) must match the product of shape ${n}`);return n}if(e===0)throw Error(`Cannot infer the missing size in [${n}] when there are 0 elements`);if(t%e!==0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${e}`);const r=n.slice();return r[s]=t/e,r}function $t(n,t){const e=t.length;return n=n==null?t.map((s,r)=>r):[].concat(n),S(n.every(s=>s>=-e&&s<e),()=>`All values in axis param must be in range [-${e}, ${e}) but got axis ${n}`),S(n.every(s=>Gi(s)),()=>`All values in axis param must be integers but got axis ${n}`),n.map(s=>s<0?e+s:s)}function dr(n,t){const e=[],s=[],r=t!=null&&Array.isArray(t)&&t.length===0,i=t==null||r?null:$t(t,n).sort();let o=0;for(let a=0;a<n.length;++a){if(i!=null){if(i[o]===a&&n[a]!==1)throw new Error(`Can't squeeze axis ${a} since its dim '${n[a]}' is not 1`);(i[o]==null||i[o]>a)&&n[a]===1&&(e.push(n[a]),s.push(a)),i[o]<=a&&o++}n[a]!==1&&(e.push(n[a]),s.push(a))}return{newShape:e,keptDims:s}}function Oe(n,t){return le(n,t)}function le(n,t){let e=null;if(n==null||n==="float32")e=new Float32Array(t);else if(n==="int32")e=new Int32Array(t);else if(n==="bool")e=new Uint8Array(t);else if(n==="string")e=new Array(t);else throw new Error(`Unknown data type ${n}`);return e}function Dk(n,t){for(let e=0;e<n.length;e++){const s=n[e];if(isNaN(s)||!isFinite(s))throw Error(`A tensor of type ${t} being uploaded contains ${s}.`)}}function Ak(n){return n==="bool"||n==="complex64"||n==="float32"||n==="int32"||n==="string"}function Tb(n,t){return!(t==="complex64"||t==="float32"&&n!=="complex64"||t==="int32"&&n!=="float32"&&n!=="complex64"||t==="bool"&&n==="bool")}function ac(n){if(n==="float32"||n==="int32")return 4;if(n==="complex64")return 8;if(n==="bool")return 1;throw new Error(`Unknown dtype ${n}`)}function Fk(n){if(n==null)return 0;let t=0;return n.forEach(e=>t+=e.length),t}function la(n){return typeof n=="string"||n instanceof String}function Mk(n){return typeof n=="boolean"}function Qh(n){return typeof n=="number"}function no(n){return Array.isArray(n)?no(n[0]):n instanceof Float32Array?"float32":n instanceof Int32Array||n instanceof Uint8Array||n instanceof Uint8ClampedArray?"int32":Qh(n)?"float32":la(n)?"string":Mk(n)?"bool":"float32"}function td(n){return!!(n&&n.constructor&&n.call&&n.apply)}function ed(n,t){for(let e=t;e<n;++e)if(n%e===0)return e;return n}function ht(n){const t=n.length;if(t<2)return[];const e=new Array(t-1);e[t-2]=n[t-1];for(let s=t-3;s>=0;--s)e[s]=e[s+1]*n[s+1];return e}function Nb(n,t,e,s=!1){const r=new Array;if(t.length===1){const i=t[0]*(s?2:1);for(let o=0;o<i;o++)r[o]=e[n+o]}else{const i=t[0],o=t.slice(1),a=o.reduce((l,c)=>l*c)*(s?2:1);for(let l=0;l<i;l++)r[l]=Nb(n+l*a,o,e,s)}return r}function Jn(n,t,e=!1){if(n.length===0)return t[0];const s=n.reduce((r,i)=>r*i)*(e?2:1);if(s===0)return[];if(s!==t.length)throw new Error(`[${n}] does not match the input size ${t.length}${e?" for a complex tensor":""}.`);return Nb(0,n,t,e)}function Pk(n,t){if(Array.isArray(n))return n;if(t==="float32")return n instanceof Float32Array?n:new Float32Array(n);if(t==="int32")return n instanceof Int32Array?n:new Int32Array(n);if(t==="bool"||t==="string")return Uint8Array.from(new Int32Array(n));throw new Error(`Unknown dtype ${t}`)}function Kd(n,t){const e=Be(n,t);for(let s=0;s<e.length;s++)e[s]=1;return e}function Be(n,t){if(t==null||t==="float32"||t==="complex64")return new Float32Array(n);if(t==="int32")return new Int32Array(n);if(t==="bool")return new Uint8Array(n);throw new Error(`Unknown data type ${t}`)}function Eb(n,t){const e=n.reduce((s,r)=>s*r,1);if(t==null||t==="float32")return Jn(n,new Float32Array(e));if(t==="int32")return Jn(n,new Int32Array(e));if(t==="bool")return Jn(n,new Uint8Array(e));throw new Error(`Unknown data type ${t}`)}function Ms(n){n.forEach(t=>{S(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${n}].`)})}function ds(n,t,e){if(t===0)return 0;if(t===1)return n[0];let s=n[n.length-1];for(let r=0;r<n.length-1;++r)s+=e[r]*n[r];return s}function so(n,t,e){if(t===0)return[];if(t===1)return[n];const s=new Array(t);for(let r=0;r<s.length-1;++r)s[r]=Math.floor(n/e[r]),n-=s[r]*e[r];return s[s.length-1]=n,s}function Yd(n){return n&&n.then&&typeof n.then=="function"}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ox="tfjsflags";class Ok{constructor(t){this.global=t,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=Bk,this.populateURLFlags()}setPlatform(t,e){this.platform!=null&&(O().getBool("IS_TEST")||O().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`)),this.platformName=t,this.platform=e}registerFlag(t,e,s){if(this.flagRegistry[t]={evaluationFn:e,setHook:s},this.urlFlags[t]!=null){const r=this.urlFlags[t];O().getBool("IS_TEST")||O().getBool("PROD")||console.warn(`Setting feature override from URL ${t}: ${r}.`),this.set(t,r)}}async getAsync(t){return t in this.flags?this.flags[t]:(this.flags[t]=await this.evaluateFlag(t),this.flags[t])}get(t){if(t in this.flags)return this.flags[t];const e=this.evaluateFlag(t);if(Yd(e))throw new Error(`Flag ${t} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[t]=e,this.flags[t]}getNumber(t){return this.get(t)}getBool(t){return this.get(t)}getString(t){return this.get(t)}getFlags(){return this.flags}get features(){return this.flags}set(t,e){if(this.flagRegistry[t]==null)throw new Error(`Cannot set flag ${t} as it has not been registered.`);this.flags[t]=e,this.flagRegistry[t].setHook!=null&&this.flagRegistry[t].setHook(e)}evaluateFlag(t){if(this.flagRegistry[t]==null)throw new Error(`Cannot evaluate flag '${t}': no evaluation function found.`);return this.flagRegistry[t].evaluationFn()}setFlags(t){this.flags=Object.assign({},t)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;const t=this.getQueryParams(this.global.location.search);ox in t&&t[ox].split(",").forEach(s=>{const[r,i]=s.split(":");this.urlFlags[r]=Vk(r,i)})}}function Bk(n){const t={};return n.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(e,...s)=>(Lk(t,s[0],s[1]),s.join("="))),t}function Lk(n,t,e){n[decodeURIComponent(t)]=decodeURIComponent(e||"")}function Vk(n,t){const e=t.toLowerCase();return e==="true"||e==="false"?e==="true":`${+e}`===e?+e:t}function O(){return Rb}let Rb=null;function zk(n){Rb=n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Rh;function Db(){if(Rh==null){let n;if(typeof window<"u")n=window;else if(typeof global<"u")n=global;else if(typeof process<"u")n=process;else if(typeof self<"u")n=self;else throw new Error("Could not find a global object");Rh=n}return Rh}function Uk(){const n=Db();return n._tfGlobals==null&&(n._tfGlobals=new Map),n._tfGlobals}function Jd(n,t){const e=Uk();if(e.has(n))return e.get(n);{const s=t();return e.set(n,s),e.get(n)}}const Uc="Abs",ca="Acos",ua="Acosh",ro="Add",Zd="AddN",Qd="All",tp="Any",Wc="ArgMax",Gc="ArgMin",ha="Asin",da="Asinh",pa="Atan",fa="Atanh",ga="Atan2",Hc="AvgPool",ep="AvgPoolGrad",Xc="AvgPool3D",np="AvgPool3DGrad",jc="BatchMatMul",qc="BatchToSpaceND",sp="Bincount",rp="BitwiseAnd",Wk="BroadcastTo",Ab="BroadcastArgs",ma="Cast",xa="Ceil",ya="ClipByValue",ip="Complex",Kc="ComplexAbs",Yc="Concat",Jc="Conv2D",op="Conv2DBackpropFilter",Zc="Conv2DBackpropInput",Qc="Conv3D",ap="Conv3DBackpropFilterV2",lp="Conv3DBackpropInputV2",ba="Cos",wa="Cosh",cp="Cumprod",tu="Cumsum",up="CropAndResize",hp="DenseBincount",dp="DepthToSpace",eu="DepthwiseConv2dNative",pp="DepthwiseConv2dNativeBackpropFilter",fp="DepthwiseConv2dNativeBackpropInput",Fb="Diag",nu="Dilation2D",nd="Dilation2DBackpropInput",sd="Dilation2DBackpropFilter",Gk="Draw",Ca="RealDiv",gp="Einsum",_a="Elu",mp="EluGrad",Sa="Erf",su="Equal",Ia="Exp",ru="ExpandDims",va="Expm1",xp="FFT",yp="Fill",bp="FlipLeftRight",ka="Floor",$a="FloorDiv",iu="FusedBatchNorm",ou="GatherV2",Mb="GatherNd",au="Greater",Ta="GreaterEqual",Na="Identity",wp="IFFT",Cp="Imag",Ea="IsFinite",Ra="IsInf",Da="IsNan",lu="LeakyRelu",cu="Less",uu="LessEqual",Pb="LinSpace",Aa="Log",Fa="Log1p",hu="LogicalAnd",du="LogicalNot",pu="LogicalOr",Hk="LogSoftmax",fu="LRN",_p="LRNGrad",gu="Max",Ma="Maximum",mu="MaxPool",Sp="MaxPoolGrad",xu="MaxPool3D",Ip="MaxPool3DGrad",Ob="MaxPoolWithArgmax",yu="Mean",bu="Min",Pa="Minimum",wu="MirrorPad",Oa="Mod",Bb="Multinomial",Ba="Multiply",Cu="Neg",_u="NotEqual",vp="NonMaxSuppressionV3",kp="NonMaxSuppressionV4",$p="NonMaxSuppressionV5",Su="OnesLike",Iu="OneHot",vu="Pack",ku="PadV2",La="Pow",$u="Prelu",Tu="Prod",Lb="RaggedGather",Vb="RaggedRange",zb="RaggedTensorToTensor",Tp="Range",Np="Real",Va="Reciprocal",za="Relu",Nu="Reshape",Eu="ResizeNearestNeighbor",Ep="ResizeNearestNeighborGrad",Ru="ResizeBilinear",Rp="ResizeBilinearGrad",Ua="Relu6",Du="Reverse",Wa="Round",Ga="Rsqrt",Ub="ScatterNd",Wb="TensorScatterUpdate",Gb="SearchSorted",Au="Select",Ha="Selu",Fu="Slice",Xa="Sin",ja="Sinh",qa="Sign",Ka="Sigmoid",Ya="Softplus",Ja="Sqrt",Mu="Sum",Pu="SpaceToBatchND",Ou="SplitV",Bu="Softmax",Hb="SparseFillEmptyRows",Xb="SparseReshape",jb="SparseSegmentMean",qb="SparseSegmentSum",Kb="SparseToDense",Za="SquaredDifference",Dp="Square",Ap="StaticRegexReplace",Fp="StridedSlice",Yb="StringNGrams",Jb="StringSplit",Zb="StringToHashBucketFast",Qa="Sub",tl="Tan",el="Tanh",nl="Tile",Mp="TopK",Pp="Transform",Bi="Transpose",Op="Unique",Lu="Unpack",Vu="UnsortedSegmentSum",zu="ZerosLike",sl="Step",Xk="FromPixels",Bp="RotateWithOffset",lc="_FusedMatMul",cc="FusedConv2D",Qb="FusedDepthwiseConv2D";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mn(...n){O().getBool("IS_TEST")||O().getBool("PROD")||console.warn(...n)}function jk(...n){O().getBool("IS_TEST")||O().getBool("PROD")||console.log(...n)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uc=Jd("kernelRegistry",()=>new Map),rd=Jd("gradRegistry",()=>new Map);function ax(n,t){const e=e0(n,t);return uc.get(e)}function lx(n){return rd.get(n)}function cx(n){const t=uc.entries(),e=[];for(;;){const{done:s,value:r}=t.next();if(s)break;const[i,o]=r,[a]=i.split("_");a===n&&e.push(o)}return e}function t0(n){const{kernelName:t,backendName:e}=n,s=e0(t,e);uc.has(s)&&mn(`The kernel '${t}' for backend '${e}' is already registered`),uc.set(s,n)}function qk(n){const{kernelName:t}=n;rd.has(t)&&O().getBool("DEBUG")&&mn(`Overriding the gradient for '${t}'`),rd.set(t,n)}function e0(n,t){return`${t}_${n}`}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n0(n){return n instanceof Float32Array||n instanceof Int32Array||n instanceof Uint8Array||n instanceof Uint8ClampedArray}var ii=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function Kk(n){return n&&n.__esModule&&Object.prototype.hasOwnProperty.call(n,"default")?n.default:n}function Yk(n){if(n.__esModule)return n;var t=n.default;if(typeof t=="function"){var e=function s(){return this instanceof s?Reflect.construct(t,arguments,this.constructor):t.apply(this,arguments)};e.prototype=t.prototype}else e={};return Object.defineProperty(e,"__esModule",{value:!0}),Object.keys(n).forEach(function(s){var r=Object.getOwnPropertyDescriptor(n,s);Object.defineProperty(e,s,r.get?r:{enumerable:!0,get:function(){return n[s]}})}),e}var s0=Zt,Tn=null;try{Tn=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function Zt(n,t,e){this.low=n|0,this.high=t|0,this.unsigned=!!e}Zt.prototype.__isLong__;Object.defineProperty(Zt.prototype,"__isLong__",{value:!0});function dn(n){return(n&&n.__isLong__)===!0}Zt.isLong=dn;var ux={},hx={};function oi(n,t){var e,s,r;return t?(n>>>=0,(r=0<=n&&n<256)&&(s=hx[n],s)?s:(e=Qt(n,(n|0)<0?-1:0,!0),r&&(hx[n]=e),e)):(n|=0,(r=-128<=n&&n<128)&&(s=ux[n],s)?s:(e=Qt(n,n<0?-1:0,!1),r&&(ux[n]=e),e))}Zt.fromInt=oi;function Nn(n,t){if(isNaN(n))return t?Pr:En;if(t){if(n<0)return Pr;if(n>=r0)return a0}else{if(n<=-px)return an;if(n+1>=px)return o0}return n<0?Nn(-n,t).neg():Qt(n%Hi|0,n/Hi|0,t)}Zt.fromNumber=Nn;function Qt(n,t,e){return new Zt(n,t,e)}Zt.fromBits=Qt;var hc=Math.pow;function Lp(n,t,e){if(n.length===0)throw Error("empty string");if(n==="NaN"||n==="Infinity"||n==="+Infinity"||n==="-Infinity")return En;if(typeof t=="number"?(e=t,t=!1):t=!!t,e=e||10,e<2||36<e)throw RangeError("radix");var s;if((s=n.indexOf("-"))>0)throw Error("interior hyphen");if(s===0)return Lp(n.substring(1),t,e).neg();for(var r=Nn(hc(e,8)),i=En,o=0;o<n.length;o+=8){var a=Math.min(8,n.length-o),l=parseInt(n.substring(o,o+a),e);if(a<8){var c=Nn(hc(e,a));i=i.mul(c).add(Nn(l))}else i=i.mul(r),i=i.add(Nn(l))}return i.unsigned=t,i}Zt.fromString=Lp;function ss(n,t){return typeof n=="number"?Nn(n,t):typeof n=="string"?Lp(n,t):Qt(n.low,n.high,typeof t=="boolean"?t:n.unsigned)}Zt.fromValue=ss;var dx=65536,Jk=1<<24,Hi=dx*dx,r0=Hi*Hi,px=r0/2,fx=oi(Jk),En=oi(0);Zt.ZERO=En;var Pr=oi(0,!0);Zt.UZERO=Pr;var Ri=oi(1);Zt.ONE=Ri;var i0=oi(1,!0);Zt.UONE=i0;var id=oi(-1);Zt.NEG_ONE=id;var o0=Qt(-1,2147483647,!1);Zt.MAX_VALUE=o0;var a0=Qt(-1,-1,!0);Zt.MAX_UNSIGNED_VALUE=a0;var an=Qt(0,-2147483648,!1);Zt.MIN_VALUE=an;var et=Zt.prototype;et.toInt=function(){return this.unsigned?this.low>>>0:this.low};et.toNumber=function(){return this.unsigned?(this.high>>>0)*Hi+(this.low>>>0):this.high*Hi+(this.low>>>0)};et.toString=function(t){if(t=t||10,t<2||36<t)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(an)){var e=Nn(t),s=this.div(e),r=s.mul(e).sub(this);return s.toString(t)+r.toInt().toString(t)}else return"-"+this.neg().toString(t);for(var i=Nn(hc(t,6),this.unsigned),o=this,a="";;){var l=o.div(i),c=o.sub(l.mul(i)).toInt()>>>0,u=c.toString(t);if(o=l,o.isZero())return u+a;for(;u.length<6;)u="0"+u;a=""+u+a}};et.getHighBits=function(){return this.high};et.getHighBitsUnsigned=function(){return this.high>>>0};et.getLowBits=function(){return this.low};et.getLowBitsUnsigned=function(){return this.low>>>0};et.getNumBitsAbs=function(){if(this.isNegative())return this.eq(an)?64:this.neg().getNumBitsAbs();for(var t=this.high!=0?this.high:this.low,e=31;e>0&&!(t&1<<e);e--);return this.high!=0?e+33:e+1};et.isZero=function(){return this.high===0&&this.low===0};et.eqz=et.isZero;et.isNegative=function(){return!this.unsigned&&this.high<0};et.isPositive=function(){return this.unsigned||this.high>=0};et.isOdd=function(){return(this.low&1)===1};et.isEven=function(){return(this.low&1)===0};et.equals=function(t){return dn(t)||(t=ss(t)),this.unsigned!==t.unsigned&&this.high>>>31===1&&t.high>>>31===1?!1:this.high===t.high&&this.low===t.low};et.eq=et.equals;et.notEquals=function(t){return!this.eq(t)};et.neq=et.notEquals;et.ne=et.notEquals;et.lessThan=function(t){return this.comp(t)<0};et.lt=et.lessThan;et.lessThanOrEqual=function(t){return this.comp(t)<=0};et.lte=et.lessThanOrEqual;et.le=et.lessThanOrEqual;et.greaterThan=function(t){return this.comp(t)>0};et.gt=et.greaterThan;et.greaterThanOrEqual=function(t){return this.comp(t)>=0};et.gte=et.greaterThanOrEqual;et.ge=et.greaterThanOrEqual;et.compare=function(t){if(dn(t)||(t=ss(t)),this.eq(t))return 0;var e=this.isNegative(),s=t.isNegative();return e&&!s?-1:!e&&s?1:this.unsigned?t.high>>>0>this.high>>>0||t.high===this.high&&t.low>>>0>this.low>>>0?-1:1:this.sub(t).isNegative()?-1:1};et.comp=et.compare;et.negate=function(){return!this.unsigned&&this.eq(an)?an:this.not().add(Ri)};et.neg=et.negate;et.add=function(t){dn(t)||(t=ss(t));var e=this.high>>>16,s=this.high&65535,r=this.low>>>16,i=this.low&65535,o=t.high>>>16,a=t.high&65535,l=t.low>>>16,c=t.low&65535,u=0,h=0,d=0,p=0;return p+=i+c,d+=p>>>16,p&=65535,d+=r+l,h+=d>>>16,d&=65535,h+=s+a,u+=h>>>16,h&=65535,u+=e+o,u&=65535,Qt(d<<16|p,u<<16|h,this.unsigned)};et.subtract=function(t){return dn(t)||(t=ss(t)),this.add(t.neg())};et.sub=et.subtract;et.multiply=function(t){if(this.isZero())return En;if(dn(t)||(t=ss(t)),Tn){var e=Tn.mul(this.low,this.high,t.low,t.high);return Qt(e,Tn.get_high(),this.unsigned)}if(t.isZero())return En;if(this.eq(an))return t.isOdd()?an:En;if(t.eq(an))return this.isOdd()?an:En;if(this.isNegative())return t.isNegative()?this.neg().mul(t.neg()):this.neg().mul(t).neg();if(t.isNegative())return this.mul(t.neg()).neg();if(this.lt(fx)&&t.lt(fx))return Nn(this.toNumber()*t.toNumber(),this.unsigned);var s=this.high>>>16,r=this.high&65535,i=this.low>>>16,o=this.low&65535,a=t.high>>>16,l=t.high&65535,c=t.low>>>16,u=t.low&65535,h=0,d=0,p=0,f=0;return f+=o*u,p+=f>>>16,f&=65535,p+=i*u,d+=p>>>16,p&=65535,p+=o*c,d+=p>>>16,p&=65535,d+=r*u,h+=d>>>16,d&=65535,d+=i*c,h+=d>>>16,d&=65535,d+=o*l,h+=d>>>16,d&=65535,h+=s*u+r*c+i*l+o*a,h&=65535,Qt(p<<16|f,h<<16|d,this.unsigned)};et.mul=et.multiply;et.divide=function(t){if(dn(t)||(t=ss(t)),t.isZero())throw Error("division by zero");if(Tn){if(!this.unsigned&&this.high===-2147483648&&t.low===-1&&t.high===-1)return this;var e=(this.unsigned?Tn.div_u:Tn.div_s)(this.low,this.high,t.low,t.high);return Qt(e,Tn.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?Pr:En;var s,r,i;if(this.unsigned){if(t.unsigned||(t=t.toUnsigned()),t.gt(this))return Pr;if(t.gt(this.shru(1)))return i0;i=Pr}else{if(this.eq(an)){if(t.eq(Ri)||t.eq(id))return an;if(t.eq(an))return Ri;var o=this.shr(1);return s=o.div(t).shl(1),s.eq(En)?t.isNegative()?Ri:id:(r=this.sub(t.mul(s)),i=s.add(r.div(t)),i)}else if(t.eq(an))return this.unsigned?Pr:En;if(this.isNegative())return t.isNegative()?this.neg().div(t.neg()):this.neg().div(t).neg();if(t.isNegative())return this.div(t.neg()).neg();i=En}for(r=this;r.gte(t);){s=Math.max(1,Math.floor(r.toNumber()/t.toNumber()));for(var a=Math.ceil(Math.log(s)/Math.LN2),l=a<=48?1:hc(2,a-48),c=Nn(s),u=c.mul(t);u.isNegative()||u.gt(r);)s-=l,c=Nn(s,this.unsigned),u=c.mul(t);c.isZero()&&(c=Ri),i=i.add(c),r=r.sub(u)}return i};et.div=et.divide;et.modulo=function(t){if(dn(t)||(t=ss(t)),Tn){var e=(this.unsigned?Tn.rem_u:Tn.rem_s)(this.low,this.high,t.low,t.high);return Qt(e,Tn.get_high(),this.unsigned)}return this.sub(this.div(t).mul(t))};et.mod=et.modulo;et.rem=et.modulo;et.not=function(){return Qt(~this.low,~this.high,this.unsigned)};et.and=function(t){return dn(t)||(t=ss(t)),Qt(this.low&t.low,this.high&t.high,this.unsigned)};et.or=function(t){return dn(t)||(t=ss(t)),Qt(this.low|t.low,this.high|t.high,this.unsigned)};et.xor=function(t){return dn(t)||(t=ss(t)),Qt(this.low^t.low,this.high^t.high,this.unsigned)};et.shiftLeft=function(t){return dn(t)&&(t=t.toInt()),(t&=63)===0?this:t<32?Qt(this.low<<t,this.high<<t|this.low>>>32-t,this.unsigned):Qt(0,this.low<<t-32,this.unsigned)};et.shl=et.shiftLeft;et.shiftRight=function(t){return dn(t)&&(t=t.toInt()),(t&=63)===0?this:t<32?Qt(this.low>>>t|this.high<<32-t,this.high>>t,this.unsigned):Qt(this.high>>t-32,this.high>=0?0:-1,this.unsigned)};et.shr=et.shiftRight;et.shiftRightUnsigned=function(t){if(dn(t)&&(t=t.toInt()),t&=63,t===0)return this;var e=this.high;if(t<32){var s=this.low;return Qt(s>>>t|e<<32-t,e>>>t,this.unsigned)}else return t===32?Qt(e,0,this.unsigned):Qt(e>>>t-32,0,this.unsigned)};et.shru=et.shiftRightUnsigned;et.shr_u=et.shiftRightUnsigned;et.toSigned=function(){return this.unsigned?Qt(this.low,this.high,!1):this};et.toUnsigned=function(){return this.unsigned?this:Qt(this.low,this.high,!0)};et.toBytes=function(t){return t?this.toBytesLE():this.toBytesBE()};et.toBytesLE=function(){var t=this.high,e=this.low;return[e&255,e>>>8&255,e>>>16&255,e>>>24,t&255,t>>>8&255,t>>>16&255,t>>>24]};et.toBytesBE=function(){var t=this.high,e=this.low;return[t>>>24,t>>>16&255,t>>>8&255,t&255,e>>>24,e>>>16&255,e>>>8&255,e&255]};Zt.fromBytes=function(t,e,s){return s?Zt.fromBytesLE(t,e):Zt.fromBytesBE(t,e)};Zt.fromBytesLE=function(t,e){return new Zt(t[0]|t[1]<<8|t[2]<<16|t[3]<<24,t[4]|t[5]<<8|t[6]<<16|t[7]<<24,e)};Zt.fromBytesBE=function(t,e){return new Zt(t[4]<<24|t[5]<<16|t[6]<<8|t[7],t[0]<<24|t[1]<<16|t[2]<<8|t[3],e)};const l0=Kk(s0),Zk=wI({__proto__:null,default:l0},[s0]);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rr=l0||Zk;function Uu(n){return Rr.fromString(n,!0,16)}const c0=Uu("c3a5c85c97cb3127"),Er=Uu("b492b66fbe98f273"),Ge=Uu("9ae16a3b2f90404f");function od(n){return n.xor(n.shru(47))}function u0(n,t,e){const s=n.slice(t,t+e);return Rr.fromBytes(Array.from(s),!0,!0)}function jt(n,t){return u0(n,t,8)}function gx(n,t){return u0(n,t,4)}function ke(n,t){return t===0?n:n.shru(t).or(n.shl(64-t))}function er(n,t,e=Uu("9ddfea08eb382d69")){let s=n.xor(t).mul(e);s=s.xor(s.shru(47));let r=t.xor(s).mul(e);return r=r.xor(r.shru(47)),r=r.mul(e),r}function Qk(n,t,e,s,r,i){r=r.add(n),i=ke(i.add(r).add(s),21);const o=r;return r=r.add(t),r=r.add(e),i=i.add(ke(r,44)),[r.add(s),i.add(o)]}function Fl(n,t,e,s){return Qk(jt(n,t),jt(n,t+8),jt(n,t+16),jt(n,t+24),e,s)}function t$(n,t=n.length){if(t>=8){const e=Ge.add(t*2),s=jt(n,0).add(Ge),r=jt(n,t-8),i=ke(r,37).mul(e).add(s),o=ke(s,25).add(r).mul(e);return er(i,o,e)}if(t>=4){const e=Ge.add(t*2),s=gx(n,0);return er(s.shl(3).add(t),gx(n,t-4),e)}if(t>0){const e=n[0],s=n[t>>1],r=n[t-1],i=e+(s<<8),o=t+(r<<2);return od(Ge.mul(i).xor(c0.mul(o))).mul(Ge)}return Ge}function e$(n,t=n.length){const e=Ge.add(t*2),s=jt(n,0).mul(Er),r=jt(n,8),i=jt(n,t-8).mul(e),o=jt(n,t-16).mul(Ge);return er(ke(s.add(r),43).add(ke(i,30)).add(o),s.add(ke(r.add(Ge),18)).add(i),e)}function n$(n,t=n.length){const e=Ge.add(t*2),s=jt(n,0).mul(Ge),r=jt(n,8),i=jt(n,t-8).mul(e),o=jt(n,t-16).mul(Ge),a=ke(s.add(r),43).add(ke(i,30)).add(o),l=er(a,s.add(ke(r.add(Ge),18)).add(i),e),c=jt(n,16).mul(e),u=jt(n,24),h=a.add(jt(n,t-32)).mul(e),d=l.add(jt(n,t-24)).mul(e);return er(ke(c.add(u),43).add(ke(h,30)).add(d),c.add(ke(u.add(s),18)).add(h),e)}function s$(n,t=n.length){const e=Rr.fromNumber(81,!0);if(t<=32)return t<=16?t$(n,t):e$(n,t);if(t<=64)return n$(n,t);let s=e,r=e.mul(Er).add(113),i=od(r.mul(Ge).add(113)).mul(Ge),o=[Rr.UZERO,Rr.UZERO],a=[Rr.UZERO,Rr.UZERO];s=s.mul(Ge).add(jt(n,0));let l=0;const c=(t-1>>6)*64,u=c+(t-1&63)-63;do s=ke(s.add(r).add(o[0]).add(jt(n,l+8)),37).mul(Er),r=ke(r.add(o[1]).add(jt(n,l+48)),42).mul(Er),s=s.xor(a[1]),r=r.add(o[0]).add(jt(n,l+40)),i=ke(i.add(a[0]),33).mul(Er),o=Fl(n,l,o[1].mul(Er),s.add(a[0])),a=Fl(n,l+32,i.add(a[1]),r.add(jt(n,l+16))),[i,s]=[s,i],l+=64;while(l!==c);const h=Er.add(i.and(255).shl(1));return l=u,a[0]=a[0].add(t-1&63),o[0]=o[0].add(a[0]),a[0]=a[0].add(o[0]),s=ke(s.add(r).add(o[0]).add(jt(n,l+8)),37).mul(h),r=ke(r.add(o[1]).add(jt(n,l+48)),42).mul(h),s=s.xor(a[1].mul(9)),r=r.add(o[0].mul(9).add(jt(n,l+40))),i=ke(i.add(a[0]),33).mul(h),o=Fl(n,l,o[1].mul(h),s.add(a[0])),a=Fl(n,l+32,i.add(a[1]),r.add(jt(n,l+16))),[i,s]=[s,i],er(er(o[0],a[0],h).add(od(r).mul(c0)).add(i),er(o[1],a[1],h).add(s),h)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pr(n,t){return t==="string"?nr(n):ai([n],t)}function r$(n,t){return n instanceof Float32Array&&t==="float32"||n instanceof Int32Array&&t==="int32"||n instanceof Uint8Array&&t==="bool"}function ai(n,t){if(t==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(n)&&(n=Hr(n)),O().getBool("DEBUG")&&Dk(n,t),r$(n,t))return n;if(t==null||t==="float32"||t==="complex64")return new Float32Array(n);if(t==="int32")return new Int32Array(n);if(t==="bool"){const e=new Uint8Array(n.length);for(let s=0;s<e.length;++s)Math.round(n[s])!==0&&(e[s]=1);return e}else throw new Error(`Unknown data type ${t}`)}function Ye(){return O().platform.now()}function nr(n,t="utf-8"){return t=t||"utf-8",O().platform.encode(n,t)}function or(n,t="utf-8"){return t=t||"utf-8",O().platform.decode(n,t)}function Fn(n){return O().platform.isTypedArray!=null?O().platform.isTypedArray(n):n0(n)}function Hr(n,t=[],e=!1){if(t==null&&(t=[]),typeof n=="boolean"||typeof n=="number"||typeof n=="string"||Yd(n)||n==null||Fn(n)&&e)t.push(n);else if(Array.isArray(n)||Fn(n))for(let s=0;s<n.length;++s)Hr(n[s],t,e);else{let s=-1;for(const r of Object.keys(n))/^([1-9]+[0-9]*|0)$/.test(r)&&(s=Math.max(s,Number(r)));for(let r=0;r<=s;r++)Hr(n[r],t,e)}return t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class i${constructor(t,e){this.backendTimer=t,this.logger=e,e==null&&(this.logger=new a$)}profileKernel(t,e,s){let r;const i=()=>{r=s()};let o;const a=Ye();if(this.backendTimer.timerAvailable())o=this.backendTimer.time(i);else{i();for(const c of r)c.dataSync();o=Promise.resolve({kernelMs:Ye()-a})}if(O().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let c=0;c<r.length;c++){const u=r[c];u.data().then(h=>{o$(h,u.dtype,t)})}return{kernelName:t,outputs:r,inputs:e,timeMs:o.then(c=>c.kernelMs),extraInfo:o.then(c=>c.getExtraProfileInfo!=null?c.getExtraProfileInfo():"")}}logKernelProfile(t){const{kernelName:e,outputs:s,timeMs:r,inputs:i,extraInfo:o}=t;s.forEach(a=>{Promise.all([a.data(),r,o]).then(l=>{this.logger.logKernelProfile(e,a,l[0],l[1],i,l[2])})})}}function o$(n,t,e){if(t!=="float32")return!1;for(let s=0;s<n.length;s++){const r=n[s];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${e}'`),!0}return!1}class a${logKernelProfile(t,e,s,r,i,o){const a=typeof r=="number"?Oi(`${r}ms`,9):r.error,l=Oi(t,25),c=e.rank,u=e.size,h=Oi(e.shape.toString(),14);let d="";for(const p in i){const f=i[p];if(f!=null){const m=f.shape||e.shape,g=m.length;d+=`${p}: ${g}D ${g>0?m:""} `}}console.log(`%c${l}	%c${a}	%c${c}D ${h}	%c${u}	%c${d}	%c${o}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l$(n,t,e){const s={},r={};for(let l=0;l<t.length;l++)s[t[l].id]=!0;for(let l=0;l<n.length;l++){const c=n[l],u=c.inputs;for(const h in u){const d=u[h];let p=!1;for(let f=0;f<t.length;f++)if(s[d.id]){c.outputs.forEach(m=>s[m.id]=!0),p=!0,r[c.id]=!0;break}if(p)break}}const i={};i[e.id]=!0;const o={};for(let l=n.length-1;l>=0;l--){const c=n[l],u=c.inputs;for(let h=0;h<c.outputs.length;h++)if(i[c.outputs[h].id]){for(const d in u)i[u[d].id]=!0,o[c.id]=!0;break}}const a=[];for(let l=0;l<n.length;l++){const c=n[l];if(r[c.id]&&o[c.id]){const u={};for(const d in c.inputs){const p=c.inputs[d];s[p.id]&&(u[d]=p)}const h=Object.assign({},c);h.inputs=u,h.outputs=c.outputs,a.push(h)}}return a}function c$(n,t,e,s){for(let r=t.length-1;r>=0;r--){const i=t[r],o=[];if(i.outputs.forEach(l=>{const c=n[l.id];c!=null?o.push(c):o.push(null)}),i.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${i.kernelName}.`);const a=i.gradient(o);for(const l in i.inputs){if(!(l in a))throw new Error(`Cannot backprop through input ${l}. Available gradients found: ${Object.keys(a)}.`);const c=e(()=>a[l]());if(c.dtype!=="float32")throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input ${l} must have 'float32' dtype, but has '${c.dtype}'`);const u=i.inputs[l];if(!Pt(c.shape,u.shape))throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input '${l}' has shape '${c.shape}', which does not match the shape of the input '${u.shape}'`);if(n[u.id]==null)n[u.id]=c;else{const h=n[u.id];n[u.id]=s(h,c),h.dispose()}}}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mx=20,So=3,Dh=7;function u$(n,t,e,s){const r=ht(t),i=h$(n,t,e,r),o=t.length,a=Kl(n,t,e,r,i),l=["Tensor"];return s&&(l.push(`  dtype: ${e}`),l.push(`  rank: ${o}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(a.map(c=>"    "+c).join(`
`)),l.join(`
`)}function h$(n,t,e,s){const r=W(t),i=s[s.length-1],o=new Array(i).fill(0),a=t.length,l=e==="complex64"?No(n):n;if(a>1)for(let c=0;c<r/i;c++){const u=c*i;for(let h=0;h<i;h++)o[h]=Math.max(o[h],To(l[u+h],0,e).length)}return o}function To(n,t,e){let s;return Array.isArray(n)?s=`${parseFloat(n[0].toFixed(Dh))} + ${parseFloat(n[1].toFixed(Dh))}j`:la(n)?s=`'${n}'`:e==="bool"?s=h0(n):s=parseFloat(n.toFixed(Dh)).toString(),Oi(s,t)}function h0(n){return n===0?"false":"true"}function Kl(n,t,e,s,r,i=!0){const o=e==="complex64"?2:1,a=t[0],l=t.length;if(l===0){if(e==="complex64"){const m=No(n);return[To(m[0],0,e)]}return e==="bool"?[h0(n[0])]:[n[0].toString()]}if(l===1){if(a>mx){const g=So*o;let x=Array.from(n.slice(0,g)),y=Array.from(n.slice((a-So)*o,a*o));return e==="complex64"&&(x=No(x),y=No(y)),["["+x.map((w,b)=>To(w,r[b],e)).join(", ")+", ..., "+y.map((w,b)=>To(w,r[a-So+b],e)).join(", ")+"]"]}return["["+(e==="complex64"?No(n):Array.from(n)).map((g,x)=>To(g,r[x],e)).join(", ")+"]"]}const c=t.slice(1),u=s.slice(1),h=s[0]*o,d=[];if(a>mx){for(let m=0;m<So;m++){const g=m*h,x=g+h;d.push(...Kl(n.slice(g,x),c,e,u,r,!1))}d.push("...");for(let m=a-So;m<a;m++){const g=m*h,x=g+h;d.push(...Kl(n.slice(g,x),c,e,u,r,m===a-1))}}else for(let m=0;m<a;m++){const g=m*h,x=g+h;d.push(...Kl(n.slice(g,x),c,e,u,r,m===a-1))}const p=l===2?",":"";d[0]="["+(a>0?d[0]+p:"");for(let m=1;m<d.length-1;m++)d[m]=" "+d[m]+p;let f=`,
`;for(let m=2;m<l;m++)f+=`
`;return d[d.length-1]=" "+d[d.length-1]+"]"+(i?"":f),d}function No(n){const t=[];for(let e=0;e<n.length;e+=2)t.push([n[e],n[e+1]]);return t}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class De{constructor(t,e,s){if(this.dtype=e,this.shape=t.slice(),this.size=W(t),s!=null){const r=s.length;S(r===this.size,()=>`Length of values '${r}' does not match the size inferred by the shape '${this.size}'.`)}if(e==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=s||le(e,this.size),this.strides=ht(t)}set(t,...e){e.length===0&&(e=[0]),S(e.length===this.rank,()=>`The number of provided coordinates (${e.length}) must match the rank (${this.rank})`);const s=this.locToIndex(e);this.values[s]=t}get(...t){t.length===0&&(t=[0]);let e=0;for(const r of t){if(r<0||r>=this.shape[e]){const i=`Requested out of range element at ${t}.   Buffer shape=${this.shape}`;throw new Error(i)}e++}let s=t[t.length-1];for(let r=0;r<t.length-1;++r)s+=this.strides[r]*t[r];return this.values[s]}locToIndex(t){if(this.rank===0)return 0;if(this.rank===1)return t[0];let e=t[t.length-1];for(let s=0;s<t.length-1;++s)e+=this.strides[s]*t[s];return e}indexToLoc(t){if(this.rank===0)return[];if(this.rank===1)return[t];const e=new Array(this.shape.length);for(let s=0;s<e.length-1;++s)e[s]=Math.floor(t/this.strides[s]),t-=e[s]*this.strides[s];return e[e.length-1]=t,e}get rank(){return this.shape.length}toTensor(){return Xn().makeTensor(this.values,this.shape,this.dtype)}}let Xn=null,Ni=null;function d$(n){Xn=n}function p$(n){Ni=n}class ye{constructor(t,e,s,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=t.slice(),this.dtype=e||"float32",this.size=W(t),this.strides=ht(t),this.dataId=s,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const t=await this.data();return Ni.buffer(this.shape,this.dtype,t)}bufferSync(){return Ni.buffer(this.shape,this.dtype,this.dataSync())}async array(){const t=await this.data();return Jn(this.shape,t,this.dtype==="complex64")}arraySync(){return Jn(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();const t=Xn().read(this.dataId);if(this.dtype==="string"){const e=await t;try{return e.map(s=>or(s))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return t}dataToGPU(t){return this.throwIfDisposed(),Xn().readToGPU(this.dataId,t)}dataSync(){this.throwIfDisposed();const t=Xn().readSync(this.dataId);if(this.dtype==="string")try{return t.map(e=>or(e))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return t}async bytes(){this.throwIfDisposed();const t=await Xn().read(this.dataId);return this.dtype==="string"?t:new Uint8Array(t.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),Xn().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(t=!1){return Ni.print(this,t)}clone(){return this.throwIfDisposed(),Ni.clone(this)}toString(t=!1){const e=this.dataSync();return u$(e,this.shape,this.dtype,t)}cast(t){return this.throwIfDisposed(),Ni.cast(this,t)}variable(t=!0,e,s){return this.throwIfDisposed(),Xn().makeVariable(this,t,e,s)}}Object.defineProperty(ye,Symbol.hasInstance,{value:n=>!!n&&n.data!=null&&n.dataSync!=null&&n.throwIfDisposed!=null});function U(){return Jd("Tensor",()=>ye)}U();class dc extends ye{constructor(t,e,s,r){super(t.shape,t.dtype,t.dataId,r),this.trainable=e,this.name=s}assign(t){if(t.dtype!==this.dtype)throw new Error(`dtype of the new value (${t.dtype}) and previous value (${this.dtype}) must match`);if(!Pt(t.shape,this.shape))throw new Error(`shape of the new value (${t.shape}) and previous value (${this.shape}) must match`);Xn().disposeTensor(this),this.dataId=t.dataId,Xn().incRef(this,null)}dispose(){Xn().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(dc,Symbol.hasInstance,{value:n=>n instanceof ye&&n.assign!=null&&n.assign instanceof Function});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var xx;(function(n){n.R0="R0",n.R1="R1",n.R2="R2",n.R3="R3",n.R4="R4",n.R5="R5",n.R6="R6"})(xx||(xx={}));var ad;(function(n){n.float32="float32",n.int32="int32",n.bool="int32",n.complex64="complex64"})(ad||(ad={}));var ld;(function(n){n.float32="float32",n.int32="int32",n.bool="bool",n.complex64="complex64"})(ld||(ld={}));var cd;(function(n){n.float32="float32",n.int32="float32",n.bool="float32",n.complex64="complex64"})(cd||(cd={}));var ud;(function(n){n.float32="complex64",n.int32="complex64",n.bool="complex64",n.complex64="complex64"})(ud||(ud={}));const f$={float32:cd,int32:ad,bool:ld,complex64:ud};function cn(n,t){if(n==="string"||t==="string"){if(n==="string"&&t==="string")return"string";throw new Error(`Can not upcast ${n} with ${t}`)}return f$[n][t]}function Vp(n){return cn(n,"int32")}function d0(n){return n!=null&&typeof n=="object"&&"texture"in n&&n.texture instanceof WebGLTexture}function p0(n){return typeof GPUBuffer<"u"&&n!=null&&typeof n=="object"&&"buffer"in n&&n.buffer instanceof GPUBuffer}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ue(n,t){if(n.dtype===t.dtype)return[n,t];const e=cn(n.dtype,t.dtype);return[n.cast(e),t.cast(e)]}function f0(n){const t=[];return g0(n,t,new Set),t}function g0(n,t,e){if(n==null)return;if(n instanceof ye){t.push(n);return}if(!g$(n))return;const s=n;for(const r in s){const i=s[r];e.has(i)||(e.add(i),g0(i,t,e))}}function g$(n){return Array.isArray(n)||typeof n=="object"}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ah(n){return n.kernelName!=null}class yx{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(t=>t.name)))}}}dispose(){for(const t in this.registeredVariables)this.registeredVariables[t].dispose()}}class Xi{constructor(t){this.ENV=t,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new yx}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const s=t[e];if(await this.initializeBackend(s).success){await this.setBackend(s);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){const{name:t,asyncInit:e}=this.initializeBackendsAndReturnBest();if(e)throw new Error(`The highest priority backend '${t}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(t)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(t){if(!(t in this.registry))if(t in this.registryFactory){const{asyncInit:e}=this.initializeBackend(t);if(e)return null}else return null;return this.registry[t]}findBackendFactory(t){return t in this.registryFactory?this.registryFactory[t].factory:null}registerBackend(t,e,s=1){return t in this.registryFactory?(mn(`${t} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[t]={factory:e,priority:s},!0)}async setBackend(t){if(this.registryFactory[t]==null)throw new Error(`Backend name '${t}' not found in registry`);if(this.backendName=t,this.registry[t]==null){this.backendInstance=null;const{success:e,asyncInit:s}=this.initializeBackend(t);if(!(s?await e:e))return!1}return this.backendInstance=this.registry[t],this.setupRegisteredKernels(),this.profiler=new i$(this.backendInstance),!0}setupRegisteredKernels(){cx(this.backendName).forEach(e=>{e.setupFunc!=null&&e.setupFunc(this.backendInstance)})}disposeRegisteredKernels(t){cx(t).forEach(s=>{s.disposeFunc!=null&&s.disposeFunc(this.registry[t])})}initializeBackend(t){const e=this.registryFactory[t];if(e==null)throw new Error(`Cannot initialize backend ${t}, no registration found.`);try{const s=e.factory();if(s&&!(s instanceof Xd)&&typeof s.then=="function"){const r=++this.pendingBackendInitId,i=s.then(o=>r<this.pendingBackendInitId?!1:(this.registry[t]=o,this.pendingBackendInit=null,!0)).catch(o=>(r<this.pendingBackendInitId||(this.pendingBackendInit=null,mn(`Initialization of backend ${t} failed`),mn(o.stack||o.message)),!1));return this.pendingBackendInit=i,{success:i,asyncInit:!0}}else return this.registry[t]=s,{success:!0,asyncInit:!1}}catch(s){return mn(`Initialization of backend ${t} failed`),mn(s.stack||s.message),{success:!1,asyncInit:!1}}}removeBackend(t){if(!(t in this.registryFactory))throw new Error(`${t} backend not found in registry`);this.backendName===t&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,t in this.registry&&(this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t]),delete this.registryFactory[t],this.backendName===t&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((t,e)=>this.registryFactory[e].priority-this.registryFactory[t].priority)}initializeBackendsAndReturnBest(){const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const s=t[e],{success:r,asyncInit:i}=this.initializeBackend(s);if(i||r)return{name:s,asyncInit:i}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(t,e){const s=this.state.tensorInfo.get(e),r=s.backend,i=this.readSync(e),o=r.refCount(e);r.disposeData(e,!0),s.backend=t,t.move(e,i,s.shape,s.dtype,o),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(t,e){let s=null;if(e==null){if(typeof t!="function")throw new Error("Please provide a function to tidy()");e=t}else{if(typeof t!="string"&&!(t instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof e!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");s=t}let r;return this.scopedRun(()=>this.startScope(s),()=>this.endScope(r),()=>(r=e(),r instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),r))}scopedRun(t,e,s){t();try{const r=s();return e(),r}catch(r){throw e(),r}}nextTensorId(){return Xi.nextTensorId++}nextVariableId(){return Xi.nextVariableId++}clone(t){const e=R.runKernel(Na,{x:t}),s={x:t},r=o=>({x:()=>{const a="float32",l={x:o},c={dtype:a};return R.runKernel(ma,l,c)}}),i=[];return this.addTapeNode(this.state.activeScope.name,s,[e],r,i,{}),e}runKernel(t,e,s){if(this.backendName==null&&this.backend,!(ax(t,this.backendName)!=null))throw new Error(`Kernel '${t}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:t,inputs:e,attrs:s})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(t,e,s){const r=this.backend.numDataIds();let i=0;s.forEach(l=>{i+=l.dtype==="complex64"?3:1});const o=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],a=r-e-i-o;if(a>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${a} data ids) after running '${t}'`)}runKernelFunc(t){let e,s=[];const r=this.isTapeOn(),i=this.state.numBytes,o=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let a;this.backendName==null&&this.backend;let l;const c=Ah(t)?t.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(Ah(t)){const{kernelName:f,inputs:m,attrs:g}=t;this.backendName==null&&this.backend;const x=ax(f,this.backendName);S(x!=null,()=>`Cannot find registered kernel '${f}' for backend '${this.backendName}'`),a=()=>{const y=this.backend.numDataIds();l=x.kernelFunc({inputs:m,attrs:g,backend:this.backend});const w=Array.isArray(l)?l:[l];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(f,y,w);const b=w.map(C=>C.rank!=null?C:this.makeTensorFromTensorInfo(C));if(r){const C=this.getTensorsForGradient(f,m,b);s=this.saveTensorsForBackwardMode(C)}return b}}else{const{forwardFunc:f}=t,m=g=>{r&&(s=g.map(x=>this.keep(this.clone(x))))};a=()=>{const g=this.backend.numDataIds();l=this.tidy(()=>f(this.backend,m));const x=Array.isArray(l)?l:[l];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(c,g,x),x}}const{inputs:u,attrs:h}=t,d=Ah(t)?null:t.backwardsFunc;let p;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?e=a():(p=this.profiler.profileKernel(c,u,()=>a()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(p),e=p.outputs)}),r&&this.addTapeNode(c,u,e,d,s,h),this.state.profiling&&this.state.activeProfile.kernels.push({name:c,bytesAdded:this.state.numBytes-i,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-o,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(u).map(f=>u[f]!=null?u[f].shape:null),outputShapes:e.map(f=>f.shape),kernelTimeMs:p.timeMs,extraInfo:p.extraInfo}),Array.isArray(l)?e:e[0]}saveTensorsForBackwardMode(t){return t.map(s=>this.keep(this.clone(s)))}getTensorsForGradient(t,e,s){const r=lx(t);if(r!=null){const i=r.inputsToSave||[],o=r.outputsToSave||[];let a;r.saveAllInputs?(S(Array.isArray(e),()=>"saveAllInputs is true, expected inputs to be an array."),a=Object.keys(e).map(c=>e[c])):a=i.map(c=>e[c]);const l=s.filter((c,u)=>o[u]);return a.concat(l)}return[]}makeTensor(t,e,s,r){if(t==null)throw new Error("Values passed to engine.makeTensor() are null");s=s||"float32",r=r||this.backend;let i=t;s==="string"&&la(t[0])&&(i=t.map(l=>nr(l)));const o=r.write(i,e,s),a=new ye(e,s,o,this.nextTensorId());if(this.trackTensor(a,r),s==="string"){const l=this.state.tensorInfo.get(o),c=Fk(i);this.state.numBytes+=c-l.bytes,l.bytes=c}return a}makeTensorFromDataId(t,e,s,r){s=s||"float32";const i={dataId:t,shape:e,dtype:s};return this.makeTensorFromTensorInfo(i,r)}makeTensorFromTensorInfo(t,e){const{dataId:s,shape:r,dtype:i}=t,o=new ye(r,i,s,this.nextTensorId());return this.trackTensor(o,e),o}makeVariable(t,e=!0,s,r){s=s||this.nextVariableId().toString(),r!=null&&r!==t.dtype&&(t=t.cast(r));const i=new dc(t,e,s,this.nextTensorId());if(this.state.registeredVariables[i.name]!=null)throw new Error(`Variable with name ${i.name} was already registered`);return this.state.registeredVariables[i.name]=i,this.incRef(i,this.backend),i}trackTensor(t,e){this.state.numTensors++,t.dtype==="string"&&this.state.numStringTensors++;let s=0;t.dtype!=="complex64"&&t.dtype!=="string"&&(s=t.size*ac(t.dtype)),this.state.numBytes+=s,this.state.tensorInfo.has(t.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(t.dataId,{backend:e||this.backend,dtype:t.dtype,shape:t.shape,bytes:s})),t instanceof dc||this.track(t)}incRef(t,e){this.trackTensor(t,e),this.backend.incRef(t.dataId)}removeDataId(t,e){this.state.tensorInfo.has(t)&&this.state.tensorInfo.get(t).backend===e&&(this.state.tensorInfo.delete(t),this.state.numDataBuffers--)}disposeTensor(t){if(!this.state.tensorInfo.has(t.dataId))return;const e=this.state.tensorInfo.get(t.dataId);if(this.state.numTensors--,t.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=e.bytes),t.dtype!=="complex64"&&t.dtype!=="string"){const s=t.size*ac(t.dtype);this.state.numBytes-=s}e.backend.disposeData(t.dataId)&&this.removeDataId(t.dataId,e.backend)}disposeVariables(){for(const t in this.state.registeredVariables){const e=this.state.registeredVariables[t];this.disposeVariable(e)}}disposeVariable(t){this.disposeTensor(t),this.state.registeredVariables[t.name]!=null&&delete this.state.registeredVariables[t.name]}memory(){const t=this.backend.memory();return t.numTensors=this.state.numTensors,t.numDataBuffers=this.state.numDataBuffers,t.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(t.unreliable=!0,t.reasons==null&&(t.reasons=[]),t.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),t}async profile(t){this.state.profiling=!0;const e=this.state.numBytes,s=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await t(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(r=>r.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-e,this.state.activeProfile.newTensors=this.state.numTensors-s;for(const r of this.state.activeProfile.kernels)r.kernelTimeMs=await r.kernelTimeMs,r.extraInfo=await r.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(t,e,s,r,i,o){const a={id:this.state.nextTapeNodeId++,kernelName:t,inputs:e,outputs:s,saved:i},l=lx(t);l!=null&&(r=l.gradFunc),r!=null&&(a.gradient=c=>(c=c.map((u,h)=>{if(u==null){const d=s[h],p=Be(d.size,d.dtype);return this.makeTensor(p,d.shape,d.dtype)}return u}),r(c.length>1?c:c[0],i,o))),this.state.activeTape.push(a)}keep(t){return t.kept=!0,t}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(t){const e={track:[],name:"unnamed scope",id:this.state.nextScopeId++};t&&(e.name=t),this.state.scopeStack.push(e),this.state.activeScope=e}endScope(t){const e=f0(t),s=new Set(e.map(i=>i.id));for(let i=0;i<this.state.activeScope.track.length;i++){const o=this.state.activeScope.track[i];!o.kept&&!s.has(o.id)&&o.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],e.forEach(i=>{!i.kept&&i.scopeId===r.id&&this.track(i)})}gradients(t,e,s,r=!1){if(S(e.length>0,()=>"gradients() received an empty list of xs."),s!=null&&s.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${s.dtype}'`);const i=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",t));S(i instanceof ye,()=>"The result y returned by f() must be a tensor.");const o=l$(this.state.activeTape,e,i);if(!r&&o.length===0&&e.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const a={};a[i.id]=s??m$(i.shape),c$(a,o,c=>this.tidy(c),x$);const l=e.map(c=>a[c.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(c=>{for(const u of c.saved)u.dispose()}),this.state.activeTape=null),{value:i,grads:l}})}customGrad(t){return S(td(t),()=>"The f passed in customGrad(f) must be a function."),(...e)=>{S(e.every(a=>a instanceof ye),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let s;const r={};e.forEach((a,l)=>{r[l]=a});const i=(a,l)=>(s=t(...e,l),S(s.value instanceof ye,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),S(td(s.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),s.value),o=(a,l)=>{const c=s.gradFunc(a,l),u=Array.isArray(c)?c:[c];S(u.length===e.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),S(u.every(d=>d instanceof ye),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const h={};return u.forEach((d,p)=>{h[p]=()=>d}),h};return this.runKernelFunc({forwardFunc:i,backwardsFunc:o,inputs:r})}}readSync(t){return this.state.tensorInfo.get(t).backend.readSync(t)}read(t){return this.state.tensorInfo.get(t).backend.read(t)}readToGPU(t,e){return this.state.tensorInfo.get(t).backend.readToGPU(t,e)}async time(t){const e=Ye(),s=await this.backend.time(t);return s.wallMs=Ye()-e,s}track(t){return this.state.activeScope!=null&&(t.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(t)),t}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new yx;for(const t in this.registry)this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}Xi.nextTensorId=0;Xi.nextVariableId=0;function m$(n){const t=Kd(W(n),"float32");return R.makeTensor(t,n,"float32")}function m0(){const n=Db();if(n._tfengine==null){const t=new Ok(n);n._tfengine=new Xi(t)}return zk(n._tfengine.ENV),d$(()=>n._tfengine),n._tfengine}const R=m0();function x$(n,t){const e={a:n,b:t};return R.runKernel(ro,e)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y$(){return typeof navigator<"u"&&navigator!=null}function x0(n){if(n||y$()){if(n||(n=navigator),n.product==="ReactNative")return!0;const t=n.userAgent||n.vendor||(typeof window<"u"?window.opera:"");if(!t){const e=n;return e.userAgentData&&e.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function y0(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tn=O();tn.registerFlag("DEBUG",()=>!1,n=>{n&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});tn.registerFlag("IS_BROWSER",()=>y0());tn.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u");tn.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));tn.registerFlag("IS_SAFARI",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor));tn.registerFlag("PROD",()=>!1);tn.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>tn.getBool("DEBUG"));tn.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);tn.registerFlag("IS_TEST",()=>!1);tn.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>tn.getBool("DEBUG"));tn.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);tn.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1);tn.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wu(n,t){let e=n;if(Fn(n))return t==="string"?[]:[n.length];if(d0(n)){const r=n.channels||"RGBA";return[n.height,n.width*r.length]}else if(p0(n))return[n.buffer.size/(t==null?4:ac(t))];if(!Array.isArray(n))return[];const s=[];for(;Array.isArray(e)||Fn(e)&&t!=="string";)s.push(e.length),e=e[0];return Array.isArray(n)&&O().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&b0(n,s,[]),s}function b0(n,t,e){if(e=e||[],!Array.isArray(n)&&!Fn(n)){S(t.length===0,()=>`Element arr[${e.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`);return}S(t.length>0,()=>`Element arr[${e.join("][")}] should be a primitive, but is an array of ${n.length} elements`),S(n.length===t[0],()=>`Element arr[${e.join("][")}] should have ${t[0]} elements, but has ${n.length} elements`);const s=t.slice(1);for(let r=0;r<n.length;++r)b0(n[r],s,e.concat(r))}function bx(n,t,e,s){if(n!=="string_or_numeric"){if(n==null)throw new Error("Expected dtype cannot be null.");if(n!=="numeric"&&n!==t||n==="numeric"&&t==="string")throw new Error(`Argument '${e}' passed to '${s}' must be ${n} tensor, but got ${t} tensor`)}}function $(n,t,e,s="numeric"){if(n instanceof U())return bx(s,n.dtype,t,e),n;let r=no(n);if(r!=="string"&&["bool","int32","float32"].indexOf(s)>=0&&(r=s),bx(s,r,t,e),n==null||!Fn(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string"){const l=n==null?"null":n.constructor.name;throw new Error(`Argument '${t}' passed to '${e}' must be a Tensor or TensorLike, but got '${l}'`)}const i=Wu(n,r);!Fn(n)&&!Array.isArray(n)&&(n=[n]);const a=r!=="string"?ai(n,r):Hr(n,[],!0);return R.makeTensor(a,i,r)}function w0(n,t,e,s="numeric"){if(!Array.isArray(n))throw new Error(`Argument ${t} passed to ${e} must be a \`Tensor[]\` or \`TensorLike[]\``);return n.map((i,o)=>$(i,`${t}[${o}]`,e,s))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const b$="__op";function F(n){const t=Object.keys(n);if(t.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let e=t[0];const s=n[e];e.endsWith("_")&&(e=e.substring(0,e.length-1)),e=e+b$;const r=(...i)=>{R.startScope(e);try{const o=s(...i);return Yd(o)&&console.error("Cannot return a Promise inside of tidy."),R.endScope(o),o}catch(o){throw R.endScope(null),o}};return Object.defineProperty(r,"name",{value:e,configurable:!0}),r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w$(n,t){const e=$(n,"real","complex"),s=$(t,"imag","complex");qd(e.shape,s.shape,`real and imag shapes, ${e.shape} and ${s.shape}, must match in call to tf.complex().`);const r={real:e,imag:s};return R.runKernel(ip,r)}const Xr=F({complex_:w$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gu(n,t,e,s){if(s==null)s=no(n);else if(s==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(p0(n)||d0(n)){if(s!=="float32"&&s!=="int32")throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${s}.`);return R.backend.createTensorFromGPUData(n,t||e,s)}if(!Fn(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(t!=null){Ms(t);const r=W(t),i=W(e);S(r===i,()=>`Based on the provided shape, [${t}], the tensor should have ${r} values but has ${i}`);for(let o=0;o<e.length;++o){const a=e[o],l=o===e.length-1?a!==W(t.slice(o)):!0;S(e[o]===t[o]||!l,()=>`Error creating a new Tensor. Inferred shape (${e}) does not match the provided shape (${t}). `)}}return!Fn(n)&&!Array.isArray(n)&&(n=[n]),t=t||e,n=s!=="string"?ai(n,s):Hr(n,[],!0),R.makeTensor(n,t,s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fo(n,t,e){const s=Wu(n,e);return Gu(n,t,s,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pc={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};class fr{static join(t){return new fr(t).slice()}constructor(t){if(this.shards=[],this.previousShardIndex=0,t==null||(t instanceof Array||(t=[t]),t=t.map(s=>Fn(s)?s.buffer:s),t.length===0))return;this.bufferUniformSize=t[0].byteLength;let e=0;for(let s=0;s<t.length;s++){const r=t[s];s!==t.length-1&&r.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const i=e+r.byteLength;this.shards.push({buffer:r,start:e,end:i}),e=i}this.shards.length===0&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(t=0,e=this.byteLength){if(this.shards.length===0)return new ArrayBuffer(0);if(t=isNaN(Number(t))?0:t,e=isNaN(Number(e))?0:e,t=Math.max(0,t),e=Math.min(this.byteLength,e),e<=t)return new ArrayBuffer(0);const s=this.findShardForByte(t);if(s===-1)throw new Error(`Could not find start shard for byte ${t}`);const r=e-t,i=new ArrayBuffer(r),o=new Uint8Array(i);let a=0;for(let l=s;l<this.shards.length;l++){const c=this.shards[l],h=t+a-c.start,d=a,f=Math.min(e,c.end)-c.start,m=new Uint8Array(c.buffer,h,f-h);if(o.set(m,d),a+=m.length,e<c.end)break}return i}findShardForByte(t){if(this.shards.length===0||t<0||t>=this.byteLength)return-1;if(this.bufferUniformSize!=null)return this.previousShardIndex=Math.floor(t/this.bufferUniformSize),this.previousShardIndex;function e(r){return t<r.start?-1:t>=r.end?1:0}if(e(this.shards[this.previousShardIndex])===0)return this.previousShardIndex;const s=C$(this.shards,e);return s===-1?-1:(this.previousShardIndex=s,this.previousShardIndex)}}function C$(n,t){let e=0,s=n.length;for(;e<=s;){const r=Math.floor((s-e)/2)+e,i=t(n[r]);if(i===0)return r;i<0?s=r:e=r+1}return-1}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function os(){return R}function hd(){return R.memory()}function M(n,t){return R.tidy(n,t)}function vt(n){f0(n).forEach(e=>e.dispose())}function ps(n){return R.keep(n)}function _$(n){return R.setBackend(n)}function S$(){return R.backendName}function C0(n,t,e=1){return R.registerBackend(n,t,e)}function I$(){return R.backend}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ji=4;async function wx(n,t){const e=[],s=[],r=Array.isArray(n)?n.map(o=>o.name):Object.keys(n);for(let o=0;o<r.length;++o){const a=r[o],l=Array.isArray(n)?n[o].tensor:n[a];if(l.dtype!=="float32"&&l.dtype!=="int32"&&l.dtype!=="bool"&&l.dtype!=="string"&&l.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${a}': ${l.dtype}`);const c={name:a,shape:l.shape,dtype:l.dtype};if(l.dtype==="string"){const u=new Promise(async h=>{const d=await l.bytes(),p=d.reduce((g,x)=>g+x.length,0)+ji*d.length,f=new Uint8Array(p);let m=0;for(let g=0;g<d.length;g++){const x=d[g],y=new Uint8Array(new Uint32Array([x.length]).buffer);f.set(y,m),m+=ji,f.set(x,m),m+=x.length}h(f)});s.push(u)}else s.push(l.data());t!=null&&(c.group=t),e.push(c)}const i=await Promise.all(s);return{data:T$(i),specs:e}}function v$(n,t){const e=new fr(n),s={};let r=0;for(const i of t){const o=k$(i,(a,l)=>e.slice(r+a,r+l));s[i.name]=$$(i,e.slice(r,r+o)),r+=o}return s}function k$(n,t){const e=W(n.shape);let s;if("quantization"in n){const r=n.quantization;s=pc[r.dtype]}else if(n.dtype==="string"){let r=0;for(let i=0;i<e;i++)r+=ji+new Uint32Array(t(r,r+ji))[0];return r}else s=pc[n.dtype];return e*s}function $$(n,t){const e=n.name,s=n.dtype,r=n.shape,i=W(r);let o,a=0;if("quantization"in n){const l=n.quantization;if(l.dtype==="uint8"||l.dtype==="uint16"){if(!("min"in l&&"scale"in l))throw new Error(`Weight ${n.name} with quantization ${l.dtype} doesn't have corresponding metadata min and scale.`)}else if(l.dtype==="float16"){if(s!=="float32")throw new Error(`Weight ${n.name} is quantized with ${l.dtype} which only supports weights of type float32 not ${s}.`)}else throw new Error(`Weight ${n.name} has unknown quantization dtype ${l.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);const c=pc[l.dtype],u=l.dtype==="uint8"?new Uint8Array(t):new Uint16Array(t);if(s==="float32")if(l.dtype==="uint8"||l.dtype==="uint16"){o=new Float32Array(u.length);for(let h=0;h<u.length;h++){const d=u[h];o[h]=d*l.scale+l.min}}else if(l.dtype==="float16")o=B$()(u);else throw new Error(`Unsupported quantization type ${l.dtype} for weight type float32.`);else if(s==="int32"){if(l.dtype!=="uint8"&&l.dtype!=="uint16")throw new Error(`Unsupported quantization type ${l.dtype} for weight type int32.`);o=new Int32Array(u.length);for(let h=0;h<u.length;h++){const d=u[h];o[h]=Math.round(d*l.scale+l.min)}}else throw new Error(`Unsupported dtype in weight '${e}': ${s}`);a+=i*c}else if(s==="string"){const l=W(n.shape);o=[];for(let c=0;c<l;c++){const u=new Uint32Array(t.slice(a,a+ji))[0];a+=ji;const h=new Uint8Array(t.slice(a,a+u));o.push(h),a+=u}}else{const l=pc[s];if(s==="float32")o=new Float32Array(t);else if(s==="int32")o=new Int32Array(t);else if(s==="bool")o=new Uint8Array(t);else if(s==="complex64"){o=new Float32Array(t);const c=new Float32Array(o.length/2),u=new Float32Array(o.length/2);for(let f=0;f<c.length;f++)c[f]=o[f*2],u[f]=o[f*2+1];const h=Fo(c,r,"float32"),d=Fo(u,r,"float32"),p=Xr(h,d);return h.dispose(),d.dispose(),p}else throw new Error(`Unsupported dtype in weight '${e}': ${s}`);a+=i*l}return Fo(o,r,s)}function T$(n){if(n===null)throw new Error(`Invalid input value: ${JSON.stringify(n)}`);let t=0;const e=[];n.forEach(i=>{if(t+=i.byteLength,e.push(i.byteLength===i.buffer.byteLength?i:new i.constructor(i)),!(i instanceof Float32Array||i instanceof Int32Array||i instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${i.constructor.name}`)});const s=new Uint8Array(t);let r=0;return e.forEach(i=>{s.set(new Uint8Array(i.buffer),r),r+=i.byteLength}),s.buffer}const zp=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function Cx(n){return zp?Buffer.byteLength(n,"utf8"):new Blob([n]).size}function N$(n){if(zp)return Buffer.from(n).toString("base64");const t=new Uint8Array(n);let e="";for(let s=0,r=t.length;s<r;s++)e+=String.fromCharCode(t[s]);return btoa(e)}function E$(n){if(zp){const s=Buffer.from(n,"base64");return s.buffer.slice(s.byteOffset,s.byteOffset+s.byteLength)}const t=atob(n),e=new Uint8Array(t.length);for(let s=0;s<t.length;++s)e.set([t.charCodeAt(s)],s);return e.buffer}function R$(n){return fr.join(n)}function D$(n,t){const e={modelTopology:n.modelTopology,format:n.format,generatedBy:n.generatedBy,convertedBy:n.convertedBy,weightsManifest:t};return n.signature!=null&&(e.signature=n.signature),n.userDefinedMetadata!=null&&(e.userDefinedMetadata=n.userDefinedMetadata),n.modelInitializer!=null&&(e.modelInitializer=n.modelInitializer),n.initializerSignature!=null&&(e.initializerSignature=n.initializerSignature),n.trainingConfig!=null&&(e.trainingConfig=n.trainingConfig),e}function A$(n,t,e){const s={modelTopology:n.modelTopology,format:n.format,generatedBy:n.generatedBy,convertedBy:n.convertedBy};if(n.trainingConfig!=null&&(s.trainingConfig=n.trainingConfig),n.weightsManifest!=null){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!e)throw new Error("modelJSON has weightsManifest but weightData is null");s.weightSpecs=t,s.weightData=e}return n.signature!=null&&(s.signature=n.signature),n.userDefinedMetadata!=null&&(s.userDefinedMetadata=n.userDefinedMetadata),n.modelInitializer!=null&&(s.modelInitializer=n.modelInitializer),n.initializerSignature!=null&&(s.initializerSignature=n.initializerSignature),s}async function F$(n,t){let e,s;return n.weightsManifest!=null&&([e,s]=await t(n.weightsManifest)),A$(n,e,s)}function Up(n){if(n.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:n.modelTopology==null?0:Cx(JSON.stringify(n.modelTopology)),weightSpecsBytes:n.weightSpecs==null?0:Cx(JSON.stringify(n.weightSpecs)),weightDataBytes:n.weightData==null?0:new fr(n.weightData).byteLength}}function _x(n){const t=[];for(const e of n)t.push(...e.weights);return t}function M$(){const n=e=>{let s=e<<13,r=0;for(;!(s&8388608);)r-=8388608,s<<=1;return s&=-8388609,r+=947912704,s|r},t=new Uint32Array(2048);t[0]=0;for(let e=1;e<1024;e++)t[e]=n(e);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}function P$(){const n=new Uint32Array(64);n[0]=0,n[31]=1199570944,n[32]=2147483648,n[63]=3347054592;for(let t=1;t<31;t++)n[t]=t<<23;for(let t=33;t<63;t++)n[t]=2147483648+(t-32<<23);return n}function O$(){const n=new Uint32Array(64);for(let t=0;t<64;t++)n[t]=1024;return n[0]=n[32]=0,n}function B$(){const n=M$(),t=P$(),e=O$();return s=>{const r=new ArrayBuffer(4*s.length),i=new Uint32Array(r);for(let o=0;o<s.length;o++){const a=s[o],l=n[e[a>>10]+(a&1023)]+t[a>>10];i[o]=l}return new Float32Array(r)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ve{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return ve.instance==null&&(ve.instance=new ve),ve.instance}static registerSaveRouter(t){ve.getInstance().saveRouters.push(t)}static registerLoadRouter(t){ve.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return ve.getHandlers(t,"save")}static getLoadHandlers(t,e){return ve.getHandlers(t,"load",e)}static getHandlers(t,e,s){const r=[];return(e==="load"?ve.getInstance().loadRouters:ve.getInstance().saveRouters).forEach(o=>{const a=o(t,s);a!==null&&r.push(a)}),r}}const L$=n=>ve.getSaveHandlers(n),V$=(n,t)=>ve.getLoadHandlers(n,t);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dd="tensorflowjs",pd=1,Or="models_store",Js="model_info_store";function _0(){if(!O().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const n=typeof window>"u"?self:window,t=n.indexedDB||n.mozIndexedDB||n.webkitIndexedDB||n.msIndexedDB||n.shimIndexedDB;if(t==null)throw new Error("The current browser does not appear to support IndexedDB.");return t}function fd(n){const t=n.result;t.createObjectStore(Or,{keyPath:"modelPath"}),t.createObjectStore(Js,{keyPath:"modelPath"})}class jr{constructor(t){if(this.indexedDB=_0(),t==null||!t)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=t}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,t)}async load(){return this.databaseAction(this.modelPath)}databaseAction(t,e){return new Promise((s,r)=>{const i=this.indexedDB.open(dd,pd);i.onupgradeneeded=()=>fd(i),i.onsuccess=()=>{const o=i.result;if(e==null){const a=o.transaction(Or,"readonly"),c=a.objectStore(Or).get(this.modelPath);c.onsuccess=()=>{if(c.result==null)return o.close(),r(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));s(c.result.modelArtifacts)},c.onerror=u=>(o.close(),r(c.error)),a.oncomplete=()=>o.close()}else{e.weightData=fr.join(e.weightData);const a=Up(e),l=o.transaction(Js,"readwrite");let c=l.objectStore(Js),u;try{u=c.put({modelPath:this.modelPath,modelArtifactsInfo:a})}catch(d){return r(d)}let h;u.onsuccess=()=>{h=o.transaction(Or,"readwrite");const d=h.objectStore(Or);let p;try{p=d.put({modelPath:this.modelPath,modelArtifacts:e,modelArtifactsInfo:a})}catch(f){return r(f)}p.onsuccess=()=>s({modelArtifactsInfo:a}),p.onerror=f=>{c=l.objectStore(Js);const m=c.delete(this.modelPath);m.onsuccess=()=>(o.close(),r(p.error)),m.onerror=g=>(o.close(),r(p.error))}},u.onerror=d=>(o.close(),r(u.error)),l.oncomplete=()=>{h==null?o.close():h.oncomplete=()=>o.close()}}},i.onerror=o=>r(i.error)})}}jr.URL_SCHEME="indexeddb://";const S0=n=>O().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(jr.URL_SCHEME)?z$(n.slice(jr.URL_SCHEME.length)):null;ve.registerSaveRouter(S0);ve.registerLoadRouter(S0);function z$(n){return new jr(n)}function U$(n){return n.startsWith(jr.URL_SCHEME)?n.slice(jr.URL_SCHEME.length):n}class W${constructor(){this.indexedDB=_0()}async listModels(){return new Promise((t,e)=>{const s=this.indexedDB.open(dd,pd);s.onupgradeneeded=()=>fd(s),s.onsuccess=()=>{const r=s.result,i=r.transaction(Js,"readonly"),a=i.objectStore(Js).getAll();a.onsuccess=()=>{const l={};for(const c of a.result)l[c.modelPath]=c.modelArtifactsInfo;t(l)},a.onerror=l=>(r.close(),e(a.error)),i.oncomplete=()=>r.close()},s.onerror=r=>e(s.error)})}async removeModel(t){return t=U$(t),new Promise((e,s)=>{const r=this.indexedDB.open(dd,pd);r.onupgradeneeded=()=>fd(r),r.onsuccess=()=>{const i=r.result,o=i.transaction(Js,"readwrite"),a=o.objectStore(Js),l=a.get(t);let c;l.onsuccess=()=>{if(l.result==null)return i.close(),s(new Error(`Cannot find model with path '${t}' in IndexedDB.`));{const u=a.delete(t),h=()=>{c=i.transaction(Or,"readwrite");const p=c.objectStore(Or).delete(t);p.onsuccess=()=>e(l.result.modelArtifactsInfo),p.onerror=f=>s(l.error)};u.onsuccess=h,u.onerror=d=>(h(),i.close(),s(l.error))}},l.onerror=u=>(i.close(),s(l.error)),o.oncomplete=()=>{c==null?i.close():c.oncomplete=()=>i.close()}},r.onerror=i=>s(r.error)})}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ns="/",Ei="tensorflowjs_models",I0="info",G$="model_topology",H$="weight_specs",X$="weight_data",j$="model_metadata";function v0(n){return{info:[Ei,n,I0].join(Ns),topology:[Ei,n,G$].join(Ns),weightSpecs:[Ei,n,H$].join(Ns),weightData:[Ei,n,X$].join(Ns),modelMetadata:[Ei,n,j$].join(Ns)}}function k0(n){for(const t of Object.values(n))window.localStorage.removeItem(t)}function q$(n){const t=n.split(Ns);if(t.length<3)throw new Error(`Invalid key format: ${n}`);return t.slice(1,t.length-1).join(Ns)}function K$(n){return n.startsWith(qr.URL_SCHEME)?n.slice(qr.URL_SCHEME.length):n}class qr{constructor(t){if(!O().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,t==null||!t)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=t,this.keys=v0(this.modelPath)}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const e=JSON.stringify(t.modelTopology),s=JSON.stringify(t.weightSpecs),r=Up(t),i=fr.join(t.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,e),this.LS.setItem(this.keys.weightSpecs,s),this.LS.setItem(this.keys.weightData,N$(i));const o={format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,signature:t.signature!=null?t.signature:void 0,userDefinedMetadata:t.userDefinedMetadata!=null?t.userDefinedMetadata:void 0,modelInitializer:t.modelInitializer!=null?t.modelInitializer:void 0,initializerSignature:t.initializerSignature!=null?t.initializerSignature:void 0,trainingConfig:t.trainingConfig!=null?t.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(o)),{modelArtifactsInfo:r}}catch{throw k0(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const t=JSON.parse(this.LS.getItem(this.keys.info));if(t==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(t.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const e={},s=JSON.parse(this.LS.getItem(this.keys.topology));if(s==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);e.modelTopology=s;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(r==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);e.weightSpecs=r;const i=this.LS.getItem(this.keys.modelMetadata);if(i!=null){const a=JSON.parse(i);e.format=a.format,e.generatedBy=a.generatedBy,e.convertedBy=a.convertedBy,a.signature!=null&&(e.signature=a.signature),a.userDefinedMetadata!=null&&(e.userDefinedMetadata=a.userDefinedMetadata),a.modelInitializer!=null&&(e.modelInitializer=a.modelInitializer),a.initializerSignature!=null&&(e.initializerSignature=a.initializerSignature),a.trainingConfig!=null&&(e.trainingConfig=a.trainingConfig)}const o=this.LS.getItem(this.keys.weightData);if(o==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return e.weightData=E$(o),e}}qr.URL_SCHEME="localstorage://";const $0=n=>O().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(qr.URL_SCHEME)?Y$(n.slice(qr.URL_SCHEME.length)):null;ve.registerSaveRouter($0);ve.registerLoadRouter($0);function Y$(n){return new qr(n)}class J${constructor(){S(O().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),S(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const t={},e=Ei+Ns,s=Ns+I0;for(let r=0;r<this.LS.length;++r){const i=this.LS.key(r);if(i.startsWith(e)&&i.endsWith(s)){const o=q$(i);t[o]=JSON.parse(this.LS.getItem(i))}}return t}async removeModel(t){t=K$(t);const e=v0(t);if(this.LS.getItem(e.info)==null)throw new Error(`Cannot find model at path '${t}'`);const s=JSON.parse(this.LS.getItem(e.info));return k0(e),s}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sx="://";class as{constructor(){this.managers={}}static getInstance(){return as.instance==null&&(as.instance=new as),as.instance}static registerManager(t,e){S(t!=null,()=>"scheme must not be undefined or null."),t.endsWith(Sx)&&(t=t.slice(0,t.indexOf(Sx))),S(t.length>0,()=>"scheme must not be an empty string.");const s=as.getInstance();S(s.managers[t]==null,()=>`A model store manager is already registered for scheme '${t}'.`),s.managers[t]=e}static getManager(t){const e=as.getInstance().managers[t];if(e==null)throw new Error(`Cannot find model manager for scheme '${t}'`);return e}static getSchemes(){return Object.keys(as.getInstance().managers)}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Z${constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(t,e){return fetch(t,e)}now(){return performance.now()}encode(t,e){if(e!=="utf-8"&&e!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${e}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(t)}decode(t,e){return new TextDecoder(e).decode(t)}setTimeoutCustom(t,e){if(typeof window>"u"||!O().getBool("USE_SETTIMEOUTCUSTOM")){setTimeout(t,e);return}this.functionRefs.push(t),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},e),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",s=>{if(s.source===window&&s.data.name===this.messageName){s.stopPropagation();const r=this.functionRefs[s.data.index];r(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}},!0))}isTypedArray(t){return n0(t)}}if(O().get("IS_BROWSER")){O().setPlatform("browser",new Z$);try{as.registerManager(qr.URL_SCHEME,new J$)}catch{}try{as.registerManager(jr.URL_SCHEME,new W$)}catch{}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Q$={importFetch:()=>require("node-fetch")};let Fh;class tT{constructor(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}fetch(t,e){return O().global.fetch!=null?O().global.fetch(t,e):(Fh==null&&(Fh=Q$.importFetch()),Fh(t,e))}now(){const t=process.hrtime();return t[0]*1e3+t[1]/1e6}encode(t,e){if(e!=="utf-8"&&e!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${e}`);return this.textEncoder.encode(t)}decode(t,e){return t.length===0?"":new this.util.TextDecoder(e).decode(t)}isTypedArray(t){return this.util.types.isFloat32Array(t)||this.util.types.isInt32Array(t)||this.util.types.isUint8Array(t)||this.util.types.isUint8ClampedArray(t)}}O().get("IS_NODE")&&!O().get("IS_BROWSER")&&O().setPlatform("node",new tT);/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kt(n,t="float32",e){return t=t||"float32",Ms(n),new De(n,t,e)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eT(n,t){const e=$(n,"x","cast");if(!Ak(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if(t==="string"&&e.dtype!=="string"||t!=="string"&&e.dtype==="string")throw new Error("Only strings can be casted to strings");const s={x:e},r={dtype:t};return R.runKernel(ma,s,r)}const rt=F({cast_:eT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nT(n){const e={x:$(n,"x","clone","string_or_numeric")};return R.runKernel(Na,e)}const zr=F({clone_:nT});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sT(n,t=!1){console.log(n.toString(t))}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */m0();const rT={buffer:kt,cast:rt,clone:zr,print:sT};p$(rT);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iT(n,t){let e=$(n,"a","add"),s=$(t,"b","add");[e,s]=ue(e,s);const r={a:e,b:s};return R.runKernel(ro,r)}const Y=F({add_:iT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oT(n,t){let e=$(n,"a","floorDiv"),s=$(t,"b","floorDiv");[e,s]=ue(e,s);const r={a:e,b:s};return R.runKernel($a,r)}const T0=F({floorDiv_:oT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aT(n,t){let e=$(n,"a","div"),s=$(t,"b","div");if([e,s]=ue(e,s),e.dtype==="int32"&&s.dtype==="int32")return T0(e,s);const r={a:e,b:s},i={};return R.runKernel(Ca,r,i)}const gt=F({div_:aT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lT(n,t){let e=$(n,"a","mul"),s=$(t,"b","mul");[e,s]=ue(e,s);const r={a:e,b:s};return R.runKernel(Ba,r)}const E=F({mul_:lT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cT(n){const t=$(n,"x","abs");if(t.dtype==="complex64"){const e={x:t};return R.runKernel(Kc,e)}else{const e={x:t};return R.runKernel(Uc,e)}}const We=F({abs_:cT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uT(n){const e={x:$(n,"x","acos")};return R.runKernel(ca,e)}const hT=F({acos_:uT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dT(n){const e={x:$(n,"x","acosh")};return R.runKernel(ua,e)}const pT=F({acosh_:dT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fT(n,t=null,e=!1){const r={x:$(n,"x","all","bool")},i={axis:t,keepDims:e};return R.runKernel(Qd,r,i)}const N0=F({all_:fT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gT(n,t=null,e=!1){const r={x:$(n,"x","any","bool")},i={axis:t,keepDims:e};return R.runKernel(tp,r,i)}const gd=F({any_:gT});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mT(n,t=0){const s={x:$(n,"x","argMax")},r={axis:t};return R.runKernel(Wc,s,r)}const jo=F({argMax_:mT});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xT(n,t=0){const s={x:$(n,"x","argMin")},r={axis:t};return R.runKernel(Gc,s,r)}const yT=F({argMin_:xT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bT(n){const e={x:$(n,"x","asin")};return R.runKernel(ha,e)}const wT=F({asin_:bT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CT(n){const e={x:$(n,"x","asinh")};return R.runKernel(da,e)}const _T=F({asinh_:CT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ST(n){const e={x:$(n,"x","atan")};return R.runKernel(pa,e)}const IT=F({atan_:ST});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vT(n,t){let e=$(n,"a","atan2"),s=$(t,"b","atan2");[e,s]=ue(e,s);const r={a:e,b:s};return R.runKernel(ga,r)}const kT=F({atan2_:vT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $T(n){const e={x:$(n,"x","atanh")};return R.runKernel(fa,e)}const TT=F({atanh_:$T});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rl(n,t,e,s,r="NHWC",i){const o=n[3],a=[...t,o],l=Os(r);return Ae(n,a,e,i,s,null,null,l)}function Pn(n,t,e,s,r,i,o="channelsLast"){const[a,l]=qo(t);let c;if(o==="channelsLast")c=[a,l,n[3],n[3]];else if(o==="channelsFirst")c=[a,l,n[1],n[1]];else throw new Error(`Unknown dataFormat ${o}`);return Ae(n,c,e,s,r,i,!1,o)}function Ps(n,t,e,s,r,i,o="NDHWC"){const[a,l,c]=md(t);let u,h;if(o==="NDHWC")h="channelsLast",u=[a,l,c,n[4],n[4]];else if(o==="NCDHW")h="channelsFirst",u=[a,l,c,n[1],n[1]];else throw new Error(`Unknown dataFormat ${o}`);return gr(n,u,e,s,r,!1,h,i)}function Ae(n,t,e,s,r,i,o=!1,a="channelsLast"){let[l,c,u,h]=[-1,-1,-1,-1];if(a==="channelsLast")[l,c,u,h]=n;else if(a==="channelsFirst")[l,h,c,u]=n;else throw new Error(`Unknown dataFormat ${a}`);const[d,p,,f]=t,[m,g]=qo(e),[x,y]=qo(s),w=Li(d,x),b=Li(p,y),{padInfo:C,outHeight:_,outWidth:I}=RT(r,c,u,m,g,w,b,i,a),v=o?f*h:f;let k;return a==="channelsFirst"?k=[l,v,_,I]:a==="channelsLast"&&(k=[l,_,I,v]),{batchSize:l,dataFormat:a,inHeight:c,inWidth:u,inChannels:h,outHeight:_,outWidth:I,outChannels:v,padInfo:C,strideHeight:m,strideWidth:g,filterHeight:d,filterWidth:p,effectiveFilterHeight:w,effectiveFilterWidth:b,dilationHeight:x,dilationWidth:y,inShape:n,outShape:k,filterShape:t}}function gr(n,t,e,s,r,i=!1,o="channelsLast",a){let[l,c,u,h,d]=[-1,-1,-1,-1,-1];if(o==="channelsLast")[l,c,u,h,d]=n;else if(o==="channelsFirst")[l,d,c,u,h]=n;else throw new Error(`Unknown dataFormat ${o}`);const[p,f,m,,g]=t,[x,y,w]=md(e),[b,C,_]=md(s),I=Li(p,b),v=Li(f,C),k=Li(m,_),{padInfo:T,outDepth:D,outHeight:P,outWidth:B}=DT(r,c,u,h,x,y,w,I,v,k,a),V=i?g*d:g;let L;return o==="channelsFirst"?L=[l,V,D,P,B]:o==="channelsLast"&&(L=[l,D,P,B,V]),{batchSize:l,dataFormat:o,inDepth:c,inHeight:u,inWidth:h,inChannels:d,outDepth:D,outHeight:P,outWidth:B,outChannels:V,padInfo:T,strideDepth:x,strideHeight:y,strideWidth:w,filterDepth:p,filterHeight:f,filterWidth:m,effectiveFilterDepth:I,effectiveFilterHeight:v,effectiveFilterWidth:k,dilationDepth:b,dilationHeight:C,dilationWidth:_,inShape:n,outShape:L,filterShape:t}}function NT(n,t,e,s,r){s==null&&(s=Wp(n,t,e));const i=n[0],o=n[1],a=Ko((i-t+2*s)/e+1,r),l=Ko((o-t+2*s)/e+1,r);return[a,l]}function ET(n,t,e,s,r,i){r==null&&(r=Wp(n,t[0],s[0]));const o=[0,0,0,e];for(let a=0;a<3;a++)n[a]+2*r>=t[a]&&(o[a]=Ko((n[a]-t[a]+2*r)/s[a]+1,i));return o}function Wp(n,t,e,s=1){const r=Li(t,s);return Math.floor((n[0]*(e-1)-e+r)/2)}function qo(n){return typeof n=="number"?[n,n,n]:n.length===2?[n[0],n[1],1]:n}function md(n){return typeof n=="number"?[n,n,n]:n}function Li(n,t){return t<=1?n:n+(n-1)*(t-1)}function RT(n,t,e,s,r,i,o,a,l){let c,u,h;if(typeof n=="number"){c={top:n,bottom:n,left:n,right:n,type:n===0?"VALID":"NUMBER"};const p=NT([t,e],i,s,n,a);u=p[0],h=p[1]}else if(n==="same"){u=Math.ceil(t/s),h=Math.ceil(e/r);const d=Math.max(0,(u-1)*s+i-t),p=Math.max(0,(h-1)*r+o-e),f=Math.floor(d/2),m=d-f,g=Math.floor(p/2),x=p-g;c={top:f,bottom:m,left:g,right:x,type:"SAME"}}else if(n==="valid")c={top:0,bottom:0,left:0,right:0,type:"VALID"},u=Math.ceil((t-i+1)/s),h=Math.ceil((e-o+1)/r);else if(typeof n=="object"){const d=l==="channelsLast"?n[1][0]:n[2][0],p=l==="channelsLast"?n[1][1]:n[2][1],f=l==="channelsLast"?n[2][0]:n[3][0],m=l==="channelsLast"?n[2][1]:n[3][1];c={top:d,bottom:p,left:f,right:m,type:d===0&&p===0&&f===0&&m===0?"VALID":"EXPLICIT"},u=Ko((t-i+d+p)/s+1,a),h=Ko((e-o+f+m)/r+1,a)}else throw Error(`Unknown padding parameter: ${n}`);return{padInfo:c,outHeight:u,outWidth:h}}function DT(n,t,e,s,r,i,o,a,l,c,u){let h,d,p,f;if(n==="valid"&&(n=0),typeof n=="number"){h={top:n,bottom:n,left:n,right:n,front:n,back:n,type:n===0?"VALID":"NUMBER"};const g=ET([t,e,s,1],[a,l,c],1,[r,i,o],n,u);d=g[0],p=g[1],f=g[2]}else if(n==="same"){d=Math.ceil(t/r),p=Math.ceil(e/i),f=Math.ceil(s/o);const m=(d-1)*r+a-t,g=(p-1)*i+l-e,x=(f-1)*o+c-s,y=Math.floor(m/2),w=m-y,b=Math.floor(g/2),C=g-b,_=Math.floor(x/2),I=x-_;h={top:b,bottom:C,left:_,right:I,front:y,back:w,type:"SAME"}}else throw Error(`Unknown padding parameter: ${n}`);return{padInfo:h,outDepth:d,outHeight:p,outWidth:f}}function Ko(n,t){if(!t)return Math.trunc(n);switch(t){case"round":return Math.round(n);case"ceil":return Math.ceil(n);case"floor":return Math.floor(n);default:throw new Error(`Unknown roundingMode ${t}`)}}function Kr(n){const[t,e,s]=qo(n);return t===1&&e===1&&s===1}function Ve(n,t){return Kr(n)||Kr(t)}function Yr(n){return qo(n).every(t=>t>0)}function Os(n){if(n==="NHWC")return"channelsLast";if(n==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${n}`)}function nn(n,t,e){if(e!=null){if(typeof t=="string")throw Error(`Error in ${n}: pad must be an integer when using dimRoundingMode ${e} but got pad ${t}.`);if(typeof t=="number")S(Gi(t),()=>`Error in ${n}: pad must be an integer when using dimRoundingMode ${e} but got pad ${t}.`);else if(typeof t=="object")t.forEach(s=>{s.forEach(r=>{S(Gi(r),()=>`Error in ${n}: pad must be an integer when using dimRoundingMode ${e} but got pad ${r}.`)})});else throw Error(`Error in ${n}: Unknown padding parameter: ${t}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AT(n,t){const s={x:$(n,"x","reshape","string_or_numeric")},r={shape:t};return R.runKernel(Nu,s,r)}const A=F({reshape_:AT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FT(n,t,e,s,r){const i=$(n,"x","avgPool","float32"),o=1;S(Ve(e,o),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${e} and dilations '${o}'`);let a=i,l=!1;i.rank===3&&(l=!0,a=A(i,[1,i.shape[0],i.shape[1],i.shape[2]])),S(a.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${a.rank}.`),nn("avgPool",s,r);const c={x:a},u={filterSize:t,strides:e,pad:s,dimRoundingMode:r};let h=R.runKernel(Hc,c,u);return h=rt(h,i.dtype),l?A(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const Gp=F({avgPool_:FT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MT(n,t,e,s,r,i="NDHWC"){const o=$(n,"x","avgPool3d","float32");let a=o,l=!1;o.rank===4&&(l=!0,a=A(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),S(a.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${a.rank}.`),S(i==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`),S(typeof e=="number"&&e>0||Array.isArray(e)&&e[0]>0&&e[1]>0&&e[2]>0,()=>`Error in avgPool3d: Stride must be > 0, but got '${e}'`),nn("avgPool3d",s,r);const c={x:a},u={filterSize:t,strides:e,pad:s,dimRoundingMode:r,dataFormat:i};let h=R.runKernel(Xc,c,u);return h=rt(h,a.dtype),l?A(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const PT=F({avgPool3d_:MT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OT(n,t=0){S(n.length>=1,()=>"Pass at least one tensor to concat");const e=w0(n,"tensors","concat","string_or_numeric");if(e[0].dtype==="complex64"&&e.forEach(i=>{if(i.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${i.dtype}. `)}),e.length===1)return zr(e[0]);const s=e,r={axis:t};return R.runKernel(Yc,s,r)}const Qe=F({concat_:OT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BT(n,t,e=!1,s=!1){let r=$(n,"a","matMul"),i=$(t,"b","matMul");[r,i]=ue(r,i);const o={a:r,b:i},a={transposeA:e,transposeB:s};return R.runKernel(jc,o,a)}const Ft=F({matMul_:BT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LT(n){const e={x:$(n,"x","sigmoid","float32")};return R.runKernel(Ka,e)}const io=F({sigmoid_:LT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VT(n,t,e){const s=$(n,"x","slice","string_or_numeric");if(s.rank===0)throw new Error("Slicing scalar is not possible");const r={x:s},i={begin:t,size:e};return R.runKernel(Fu,r,i)}const qt=F({slice_:VT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zT(n){const e={x:$(n,"x","tanh","float32")};return R.runKernel(el,e)}const Hu=F({tanh_:zT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UT(n,t,e){const s=$(n,"x","batchToSpaceND"),r=t.reduce((a,l)=>a*l);S(s.rank>=1+t.length,()=>`input rank is ${s.rank} but should be > than blockShape.length ${t.length}`),S(e.length===t.length,()=>`crops.length is ${e.length} but should be equal to blockShape.length  ${t.length}`),S(s.shape[0]%r===0,()=>`input tensor batch is ${s.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${r}`);const i={x:s},o={blockShape:t,crops:e};return R.runKernel(qc,i,o)}const Hp=F({batchToSpaceND_:UT});function WT(n){let t;return n.rank===0||n.rank===1?t=A(n,[1,1,1,n.size]):n.rank===2?t=A(n,[1,1,n.shape[0],n.shape[1]]):n.rank===3?t=A(n,[1,n.shape[0],n.shape[1],n.shape[2]]):t=n,t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GT(n,t,e,s,r,i){i==null&&(i=.001);const o=$(n,"x","batchNorm"),a=$(t,"mean","batchNorm"),l=$(e,"variance","batchNorm");let c;r!=null&&(c=$(r,"scale","batchNorm"));let u;s!=null&&(u=$(s,"offset","batchNorm")),S(a.rank===l.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),S(u==null||a.rank===u.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),S(c==null||a.rank===c.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const d={x:WT(o),scale:c,offset:u,mean:a,variance:l},p={varianceEpsilon:i},f=R.runKernel(iu,d,p);return A(f,o.shape)}const Xu=F({batchNorm_:GT});function HT(n,t,e,s,r,i){const o=$(n,"x","batchNorm"),a=$(t,"mean","batchNorm"),l=$(e,"variance","batchNorm");let c;r!=null&&(c=$(r,"scale","batchNorm"));let u;return s!=null&&(u=$(s,"offset","batchNorm")),S(o.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${o.rank}.`),S(a.rank===2||a.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${a.rank}.`),S(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`),c!=null&&S(c.rank===2||c.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${c.rank}.`),u!=null&&S(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${u.rank}.`),Xu(o,a,l,u,c,i)}const XT=F({batchNorm2d_:HT});function jT(n,t,e,s,r,i){const o=$(n,"x","batchNorm"),a=$(t,"mean","batchNorm"),l=$(e,"variance","batchNorm");let c;r!=null&&(c=$(r,"scale","batchNorm"));let u;return s!=null&&(u=$(s,"offset","batchNorm")),S(o.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${o.rank}.`),S(a.rank===3||a.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${a.rank}.`),S(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`),c!=null&&S(c.rank===3||c.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${c.rank}.`),u!=null&&S(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${u.rank}.`),Xu(o,a,l,u,c,i)}const qT=F({batchNorm3d_:jT});function KT(n,t,e,s,r,i){const o=$(n,"x","batchNorm"),a=$(t,"mean","batchNorm"),l=$(e,"variance","batchNorm");let c;r!=null&&(c=$(r,"scale","batchNorm"));let u;return s!=null&&(u=$(s,"offset","batchNorm")),S(o.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${o.rank}.`),S(a.rank===4||a.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${a.rank}.`),S(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`),c!=null&&S(c.rank===4||c.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${c.rank}.`),u!=null&&S(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${u.rank}.`),Xu(o,a,l,u,c,i)}const YT=F({batchNorm4d_:KT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JT(n,t,e){const s=$(n,"x","bincount"),r=$(t,"weights","bincount");S(s.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${s.dtype}`),S(e>=0,()=>`size must be non-negative, but got ${e}.`),S(r.size===s.size||r.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${s.shape}, weights shape: ${r.shape}.`);const i={x:s,weights:r},o={size:e};return R.runKernel(sp,i,o)}const ZT=F({bincount_:JT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QT(n,t){let e=$(n,"broadcastTo","x");const s=e.shape;if(Ms(t),t.length<e.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${e.rank}.`);if(t.length>e.rank){const c=e.shape.slice();for(;c.length<t.length;)c.unshift(1);e=A(e,c)}const r=e.shape,i=Array.from(t);for(let c=t.length-1;c>=0;c--)if(r[c]===t[c])i[c]=1;else if(e.shape[c]!==1)throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${t}].`);if(i.map((c,u)=>c>1?u:-1).filter(c=>c>=0).length===0)return zr(e);const a={x:e},l={reps:i};return R.runKernel(nl,a,l)}const Mo=F({broadcastTo_:QT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tN(n){const e={x:$(n,"x","ceil","float32")};return R.runKernel(xa,e)}const eN=F({ceil_:tN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ju(n,t,e){Ms(n),e=e||no(t);const s={shape:n,value:t,dtype:e};return R.runKernel(yp,{},s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nN(n,t,e){const s=$(n,"x","clipByValue");if(S(t<=e,()=>`Error in clip: min (${t}) must be less than or equal to max (${e}).`),t===e)return ju(s.shape,t,s.dtype);const r={x:s},i={clipValueMin:t,clipValueMax:e};return R.runKernel(ya,r,i)}const wn=F({clipByValue_:nN});function sN(n){return Qe(n,0)}const rN=F({concat1d_:sN});function iN(n,t){return Qe(n,t)}const oN=F({concat2d_:iN});function aN(n,t){return Qe(n,t)}const lN=F({concat3d_:aN});function cN(n,t){return Qe(n,t)}const uN=F({concat4d_:cN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hN(n,t,e,s,r="NHWC",i=[1,1],o){const a=$(n,"x","conv2d","float32"),l=$(t,"filter","conv2d","float32");let c=a,u=!1;a.rank===3&&(u=!0,c=A(a,[1,a.shape[0],a.shape[1],a.shape[2]])),S(c.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${c.rank}.`),S(l.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`),nn("conv2d",s,o);const h=r==="NHWC"?c.shape[3]:c.shape[1];S(h===l.shape[2],()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${l.shape[2]}.`),S(Ve(e,i),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${e} and dilations '${i}'`),S(Yr(i),()=>"Error in conv2D: Dilated rates should be larger than 0."),S(Yr(e),()=>"Error in conv2D: Strides should be larger than 0.");const d={x:c,filter:l},p={strides:e,pad:s,dataFormat:r,dilations:i,dimRoundingMode:o},f=R.runKernel(Jc,d,p);return u?A(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const Jr=F({conv2d_:hN});function dN(n,t,e,s,r="NWC",i=1,o){const a=$(n,"x","conv1d"),l=$(t,"filter","conv1d");let c=a,u=!1;a.rank===2&&(u=!0,c=A(a,[1,a.shape[0],a.shape[1]])),S(c.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${c.rank}.`),S(l.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`),nn("conv1d",s,o),S(c.shape[2]===l.shape[1],()=>`Error in conv1d: depth of input (${c.shape[2]}) must match input depth for filter ${l.shape[1]}.`),S(Ve(e,i),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${e} and dilation '${i}'`),S(Yr(i),()=>"Error in conv1D: Dilated rates should be larger than 0."),S(Yr(e),()=>"Error in conv1D: Stride should be larger than 0."),S(r==="NWC",()=>`Error in conv1d: got dataFormat of ${r} but only NWC is currently supported.`);const h=A(l,[1,l.shape[0],l.shape[1],l.shape[2]]),d=A(c,[c.shape[0],1,c.shape[1],c.shape[2]]),g=Jr(d,h,[1,e],s,"NHWC",[1,i],o);return u?A(g,[g.shape[2],g.shape[3]]):A(g,[g.shape[0],g.shape[2],g.shape[3]])}const E0=F({conv1d_:dN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pN(n,t,e,s,r,i="NHWC",o){S(n.length===t.rank,()=>`Length of inShape (${n.length}) and rank of dy (${t.rank}) must match`);let a=n,l=t,c=!1;t.rank===3&&(c=!0,l=A(t,[1,t.shape[0],t.shape[1],t.shape[2]]),a=[1,n[0],n[1],n[2]]),S(a.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${a.length}.`),S(l.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`),S(e.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${e.rank}`);const u=i==="NHWC"?a[3]:a[1],h=i==="NHWC"?l.shape[3]:l.shape[1];S(u===e.shape[2],()=>`Error in conv2dDerInput: depth of input (${u}) must match input depth for filter ${e.shape[2]}.`),S(h===e.shape[3],()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${e.shape[3]}.`),nn("conv2dDerInput",r,o);const d={dy:l,filter:e},p={strides:s,pad:r,dataFormat:i,dimRoundingMode:o,inputShape:a},f=R.runKernel(Zc,d,p);return c?A(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const Xp=F({conv2DBackpropInput_:pN});function fN(n,t,e,s,r,i){const o=$(n,"x","conv2dTranspose"),a=$(t,"filter","conv2dTranspose");return Xp(e,o,a,s,r,"NHWC",i)}const R0=F({conv2dTranspose_:fN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gN(n,t,e,s,r="NDHWC",i=[1,1,1]){const o=$(n,"x","conv3d"),a=$(t,"filter","conv3d");let l=o,c=!1;o.rank===4&&(c=!0,l=A(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),S(l.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`),S(a.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${a.rank}.`),S(l.shape[4]===a.shape[3],()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${a.shape[3]}.`),S(Ve(e,i),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${e} and dilations '${i}'`),S(r==="NDHWC",()=>`Error in conv3d: got dataFormat of ${r} but only NDHWC is currently supported.`),S(Yr(i),()=>"Error in conv3D: Dilated rates should be larger than 0."),S(Yr(e),()=>"Error in conv3D: Strides should be larger than 0.");const u={x:l,filter:a},h={strides:e,pad:s,dataFormat:r,dilations:i},d=R.runKernel(Qc,u,h);return c?A(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const mN=F({conv3d_:gN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xN(n,t,e,s,r){S(n.length===t.rank,()=>`Length of inShape (${n.length}) and rank of dy (${t.rank}) must match`);let i=n,o=t,a=!1;t.rank===4&&(a=!0,o=A(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),i=[1,n[0],n[1],n[2],n[3]]);const l=i[4],c=o.shape[4];S(i.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${i.length}.`),S(o.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${o.rank}`),S(e.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${e.rank}`),S(l===e.shape[3],()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${e.shape[3]}.`),S(c===e.shape[4],()=>`Error in conv3dDerInput: depth of output (${c}) must match output depth for filter ${e.shape[4]}.`);const u={dy:o,filter:e},h={pad:r,strides:s,inputShape:i},d=R.runKernel(lp,u,h);return a?A(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const D0=F({conv3DBackpropInput_:xN});function yN(n,t,e,s,r){const i=$(n,"x","conv3dTranspose"),o=$(t,"filter","conv3dTranspose");return D0(e,i,o,s,r)}const bN=F({conv3dTranspose_:yN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wN(n){const e={x:$(n,"x","cos","float32")};return R.runKernel(ba,e)}const jp=F({cos_:wN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CN(n){const e={x:$(n,"x","cosh","float32")};return R.runKernel(wa,e)}const A0=F({cosh_:CN});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _N(n,t=0,e=!1,s=!1){const i={x:$(n,"x","cumprod")},o={axis:t,exclusive:e,reverse:s};return R.runKernel(cp,i,o)}const xd=F({cumprod_:_N});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SN(n,t=0,e=!1,s=!1){const i={x:$(n,"x","cumsum")},o={axis:t,exclusive:e,reverse:s};return R.runKernel(tu,i,o)}const F0=F({cumsum_:SN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IN(n,t,e,s=!1){const r=$(n,"x","denseBincount"),i=$(t,"weights","denseBincount");S(r.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${r.dtype}`),S(r.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${r.rank}.`),S(e>=0,()=>`size must be non-negative, but got ${e}.`),S(i.size===r.size||i.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${r.shape}, weights shape: ${i.shape}.`);const o={x:r,weights:i},a={size:e,binaryOutput:s};return R.runKernel(hp,o,a)}const Ix=F({denseBincount_:IN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vN(n,t,e="NHWC"){const s=$(n,"x","depthToSpace","float32"),r=e==="NHWC"?s.shape[1]:s.shape[2],i=e==="NHWC"?s.shape[2]:s.shape[3],o=e==="NHWC"?s.shape[3]:s.shape[1];S(t>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`),S(r*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${r} and ${t}  for depthToSpace with input shape
    ${s.shape}`),S(i*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${i} and ${t} for depthToSpace with input shape
        ${s.shape}`),S(o%(t*t)===0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${o} for depthToSpace with input shape ${s.shape}`);const a={x:s},l={blockSize:t,dataFormat:e};return R.runKernel(dp,a,l)}const kN=F({depthToSpace_:vN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $N(n,t,e,s,r="NHWC",i=[1,1],o){const a=$(n,"x","depthwiseConv2d","float32"),l=$(t,"filter","depthwiseConv2d","float32");let c=a,u=!1;a.rank===3&&(u=!0,c=A(a,[1,a.shape[0],a.shape[1],a.shape[2]])),S(c.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${c.rank}.`),S(l.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`);const h=r==="NHWC"?c.shape[3]:c.shape[1];S(h===l.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${h}) must match the inChannels dimension in filter ${l.shape[2]}.`),nn("depthwiseConv2d",s,o);const d={x:c,filter:l},p={strides:e,pad:s,dataFormat:r,dilations:i,dimRoundingMode:o},f=R.runKernel(eu,d,p);return u?A(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const qp=F({depthwiseConv2d_:$N});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TN(n,t,e,s,r=[1,1],i="NHWC"){const o=$(n,"x","dilation2d"),a=$(t,"filter","dilation2d");S(o.rank===3||o.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${o.rank}.`),S(a.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${a.rank}.`),S(i==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${i}`);let l=o,c=!1;o.rank===3&&(l=A(o,[1,o.shape[0],o.shape[1],o.shape[2]]),c=!0),S(l.shape[3]===a.shape[2],()=>`Error in dilation2d:  input and filter must have the same depth: ${l.shape[3]} vs ${a.shape[2]}`);const u={x:l,filter:a},h={strides:e,pad:s,dilations:r},d=R.runKernel(nu,u,h);return c?A(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const NN=F({dilation2d_:TN});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qi(n,t){const e=n.length,s=[];for(let r=0;r<e;r++){const i=e-1-r,o=n[i]||1;(t[t.length-1-r]||1)>1&&o===1&&s.unshift(i)}return s}function Se(n,t){const e=[];for(let s=0;s<t.length;s++){const r=n[n.length-s-1],i=t.length-s-1,o=t[i];(r==null||r===1&&o>1)&&e.unshift(i)}return e}function Ct(n,t){const e=Math.max(n.length,t.length),s=new Array(e);for(let r=0;r<e;r++){let i=n[n.length-r-1];i==null&&(i=1);let o=t[t.length-r-1];if(o==null&&(o=1),i===1)s[e-r-1]=o;else if(o===1)s[e-r-1]=i;else if(i!==o){const a=`Operands could not be broadcast together with shapes ${n} and ${t}.`;throw Error(a)}else s[e-r-1]=i}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EN(n,t){let e=$(n,"a","equal","string_or_numeric"),s=$(t,"b","equal","string_or_numeric");[e,s]=ue(e,s),Ct(e.shape,s.shape);const r={a:e,b:s};return R.runKernel(su,r)}const ys=F({equal_:EN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RN(n,t,e){const s=$(t,"a","where"),r=$(e,"b","where"),i=$(n,"condition","where","bool"),o=Ct(Ct(i.shape,s.shape),r.shape),a=Mo(i,o),l=Mo(s,o),c=Mo(r,o),u={condition:a,t:l,e:c};return R.runKernel(Au,u)}const je=F({where_:RN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DN(n){const e={x:$(n,"x","zerosLike")};return R.runKernel(zu,e)}const Rt=F({zerosLike_:DN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AN(n,t){let e=$(n,"a","div"),s=$(t,"b","div");[e,s]=ue(e,s);const r=gt(e,s),i=Rt(r),o=ys(s,i);return je(o,i,r)}const FN=F({divNoNan_:AN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MN(n,t){const e=$(n,"t1","dot"),s=$(t,"t2","dot");S((e.rank===1||e.rank===2)&&(s.rank===1||s.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${e.rank} and ${s.rank}.`);const r=e.rank===1?e.size:e.shape[1],i=s.rank===1?s.size:s.shape[0];if(S(r===i,()=>`Error in dot: inner dimensions of inputs must match, but got ${r} and ${i}.`),e.rank===1&&s.rank===1){const o=A(e,[1,-1]),a=A(s,[-1,1]),l=Ft(o,a);return A(l,[])}else if(e.rank===1&&s.rank===2){const o=A(e,[1,-1]),a=A(s,[s.shape[0],s.shape[1]]),l=Ft(o,a);return A(l,[l.size])}else if(e.rank===2&&s.rank===1){const o=A(s,[-1,1]),a=Ft(e,o);return A(a,[a.size])}else{const o=A(s,[s.shape[0],s.shape[1]]);return Ft(e,o)}}const PN=F({dot_:MN});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ON(n,...t){const e=t.map((r,i)=>$(r,`tensors${i}`,"einsum")),s={equation:n};return R.runKernel(gp,e,s)}const Io=F({einsum_:ON});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BN(n){const e={x:$(n,"x","elu","float32")};return R.runKernel(_a,e)}const qu=F({elu_:BN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LN(n){let t=$(n,"x","erf");S(t.dtype==="int32"||t.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),t.dtype==="int32"&&(t=rt(t,"float32"));const e={x:t};return R.runKernel(Sa,e)}const M0=F({erf_:LN});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kp(n,t){for(let e=0;e<n.length;++e)if(n[n.length-e-1]!==t-1-e)return!1;return!0}function P0(n,t,e){const s=n.length+t.length,r=[];let i=0,o=0;for(let a=0;a<s;a++)e.indexOf(a)===-1?r.push(n[i++]):r.push(t[o++]);return r}function Ne(n,t){const e=[],s=n.length;for(let i=0;i<s;i++)t.indexOf(i)===-1&&e.push(n[i]);const r=t.map(i=>n[i]);return[e,r]}function xe(n,t){const e=t.map(s=>1);return P0(n,e,t)}function Fe(n,t,e){S(Kp(t,e),()=>`${n} supports only inner-most axes for now. Got axes ${t} and rank-${e} input.`)}function oe(n,t){if(Kp(n,t))return null;const e=[];for(let s=0;s<t;++s)n.indexOf(s)===-1&&e.push(s);return n.forEach(s=>e.push(s)),e}function mr(n){return n.map((t,e)=>[e,t]).sort((t,e)=>t[1]-e[1]).map(t=>t[0])}function he(n,t){const e=[];for(let s=t-n;s<t;++s)e.push(s);return e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VN(n,t=null,e=!1){const r={x:$(n,"x","max")},i={reductionIndices:t,keepDims:e};return R.runKernel(gu,r,i)}const Zn=F({max_:VN});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zN(n,t=null,e=!1){const r={x:$(n,"x","min")},i={axis:t,keepDims:e};return R.runKernel(bu,r,i)}const fc=F({min_:zN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UN(n,t){let e=$(n,"base","pow"),s=$(t,"exp","pow");[e,s]=ue(e,s);const r={a:e,b:s};return R.runKernel(La,r)}const Zr=F({pow_:UN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mt(n,t){if((Fn(n)&&t!=="string"||Array.isArray(n))&&t!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(t==="string"&&Fn(n)&&!(n instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Gu(n,[],[],t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WN(n){const e={x:$(n,"x","sqrt","float32")};return R.runKernel(Ja,e)}const Le=F({sqrt_:WN});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GN(n){const t=$(n,"x","square"),e={};return R.runKernel("Square",{x:t},e)}const Jt=F({square_:GN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HN(n,t=null,e=!1){let s=$(n,"x","sum");s.dtype==="bool"&&(s=rt(s,"int32"));const r={x:s},i={axis:t,keepDims:e};return R.runKernel(Mu,r,i)}const pt=F({sum_:HN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XN(n,t="euclidean",e=null,s=!1){n=$(n,"x","norm");const r=O0(n,t,e);let i=r.shape;if(s){const o=$t(e,n.shape);i=xe(r.shape,o)}return A(r,i)}function O0(n,t,e=null){if(n.rank===0)return We(n);if(n.rank!==1&&e===null)return O0(A(n,[-1]),t,e);if(n.rank===1||typeof e=="number"||Array.isArray(e)&&e.length===1){if(t===1)return pt(We(n),e);if(t===1/0)return Zn(We(n),e);if(t===-1/0)return fc(We(n),e);if(t==="euclidean"||t===2)return Le(pt(Zr(We(n),Mt(2,"int32")),e));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(e)&&e.length===2){if(t===1)return Zn(pt(We(n),e[0]),e[1]-1);if(t===1/0)return Zn(pt(We(n),e[1]),e[0]);if(t===-1/0)return fc(pt(We(n),e[1]),e[0]);if(t==="fro"||t==="euclidean")return Le(pt(Jt(n),e));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${e}`)}const Ku=F({norm_:XN});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jN(n,t=null,e=!1){return Ku(n,"euclidean",t,e)}const qN=F({euclideanNorm_:jN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KN(n){const e={x:$(n,"x","exp")};return R.runKernel(Ia,e)}const bs=F({exp_:KN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YN(n,t=0){const e=$(n,"x","expandDims","string_or_numeric");S(t<=e.rank,()=>"Axis must be <= rank of the tensor");const s={input:e},r={dim:t};return R.runKernel(ru,s,r)}const Je=F({expandDims_:YN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JN(n){const e={x:$(n,"x","expm1")};return R.runKernel(va,e)}const ZN=F({expm1_:JN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QN(n,t){const e=$(n,"x","tile","string_or_numeric");S(e.rank===t.length,()=>`Error in transpose: rank of input ${e.rank} must match length of reps ${t}.`);const s={x:e},r={reps:t};return R.runKernel(nl,s,r)}const Yn=F({tile_:QN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tE(n,t,e,s="float32"){t==null&&(t=n);const r=kt([n,t],s),i=n<=t?n:t;for(let a=0;a<i;++a)r.set(1,a,a);const o=A(r.toTensor(),[n,t]);if(e==null)return o;if(e.length===1)return Yn(Je(o,0),[e[0],1,1]);if(e.length===2)return Yn(Je(Je(o,0),0),[e[0],e[1],1,1]);if(e.length===3)return Yn(Je(Je(Je(o,0),0),0),[e[0],e[1],e[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${e.length}D.`)}const B0=F({eye_:tE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eE(n){const e={x:$(n,"x","floor","float32")};return R.runKernel(ka,e)}const Yu=F({floor_:eE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nE(n,t,e=0,s=0){const r=$(n,"x","gather"),i=$(t,"indices","gather","int32"),o={x:r,indices:i},a={axis:e,batchDims:s};return R.runKernel(ou,o,a)}const Yp=F({gather_:nE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sE(n,t){let e=$(n,"a","greater","string_or_numeric"),s=$(t,"b","greater","string_or_numeric");[e,s]=ue(e,s),Ct(e.shape,s.shape);const r={a:e,b:s};return R.runKernel(au,r)}const Cn=F({greater_:sE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rE(n,t){let e=$(n,"a","greaterEqual","string_or_numeric"),s=$(t,"b","greaterEqual","string_or_numeric");[e,s]=ue(e,s),Ct(e.shape,s.shape);const r={a:e,b:s};return R.runKernel(Ta,r)}const li=F({greaterEqual_:rE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iE(n){const e={input:$(n,"input","imag")};return R.runKernel(Cp,e)}const Jp=F({imag_:iE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oE(n){const e={x:$(n,"x","isFinite")};return R.runKernel(Ea,e)}const aE=F({isFinite_:oE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lE(n){const e={x:$(n,"x","isInf")};return R.runKernel(Ra,e)}const cE=F({isInf_:lE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uE(n){const e={x:$(n,"x","isNaN")};return R.runKernel(Da,e)}const hE=F({isNaN_:uE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dE(n,t=.2){const s={x:$(n,"x","leakyRelu")},r={alpha:t};return R.runKernel(lu,s,r)}const Zp=F({leakyRelu_:dE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pE(n,t){let e=$(n,"a","less","string_or_numeric"),s=$(t,"b","less","string_or_numeric");[e,s]=ue(e,s),Ct(e.shape,s.shape);const r={a:e,b:s};return R.runKernel(cu,r)}const gc=F({less_:pE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fE(n,t){let e=$(n,"a","lessEqual","string_or_numeric"),s=$(t,"b","lessEqual","string_or_numeric");[e,s]=ue(e,s),Ct(e.shape,s.shape);const r={a:e,b:s};return R.runKernel(uu,r)}const oo=F({lessEqual_:fE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gE(n,t=5,e=1,s=1,r=.5){const i=$(n,"x","localResponseNormalization");S(i.rank===4||i.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${i.rank}.`),S(Gi(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let o=i,a=!1;i.rank===3&&(a=!0,o=A(i,[1,i.shape[0],i.shape[1],i.shape[2]]));const l={x:o},c={depthRadius:t,bias:e,alpha:s,beta:r},u=R.runKernel(fu,l,c);return a?A(u,[u.shape[1],u.shape[2],u.shape[3]]):u}const mE=F({localResponseNormalization_:gE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xE(n){const e={x:$(n,"x","log","float32")};return R.runKernel(Aa,e)}const ws=F({log_:xE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yE(n){const e={x:$(n,"x","log1p")};return R.runKernel(Fa,e)}const L0=F({log1p_:yE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bE(n,t){S(td(n),()=>"The f passed in variableGrads(f) must be a function"),S(t==null||Array.isArray(t)&&t.every(c=>c instanceof dc),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const e=t!=null;if(!e){t=[];for(const c in R.registeredVariables)t.push(R.registeredVariables[c])}const s=e?t.filter(c=>!c.trainable):null,r=t.length;t=t.filter(c=>c.trainable),S(t.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${r} variables is trainable.`);const i=!0,{value:o,grads:a}=R.gradients(n,t,null,i);S(a.some(c=>c!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),S(o.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${o.rank} tensor`);const l={};return t.forEach((c,u)=>{a[u]!=null&&(l[c.name]=a[u])}),s!=null&&s.forEach(c=>l[c.name]=null),{value:o,grads:l}}function Ki(n){return R.customGrad(n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wE(n){const e={x:$(n,"x","neg")};return R.runKernel(Cu,e)}const ce=F({neg_:wE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CE(n){const e={x:$(n,"x","softplus")};return R.runKernel(Ya,e)}const il=F({softplus_:CE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _E(n){const t=$(n,"x","logSigmoid");return Ki(s=>({value:ce(il(ce(s))),gradFunc:o=>E(o,io(ce(s)))}))(t)}const SE=F({logSigmoid_:_E});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IE(n,t){let e=$(n,"a","sub"),s=$(t,"b","sub");[e,s]=ue(e,s);const r={a:e,b:s};return R.runKernel(Qa,r)}const yt=F({sub_:IE});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vE(n,t=-1){const e=$(n,"logits","logSoftmax");if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${e.rank} and axis was ${t}`);return Ki((r,i)=>{const a=Zn(r,t,!0),l=yt(r,a),c=yt(rt(l,"float32"),ws(pt(bs(l),t,!0)));return i([c]),{value:c,gradFunc:(h,d)=>{const[p]=d,f=!0,m=bs(p);return yt(h,E(pt(h,t,f),m))}}})(e)}const V0=F({logSoftmax_:vE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kE(n,t=null,e=!1){const s=$(n,"x","logSumExp"),r=$t(t,s.shape),i=Zn(s,r,!0),o=yt(s,i),a=bs(o),l=pt(a,r),c=ws(l),u=Y(A(i,c.shape),c);if(e){const h=xe(u.shape,r);return A(u,h)}return u}const z0=F({logSumExp_:kE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $E(n,t){const e=$(n,"a","logicalAnd","bool"),s=$(t,"b","logicalAnd","bool");Ct(e.shape,s.shape);const r={a:e,b:s};return R.runKernel(hu,r)}const Rs=F({logicalAnd_:$E});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TE(n){const e={x:$(n,"x","logicalNot","bool")};return R.runKernel(du,e)}const Qp=F({logicalNot_:TE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NE(n,t){const e=$(n,"a","logicalOr","bool"),s=$(t,"b","logicalOr","bool");Ct(e.shape,s.shape);const r={a:e,b:s};return R.runKernel(pu,r)}const U0=F({logicalOr_:NE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EE(n,t){const e=$(n,"a","logicalXor","bool"),s=$(t,"b","logicalXor","bool");return Ct(e.shape,s.shape),Rs(U0(n,t),Qp(Rs(n,t)))}const RE=F({logicalXor_:EE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DE(n,t,e,s,r){const i=$(n,"x","maxPool"),o=1;let a=i,l=!1;i.rank===3&&(l=!0,a=A(i,[1,i.shape[0],i.shape[1],i.shape[2]])),S(a.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${a.rank}.`),S(Ve(e,o),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${e} and dilations '${o}'`),nn("maxPool",s,r);const c={x:a},u={filterSize:t,strides:e,pad:s,dimRoundingMode:r},h=R.runKernel(mu,c,u);return l?A(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const tf=F({maxPool_:DE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AE(n,t=[1,1,1],e,s,r,i="NDHWC"){const o=$(n,"x","maxPool3d");let a=o,l=!1;o.rank===4&&(l=!0,a=A(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),S(a.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${a.rank}.`),S(i==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`),nn("maxPool3d",s,r);const c={x:a},u={filterSize:t,strides:e,pad:s,dimRoundingMode:r,dataFormat:i},h=R.runKernel(xu,c,u);return l?A(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const FE=F({maxPool3d_:AE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ME(n,t){let e=$(n,"a","maximum"),s=$(t,"b","maximum");[e,s]=ue(e,s),e.dtype==="bool"&&(e=rt(e,"int32"),s=rt(s,"int32")),Ct(e.shape,s.shape);const r={a:e,b:s};return R.runKernel(Ma,r)}const xr=F({maximum_:ME});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PE(n,t=null,e=!1){const r={x:$(n,"x","mean")},i={axis:t,keepDims:e};return R.runKernel(yu,r,i)}const me=F({mean_:PE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $e(n,t="float32"){if(Ms(n),t==="complex64"){const s=$e(n,"float32"),r=$e(n,"float32");return Xr(s,r)}const e=Be(W(n),t);return R.makeTensor(e,n,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yr(n,t="float32"){if(Ms(n),t==="complex64"){const s=yr(n,"float32"),r=$e(n,"float32");return Xr(s,r)}const e=Kd(W(n),t);return R.makeTensor(e,n,t)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OE(n,t){let e=$(n,"a","minimum"),s=$(t,"b","minimum");[e,s]=ue(e,s),e.dtype==="bool"&&(e=rt(e,"int32"),s=rt(s,"int32")),Ct(e.shape,s.shape);const r={a:e,b:s};return R.runKernel(Pa,r)}const Yo=F({minimum_:OE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BE(n,t,e){S(e==="reflect"||e==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${e}.`);const s=$(n,"x","mirrorPad");if(s.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");S(t.length===s.rank,()=>`Padding doesn't match input. Must be ${s.rank}. Got ${t.length}.`);const r=e==="reflect"?1:0;for(let a=0;a<s.rank;a++)S(t[a].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),S(t[a][0]>=0&&t[a][0]<=s.shape[a]-r&&t[a][1]>=0&&t[a][1]<=s.shape[a]-r,()=>`Padding in dimension ${a} cannot be greater than or equal to ${s.shape[a]-r} or less than 0 for input of shape ${s.shape}`);const i={paddings:t,mode:e},o={x:s};return R.runKernel(wu,o,i)}const LE=F({mirrorPad_:BE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VE(n,t){let e=$(n,"a","mod"),s=$(t,"b","mod");[e,s]=ue(e,s);const r={a:e,b:s};return R.runKernel(Oa,r)}const zE=F({mod_:VE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UE(n,t=null,e=!1){n=$(n,"x","moments");const s=$t(t,n.shape),r=me(n,s,e);let i=r.shape;e||(i=xe(r.shape,s));const o=Jt(yt(rt(n,"float32"),A(r,i))),a=me(o,s,e);return{mean:r,variance:a}}const ef=F({moments_:UE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WE(n,t){let e=$(n,"a","notEqual","string_or_numeric"),s=$(t,"b","notEqual","string_or_numeric");[e,s]=ue(e,s),Ct(e.shape,s.shape);const r={a:e,b:s};return R.runKernel(_u,r)}const mc=F({notEqual_:WE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GE(n,t,e=1,s=0,r="int32"){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const o={indices:$(n,"indices","oneHot","int32")},a={dtype:r,depth:t,onValue:e,offValue:s};return R.runKernel(Iu,o,a)}const W0=F({oneHot_:GE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HE(n){const e={x:$(n,"x","onesLike")};return R.runKernel(Su,e)}const Mn=F({onesLike_:HE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XE(n,t,e=0){const s=$(n,"x","pad");if(s.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const r={paddings:t,constantValue:e},i={x:s};return R.runKernel(ku,i,r)}const nf=F({pad_:XE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jE(n,t,e){const s=$(n,"x","spaceToBatchND");S(s.rank>=1+t.length,()=>`input rank ${s.rank} should be > than [blockShape] ${t.length}`),S(e.length===t.length,()=>`paddings.shape[0] ${e.length} must be equal to [blockShape] ${t.length}`),S(s.shape.reduce((o,a,l)=>l>0&&l<=t.length?o&&(a+e[l-1][0]+e[l-1][1])%t[l-1]===0:o,!0),()=>`input spatial dimensions ${s.shape.slice(1)} with paddings ${e.toString()} must be divisible by blockShapes ${t.toString()}`);const r={x:s},i={blockShape:t,paddings:e};return R.runKernel(Pu,r,i)}const sf=F({spaceToBatchND_:jE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qE(n,t,e,s,r,i,o){r==null&&(r=[1,1]),i==null&&(i=1),s===0&&(s="valid");const a=$(n,"x","maxPool");let l=a,c=!1;a.rank===3&&(c=!0,l=A(a,[1,a.shape[0],a.shape[1],a.shape[2]])),S(Ve(i,r),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${i} and dilations '${r}'`);const u=Pn(l.shape,t,i,r,s),h=[u.dilationHeight,u.dilationWidth];let d;s==="same"?d=YE([u.filterHeight,u.filterWidth],h):d=[[0,0],[0,0]];const p=h[0]===1&&h[1]===1,[f,m]=KE([u.inHeight,u.inWidth],h,d),g=p?s:"valid",x=p?l:sf(l,h,f),w=(e==="avg"?()=>Gp(x,t,i,g,o):()=>tf(x,t,i,g,o))(),b=p?w:Hp(w,h,m);return c?A(b,[b.shape[1],b.shape[2],b.shape[3]]):b}function KE(n,t,e){const s=e.map(u=>u[0]),r=e.map(u=>u[1]),i=n.concat(s,r),o=t.map((u,h)=>(u-i[h]%u)%u),a=r.map((u,h)=>u+o[h]),l=t.map((u,h)=>[s[h],a[h]]),c=t.map((u,h)=>[0,o[h]]);return[l,c]}function YE(n,t){const s=n.map((o,a)=>o+(o-1)*(t[a]-1)).map(o=>o-1),r=s.map(o=>Math.floor(o/2)),i=s.map((o,a)=>o-r[a]);return s.map((o,a)=>[r[a],i[a]])}const JE=F({pool_:qE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZE(n,t){const e=$(n,"x","prelu"),s=$(t,"alpha","prelu"),r={x:e,alpha:s};return R.runKernel($u,r)}const rf=F({prelu_:ZE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QE(n,t=null,e=!1){let s=$(n,"x","prod");s.dtype==="bool"&&(s=rt(s,"int32"));const r={x:s},i={axis:t,keepDims:e};return R.runKernel(Tu,r,i)}const t2=F({prod_:QE});var of={exports:{}};of.exports;(function(n){(function(t,e,s){function r(l){var c=this,u=a();c.next=function(){var h=2091639*c.s0+c.c*23283064365386963e-26;return c.s0=c.s1,c.s1=c.s2,c.s2=h-(c.c=h|0)},c.c=1,c.s0=u(" "),c.s1=u(" "),c.s2=u(" "),c.s0-=u(l),c.s0<0&&(c.s0+=1),c.s1-=u(l),c.s1<0&&(c.s1+=1),c.s2-=u(l),c.s2<0&&(c.s2+=1),u=null}function i(l,c){return c.c=l.c,c.s0=l.s0,c.s1=l.s1,c.s2=l.s2,c}function o(l,c){var u=new r(l),h=c&&c.state,d=u.next;return d.int32=function(){return u.next()*4294967296|0},d.double=function(){return d()+(d()*2097152|0)*11102230246251565e-32},d.quick=d,h&&(typeof h=="object"&&i(h,u),d.state=function(){return i(u,{})}),d}function a(){var l=4022871197,c=function(u){u=String(u);for(var h=0;h<u.length;h++){l+=u.charCodeAt(h);var d=.02519603282416938*l;l=d>>>0,d-=l,d*=l,l=d>>>0,d-=l,l+=d*4294967296}return(l>>>0)*23283064365386963e-26};return c}e&&e.exports?e.exports=o:s&&s.amd?s(function(){return o}):this.alea=o})(ii,n,!1)})(of);var e2=of.exports,af={exports:{}};af.exports;(function(n){(function(t,e,s){function r(a){var l=this,c="";l.x=0,l.y=0,l.z=0,l.w=0,l.next=function(){var h=l.x^l.x<<11;return l.x=l.y,l.y=l.z,l.z=l.w,l.w^=l.w>>>19^h^h>>>8},a===(a|0)?l.x=a:c+=a;for(var u=0;u<c.length+64;u++)l.x^=c.charCodeAt(u)|0,l.next()}function i(a,l){return l.x=a.x,l.y=a.y,l.z=a.z,l.w=a.w,l}function o(a,l){var c=new r(a),u=l&&l.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,p=(c.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=c.next,h.quick=h,u&&(typeof u=="object"&&i(u,c),h.state=function(){return i(c,{})}),h}e&&e.exports?e.exports=o:s&&s.amd?s(function(){return o}):this.xor128=o})(ii,n,!1)})(af);var n2=af.exports,lf={exports:{}};lf.exports;(function(n){(function(t,e,s){function r(a){var l=this,c="";l.next=function(){var h=l.x^l.x>>>2;return l.x=l.y,l.y=l.z,l.z=l.w,l.w=l.v,(l.d=l.d+362437|0)+(l.v=l.v^l.v<<4^(h^h<<1))|0},l.x=0,l.y=0,l.z=0,l.w=0,l.v=0,a===(a|0)?l.x=a:c+=a;for(var u=0;u<c.length+64;u++)l.x^=c.charCodeAt(u)|0,u==c.length&&(l.d=l.x<<10^l.x>>>4),l.next()}function i(a,l){return l.x=a.x,l.y=a.y,l.z=a.z,l.w=a.w,l.v=a.v,l.d=a.d,l}function o(a,l){var c=new r(a),u=l&&l.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,p=(c.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=c.next,h.quick=h,u&&(typeof u=="object"&&i(u,c),h.state=function(){return i(c,{})}),h}e&&e.exports?e.exports=o:s&&s.amd?s(function(){return o}):this.xorwow=o})(ii,n,!1)})(lf);var s2=lf.exports,cf={exports:{}};cf.exports;(function(n){(function(t,e,s){function r(a){var l=this;l.next=function(){var u=l.x,h=l.i,d,p;return d=u[h],d^=d>>>7,p=d^d<<24,d=u[h+1&7],p^=d^d>>>10,d=u[h+3&7],p^=d^d>>>3,d=u[h+4&7],p^=d^d<<7,d=u[h+7&7],d=d^d<<13,p^=d^d<<9,u[h]=p,l.i=h+1&7,p};function c(u,h){var d,p=[];if(h===(h|0))p[0]=h;else for(h=""+h,d=0;d<h.length;++d)p[d&7]=p[d&7]<<15^h.charCodeAt(d)+p[d+1&7]<<13;for(;p.length<8;)p.push(0);for(d=0;d<8&&p[d]===0;++d);for(d==8?p[7]=-1:p[d],u.x=p,u.i=0,d=256;d>0;--d)u.next()}c(l,a)}function i(a,l){return l.x=a.x.slice(),l.i=a.i,l}function o(a,l){a==null&&(a=+new Date);var c=new r(a),u=l&&l.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,p=(c.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=c.next,h.quick=h,u&&(u.x&&i(u,c),h.state=function(){return i(c,{})}),h}e&&e.exports?e.exports=o:s&&s.amd?s(function(){return o}):this.xorshift7=o})(ii,n,!1)})(cf);var r2=cf.exports,uf={exports:{}};uf.exports;(function(n){(function(t,e,s){function r(a){var l=this;l.next=function(){var u=l.w,h=l.X,d=l.i,p,f;return l.w=u=u+1640531527|0,f=h[d+34&127],p=h[d=d+1&127],f^=f<<13,p^=p<<17,f^=f>>>15,p^=p>>>12,f=h[d]=f^p,l.i=d,f+(u^u>>>16)|0};function c(u,h){var d,p,f,m,g,x=[],y=128;for(h===(h|0)?(p=h,h=null):(h=h+"\0",p=0,y=Math.max(y,h.length)),f=0,m=-32;m<y;++m)h&&(p^=h.charCodeAt((m+32)%h.length)),m===0&&(g=p),p^=p<<10,p^=p>>>15,p^=p<<4,p^=p>>>13,m>=0&&(g=g+1640531527|0,d=x[m&127]^=p+g,f=d==0?f+1:0);for(f>=128&&(x[(h&&h.length||0)&127]=-1),f=127,m=4*128;m>0;--m)p=x[f+34&127],d=x[f=f+1&127],p^=p<<13,d^=d<<17,p^=p>>>15,d^=d>>>12,x[f]=p^d;u.w=g,u.X=x,u.i=f}c(l,a)}function i(a,l){return l.i=a.i,l.w=a.w,l.X=a.X.slice(),l}function o(a,l){a==null&&(a=+new Date);var c=new r(a),u=l&&l.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,p=(c.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=c.next,h.quick=h,u&&(u.X&&i(u,c),h.state=function(){return i(c,{})}),h}e&&e.exports?e.exports=o:s&&s.amd?s(function(){return o}):this.xor4096=o})(ii,n,!1)})(uf);var i2=uf.exports,hf={exports:{}};hf.exports;(function(n){(function(t,e,s){function r(a){var l=this,c="";l.next=function(){var h=l.b,d=l.c,p=l.d,f=l.a;return h=h<<25^h>>>7^d,d=d-p|0,p=p<<24^p>>>8^f,f=f-h|0,l.b=h=h<<20^h>>>12^d,l.c=d=d-p|0,l.d=p<<16^d>>>16^f,l.a=f-h|0},l.a=0,l.b=0,l.c=-1640531527,l.d=1367130551,a===Math.floor(a)?(l.a=a/4294967296|0,l.b=a|0):c+=a;for(var u=0;u<c.length+20;u++)l.b^=c.charCodeAt(u)|0,l.next()}function i(a,l){return l.a=a.a,l.b=a.b,l.c=a.c,l.d=a.d,l}function o(a,l){var c=new r(a),u=l&&l.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,p=(c.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=c.next,h.quick=h,u&&(typeof u=="object"&&i(u,c),h.state=function(){return i(c,{})}),h}e&&e.exports?e.exports=o:s&&s.amd?s(function(){return o}):this.tychei=o})(ii,n,!1)})(hf);var o2=hf.exports,G0={exports:{}};const a2={},l2=Object.freeze(Object.defineProperty({__proto__:null,default:a2},Symbol.toStringTag,{value:"Module"})),c2=Yk(l2);(function(n){(function(t,e,s){var r=256,i=6,o=52,a="random",l=s.pow(r,i),c=s.pow(2,o),u=c*2,h=r-1,d;function p(b,C,_){var I=[];C=C==!0?{entropy:!0}:C||{};var v=x(g(C.entropy?[b,w(e)]:b??y(),3),I),k=new f(I),T=function(){for(var D=k.g(i),P=l,B=0;D<c;)D=(D+B)*r,P*=r,B=k.g(1);for(;D>=u;)D/=2,P/=2,B>>>=1;return(D+B)/P};return T.int32=function(){return k.g(4)|0},T.quick=function(){return k.g(4)/4294967296},T.double=T,x(w(k.S),e),(C.pass||_||function(D,P,B,V){return V&&(V.S&&m(V,k),D.state=function(){return m(k,{})}),B?(s[a]=D,P):D})(T,v,"global"in C?C.global:this==s,C.state)}function f(b){var C,_=b.length,I=this,v=0,k=I.i=I.j=0,T=I.S=[];for(_||(b=[_++]);v<r;)T[v]=v++;for(v=0;v<r;v++)T[v]=T[k=h&k+b[v%_]+(C=T[v])],T[k]=C;(I.g=function(D){for(var P,B=0,V=I.i,L=I.j,z=I.S;D--;)P=z[V=h&V+1],B=B*r+z[h&(z[V]=z[L=h&L+P])+(z[L]=P)];return I.i=V,I.j=L,B})(r)}function m(b,C){return C.i=b.i,C.j=b.j,C.S=b.S.slice(),C}function g(b,C){var _=[],I=typeof b,v;if(C&&I=="object")for(v in b)try{_.push(g(b[v],C-1))}catch{}return _.length?_:I=="string"?b:b+"\0"}function x(b,C){for(var _=b+"",I,v=0;v<_.length;)C[h&v]=h&(I^=C[h&v]*19)+_.charCodeAt(v++);return w(C)}function y(){try{var b;return d&&(b=d.randomBytes)?b=b(r):(b=new Uint8Array(r),(t.crypto||t.msCrypto).getRandomValues(b)),w(b)}catch{var C=t.navigator,_=C&&C.plugins;return[+new Date,t,_,t.screen,w(e)]}}function w(b){return String.fromCharCode.apply(0,b)}if(x(s.random(),e),n.exports){n.exports=p;try{d=c2}catch{}}else s["seed"+a]=p})(typeof self<"u"?self:ii,[],Math)})(G0);var u2=G0.exports,h2=e2,d2=n2,p2=s2,f2=r2,g2=i2,m2=o2,ci=u2;ci.alea=h2;ci.xor128=d2;ci.xorwow=p2;ci.xorshift7=f2;ci.xor4096=g2;ci.tychei=m2;var df=ci;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class H0{constructor(t,e,s,r,i){this.mean=t,this.stdDev=e,this.dtype=s,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);const o=i||Math.random();this.random=df.alea(o.toString())}nextValue(){if(!isNaN(this.nextVal)){const r=this.nextVal;return this.nextVal=NaN,r}let t,e,s=!1;for(;!s;){let r,i,o;do r=2*this.random()-1,i=2*this.random()-1,o=r*r+i*i;while(o>=1||o===0);const a=Math.sqrt(-2*Math.log(o)/o);t=this.mean+this.stdDev*r*a,e=this.mean+this.stdDev*i*a,(!this.truncated||this.isValidTruncated(t))&&(s=!0)}return(!this.truncated||this.isValidTruncated(e))&&(this.nextVal=this.convertValue(e)),this.convertValue(t)}convertValue(t){return this.dtype==null||this.dtype==="float32"?t:Math.round(t)}isValidTruncated(t){return t<=this.upper&&t>=this.lower}}class x2{constructor(t=0,e=1,s,r){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=t,this.range=e-t,this.dtype=s,r==null&&(r=Math.random()),typeof r=="number"&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${t} - ${e} <= 1 and dtype is not float`);this.random=df.alea(r)}convertValue(t){return this.canReturnFloat()?t:Math.round(t)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y2(n,t=0,e=1,s,r){if(Ms(n),s!=null&&s==="bool")throw new Error(`Unsupported data type ${s}`);const i=new H0(t,e,s,!1,r),o=kt(n,s);for(let a=0;a<o.values.length;a++)o.values[a]=i.nextValue();return o.toTensor()}const b2=F({randomNormal_:y2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w2(n,t=0,e=1,s="float32",r){Ms(n);const i=kt(n,s),o=new x2(t,e,null,r);for(let a=0;a<i.values.length;a++)i.values[a]=o.nextValue();return i.toTensor()}const ol=F({randomUniform_:w2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jo(n,t,e=1,s="float32"){if(e===0)throw new Error("Cannot have a step of zero");const r={start:n,stop:t,step:e,dtype:s};return R.runKernel(Tp,{},r)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C2(n){const e={input:$(n,"input","real")};return R.runKernel(Np,e)}const xc=F({real_:C2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _2(n){const e={x:$(n,"x","reciprocal")};return R.runKernel(Va,e)}const S2=F({reciprocal_:_2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I2(n){const e={x:$(n,"x","relu")};return R.runKernel(za,e)}const ui=F({relu_:I2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v2(n){const e={x:$(n,"x","relu6")};return R.runKernel(Ua,e)}const X0=F({relu6_:v2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k2(n,t){const s={x:$(n,"x","reverse")},r={dims:t};return R.runKernel(Du,s,r)}const Qr=F({reverse_:k2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $2(n){const e={x:$(n,"x","round")};return R.runKernel(Wa,e)}const j0=F({round_:$2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T2(n){const e={x:$(n,"x","rsqrt","float32")};return R.runKernel(Ga,e)}const q0=F({rsqrt_:T2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N2(n){const e={x:$(n,"x","selu")};return R.runKernel(Ha,e)}const K0=F({selu_:N2});function E2(n,t,e,s,r,i=[1,1],o="NHWC"){const a=$(n,"x","separableConv2d"),l=$(t,"depthwiseFilter","separableConv2d"),c=$(e,"pointwiseFilter","separableConv2d");let u=a,h=!1;if(a.rank===3&&(h=!0,u=A(a,[1,a.shape[0],a.shape[1],a.shape[2]])),o==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");S(u.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${u.rank}.`),S(l.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`),S(c.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`),S(c.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${c.shape[0]}.`),S(c.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${c.shape[1]}.`);const d=l.shape[2],p=l.shape[3];S(c.shape[2]===d*p,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*p}, but got ${c.shape[2]}.`);const f=qp(u,l,s,r,o,i),g=Jr(f,c,1,"valid",o);return h?A(g,[g.shape[1],g.shape[2],g.shape[3]]):g}const Y0=F({separableConv2d_:E2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R2(n){const e={x:$(n,"x","sign")};return R.runKernel(qa,e)}const D2=F({sign_:R2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A2(n){const e={x:$(n,"x","sin","float32")};return R.runKernel(Xa,e)}const J0=F({sin_:A2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F2(n){const e={x:$(n,"x","sinh")};return R.runKernel(ja,e)}const Z0=F({sinh_:F2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function M2(n,t,e){const s=$(n,"x","slice1d");return S(s.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${s.rank} tensor`),qt(s,[t],[e])}const pf=F({slice1d_:M2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P2(n,t,e){const s=$(n,"x","slice2d");return S(s.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${s.rank} tensor`),qt(s,t,e)}const Q0=F({slice2d_:P2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O2(n,t,e){const s=$(n,"x","slice3d");return S(s.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${s.rank} tensor`),qt(s,t,e)}const ff=F({slice3d_:O2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B2(n,t,e){const s=$(n,"x","slice4d");return S(s.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${s.rank} tensor`),qt(s,t,e)}const yc=F({slice4d_:B2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L2(n,t=-1){const e=$(n,"logits","softmax","float32");if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${e.rank} and dim was ${t}`);const s={logits:e},r={dim:t};return R.runKernel(Bu,s,r)}const gf=F({softmax_:L2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V2(n){S(n.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${n.dtype}.`);const t={input:n};return R.runKernel(xp,t)}const tw=F({fft_:V2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z2(n){S(n.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${n.dtype}.`);const t={input:n};return R.runKernel(wp,t)}const yd=F({ifft_:z2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U2(n){const t=n.shape[n.shape.length-1],e=n.size/t;let s;if(t<=2){const r=A(n,[e,t]);s=yd(r)}else{const r=[e,2*(t-1)],i=A(xc(n),[e,t]),o=A(Jp(n),[e,t]),a=Qr(qt(i,[0,1],[e,t-2]),1),l=E(Qr(qt(o,[0,1],[e,t-2]),1),Mt(-1)),c=Qe([i,a],1),u=Qe([o,l],1),h=A(Xr(c,u),[r[0],r[1]]);s=yd(h)}if(s=xc(s),n.rank===3&&n.shape[0]!==0){const r=s,i=n.shape[0];s=A(s,[i,s.shape[0]/i,s.shape[1]]),r.dispose()}return s}const W2=F({irfft_:U2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G2(n,t,e=0){const r={x:$(n,"x","split")},i={numOrSizeSplits:t,axis:e};return R.runKernel(Ou,r,i)}const bn=F({split_:G2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H2(n,t){S(n.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${n.dtype}`);let e=n.shape[n.shape.length-1];const s=n.size/e;let r;if(t!=null&&t<e){const f=n.shape.map(g=>0),m=n.shape.map(g=>g);m[n.shape.length-1]=t,r=qt(n,f,m),e=t}else if(t!=null&&t>e){const f=n.shape.map(m=>m);f[n.shape.length-1]=t-e,r=Qe([n,$e(f)],n.shape.length-1),e=t}else r=n;const i=Rt(r),o=A(Xr(r,i),[s,e]),a=tw(o),l=Math.floor(e/2)+1,c=xc(a),u=Jp(a),h=bn(c,[l,e-l],c.shape.length-1),d=bn(u,[l,e-l],u.shape.length-1),p=r.shape.slice();return p[r.shape.length-1]=l,A(Xr(h[0],d[0]),p)}const X2=F({rfft_:H2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j2(n,t){let e=$(n,"a","squaredDifference"),s=$(t,"b","squaredDifference");[e,s]=ue(e,s),Ct(e.shape,s.shape);const r={a:e,b:s},i={};return R.runKernel(Za,r,i)}const q2=F({squaredDifference_:j2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K2(n,t){const e=$(n,"x","squeeze","string_or_numeric");return A(e,dr(e.shape,t).newShape)}const al=F({squeeze_:K2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y2(n,t=0){const e=w0(n,"tensors","stack","string_or_numeric");S(e.length>=1,()=>"Pass at least one tensor to tf.stack"),e.length>0&&S(t<=e[0].rank,()=>"Axis must be <= rank of the tensor");const s=e,r={axis:t};return R.runKernel(vu,s,r)}const Ds=F({stack_:Y2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J2(n,t=0){const s={x:$(n,"x","step")},r={alpha:t};return R.runKernel(sl,s,r)}const ll=F({step_:J2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z2(n,t,e,s,r=0,i=0,o=0,a=0,l=0){const u={x:$(n,"x","stridedSlice","string_or_numeric")},h={begin:t,end:e,strides:s,beginMask:r,endMask:i,ellipsisMask:o,newAxisMask:a,shrinkAxisMask:l};return R.runKernel(Fp,u,h)}const Q2=F({stridedSlice_:Z2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tR(n){const e={x:$(n,"x","tan","float32")};return R.runKernel(tl,e)}const eR=F({tan_:tR});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ln(n,t){kb(n);const e=Wu(n,t);if(e.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Gu(n,null,e,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yl(n,t,e){if(kb(n),t!=null&&t.length!==2)throw new Error("tensor2d() requires shape to have two numbers");const s=Wu(n,e);if(s.length!==2&&s.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Gu(n,t,s,e)}function ew(n,t,e){const s=t.rank>1?t.shape[t.rank-1]:1,r=t.rank>1?t.rank-1:1,i=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${e.shape}, indices.shape: ${t.shape}, shape: ${n}, sliceDim: ${s}, and batchDim: ${r}.`;if(e.rank<r)throw new Error(i+` update.rank < ${r}. `);if(n.length<s+(e.rank-r))throw new Error(i+` Output shape length < ${s+(e.rank-r)}`);if(e.rank!==r+n.length-s)throw new Error(i+` update.rank != ${r+n.length-s}`);for(let o=0;o<r;++o)if(e.shape[o]!==t.shape[o])throw new Error(i+` updates.shape[${o}] (${e.shape[o]}) != indices.shape[${o}] (${t.shape[o]}).`);for(let o=0;o<e.rank-r;++o)if(e.shape[o+r]!==n[o+s])throw new Error(i+` updates.shape[${o+r}] (${e.shape[o+r]}) != shape[${o+r}] (${n[o+r]})`)}function nR(n,t,e){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(n.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${n.rank}.`);if(t.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(e.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${e}`);if(e.length===0){if(t.size===0)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(n.size===0)throw new Error(`Updates specified for empty output. updates shape: ${n.shape}`)}ew(e,t,n)}function hi(n,t,e){const s=t.shape.length,r=s>1?t.shape[s-1]:1,i=e.length;let o=1;for(let h=r;h<i;++h)o*=e[h];const a=r<1?1:r,l=W(t.shape)/a,c=[...ht(e.slice(0,r)),1],u=W(e);return{sliceRank:r,numUpdates:l,sliceSize:o,strides:c,outputSize:u}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sR(n,t=1,e=!0){const s=$(n,"x","topk");if(s.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");const r=s.shape[s.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>r)throw new Error(`'k' passed to topk() must be <= the last dimension (${r}) but got ${t}`);const i={x:s},o={k:t,sorted:e},[a,l]=R.runKernel(Mp,i,o);return{values:a,indices:l}}const rR=F({topk_:sR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iR(n,t=0,e=1,s,r){if(Ms(n),s!=null&&s==="bool")throw new Error("Unsupported data type $ { dtype }");const i=new H0(t,e,s,!0,r),o=kt(n,s);for(let a=0;a<o.values.length;a++)o.values[a]=i.nextValue();return o.toTensor()}const nw=F({truncatedNormal_:iR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oR(n,t=0){const e=$(n,"x","unique","string_or_numeric");S(e.rank>0,()=>"The input tensor must be at least 1D");const s={x:e},r={axis:t},[i,o]=R.runKernel(Op,s,r);return{values:i,indices:o}}const aR=F({unique_:oR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lR(n,t,e){const s=$(n,"x","unsortedSegmentSum"),r=$(t,"segmentIds","unsortedSegmentSum","int32");S(Gi(e),()=>"numSegments must be of dtype int");const i={x:s,segmentIds:r},o={numSegments:e};return R.runKernel(Vu,i,o)}const sw=F({unsortedSegmentSum_:lR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cR(n,t=0){const e=$(n,"x","unstack","string_or_numeric");S(t>=-e.shape.length&&t<e.shape.length,()=>`Axis = ${t} is not in [-${e.shape.length}, ${e.shape.length})`);const s={value:e},r={axis:t};return R.runKernel(Lu,s,r)}const ti=F({unstack_:cR});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uR(n,t=!0,e,s){return R.makeVariable(n,t,e,s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rw(n,t){const e=[];for(let i=0;i<t.length;i++)t[i]&&e.push(i);const s=kt(n,"int32"),r=kt([e.length,n.length],"int32");for(let i=0;i<e.length;i++){const o=s.indexToLoc(e[i]),a=i*n.length;r.values.set(o,a)}return r.toTensor()}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hR(n,t,e){const s=$(n,"x","transpose");if(t==null&&(t=s.shape.map((o,a)=>a).reverse()),S(s.rank===t.length,()=>`Error in transpose: rank of input ${s.rank} must match length of perm ${t}.`),t.forEach(o=>{S(o>=0&&o<s.rank,()=>`All entries in 'perm' must be between 0 and ${s.rank-1} but got ${t}`)}),s.rank<=1)return s.clone();const r={x:s},i={perm:t};return s.dtype==="complex64"?M(()=>{let o=xc(s),a=Jp(s);return o=R.runKernel(Bi,{x:o},i),a=R.runKernel(Bi,{x:a},i),e&&(a=ce(a)),Xr(o,a)}):R.runKernel(Bi,r,i)}const Et=F({transpose_:hR});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dR(n,t){if(t==null)return n.shape.slice();if(Pt(n.shape,t))return t;if(n.shape.length===t.length){const e=[];for(let s=0;s<n.shape.length;s++)t[s]==null&&n.shape[s]!=null?e.push(n.shape[s]):e.push(t[s]);return e}return t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pR(n,t,e,s){const r=$(n,"x","dropout");if(S(r.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${r.dtype} tensor instead.`),S(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),t===0)return n instanceof ye?r.clone():r;const i=dR(r,e),o=1-t,a=gt(Yu(Y(ol(i,0,1,"float32",s),o)),o);return E(r,a)}const fR=F({dropout_:pR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gR(n,t,e,s,r,i="NHWC",o){let a=n;n.rank===3&&(a=A(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let l=t;l.rank===3&&(l=A(t,[1,t.shape[0],t.shape[1],t.shape[2]])),S(a.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${a.shape}.`),S(l.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`),S(e.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${e}.`);const c=i==="NHWC"?a.shape[3]:a.shape[1],u=i==="NHWC"?l.shape[3]:l.shape[1];S(c===e[2],()=>`Error in conv2dDerFilter: depth of input ${c}) must match input depth in filter (${e[2]}.`),S(u===e[3],()=>`Error in conv2dDerFilter: depth of dy (${u}) must match output depth for filter (${e[3]}).`),nn("conv2dDerFilter",r,o);const h={x:a,dy:l},d={strides:s,pad:r,dataFormat:i,dimRoundingMode:o,filterShape:e};return R.runKernel(op,h,d)}const mf=F({conv2DBackpropFilter_:gR});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xf(n,t,e){if(e==null||e==="linear")return n;if(e==="relu")return E(n,ll(t));throw new Error(`Cannot compute gradient for fused activation ${e}.`)}function yf(n,t){let e=t;const s=Se(n.shape,t.shape);return s.length>0&&(e=pt(e,s)),A(e,n.shape)}function bf(n,t,e,s){if(t==="linear")return n;if(t==="relu")return ui(n);if(t==="elu")return qu(n);if(t==="relu6")return X0(n);if(t==="prelu")return rf(n,e);if(t==="leakyrelu")return Zp(n,s);if(t==="sigmoid")return io(n);throw new Error(`Unknown fused activation ${t}.`)}const wf=(n,t)=>!(n>0)||t==="linear";/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mR({x:n,filter:t,strides:e,pad:s,dataFormat:r="NHWC",dilations:i=[1,1],dimRoundingMode:o,bias:a,activation:l="linear",preluActivationWeights:c,leakyreluAlpha:u}){if(l=l||"linear",wf(R.state.gradientDepth,l)===!1){S(r==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${r} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let _=Jr(n,t,e,s,r,i,o);return a!=null&&(_=Y(_,a)),bf(_,l,c,u)}const h=$(n,"x","conv2d","float32"),d=$(t,"filter","conv2d","float32");let p=h,f=!1;h.rank===3&&(f=!0,p=A(h,[1,h.shape[0],h.shape[1],h.shape[2]])),S(p.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${p.rank}.`),S(d.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`),nn("fused conv2d",s,o);const m=r==="NHWC"?p.shape[3]:p.shape[1];S(d.shape[2]===m,()=>`Error in conv2d: depth of input (${m}) must match input depth for filter ${d.shape[2]}.`),S(Ve(e,i),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${e} and dilations '${i}'`);const g=Ae(p.shape,d.shape,e,i,s,o);let x;a!=null&&(x=$(a,"bias","fused conv2d"),[x]=ue(x,h),r==="NHWC"?Ct(g.outShape,x.shape):(S(x.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${x.shape.length}.`),S(x.shape.length===0||x.shape[0]===g.outChannels||x.shape[0]===1,()=>`Error in fused conv2d: bias shape (${x.shape}) is not compatible with the number of output channels (${g.outChannels})`)));let y;if(c!=null){const _=c.shape;if(S(_.length<=1||_.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${_.length}.`),_.length===1)S(_[0]===1||_[0]===g.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${_}) is not compatible with the number of output channels (${g.outChannels}).`);else if(_.length===3)try{Ct(_,g.outShape)}catch{const v=`Error in fused conv2d: PReLU activation weights (${_}) is not compatible with the output shape of the conv2d (${g.outShape}).`;throw Error(v)}y=$(c,"prelu weights","fused conv2d")}const w=(_,I)=>{S(r==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${r} but only NHWC is currently supported.`);const[v,k,T,D]=I,P=xf(_,T,l);S(Kr(i),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`);const B=Xp(k.shape,P,v,e,s),V=mf(k,P,v.shape,e,s),L=[B,V];if(D!=null){const z=yf(D,P);L.push(z)}return L},b={x:p,filter:d,bias:x,preluActivationWeights:y},C={strides:e,pad:s,dataFormat:r,dilations:i,dimRoundingMode:o,activation:l,leakyreluAlpha:u};return a==null?Ki((I,v,k)=>{let T=R.runKernel(cc,b,C);return k([v,I,T]),f&&(T=A(T,[T.shape[1],T.shape[2],T.shape[3]])),{value:T,gradFunc:w}})(p,d):Ki((I,v,k,T)=>{let D=R.runKernel(cc,b,C);return T([v,I,D,k]),f&&(D=A(D,[D.shape[1],D.shape[2],D.shape[3]])),{value:D,gradFunc:w}})(p,d,x)}const xR=F({fusedConv2d_:mR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yR(n,t,e,s,r,i=[1,1],o){let a=n;n.rank===3&&(a=A(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let l=t;l.rank===3&&(l=A(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const c={x:a,dy:l},u={strides:s,pad:r,dimRoundingMode:o,dilations:i,filterShape:e};return R.runKernel(pp,c,u)}const bR=F({depthwiseConv2dNativeBackpropFilter_:yR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wR(n,t,e,s,r,i=[1,1],o){let a=t,l=!1;t.rank===3&&(l=!0,a=A(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const c={dy:a,filter:e},u={strides:s,pad:r,dimRoundingMode:o,dilations:i,inputShape:n},h=R.runKernel(fp,c,u);return l?A(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const CR=F({depthwiseConv2dNativeBackpropInput_:wR});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _R({a:n,b:t,transposeA:e=!1,transposeB:s=!1,bias:r,activation:i="linear",preluActivationWeights:o,leakyreluAlpha:a=.2}){if(wf(R.state.gradientDepth,i)===!1){let D=Ft(n,t,e,s);return r!=null&&(D=Y(D,r)),bf(D,i,o,a)}let l=$(n,"a","fused matMul"),c=$(t,"b","fused matMul");[l,c]=ue(l,c);const u=e?l.shape[l.rank-2]:l.shape[l.rank-1],h=s?c.shape[c.rank-1]:c.shape[c.rank-2],d=e?l.shape[l.rank-1]:l.shape[l.rank-2],p=s?c.shape[c.rank-2]:c.shape[c.rank-1],f=l.shape.slice(0,-2),m=c.shape.slice(0,-2),g=W(f),x=W(m);S(u===h,()=>`Error in fused matMul: inner shapes (${u}) and (${h}) of Tensors with shapes ${l.shape} and ${c.shape} and transposeA=${e} and transposeB=${s} must match.`);const w=Ct(l.shape.slice(0,-2),c.shape.slice(0,-2)).concat([d,p]),b=e?A(l,[g,u,d]):A(l,[g,d,u]),C=s?A(c,[x,p,h]):A(c,[x,h,p]);let _;r!=null&&(_=$(r,"bias","fused matMul"),[_]=ue(_,l),Ct(w,_.shape));let I;o!=null&&(I=$(o,"prelu weights","fused matMul"));const v=(D,P)=>{const[B,V,L,z]=P,H=xf(A(D,L.shape),L,i);let G,X;if(!e&&!s?(G=Ft(H,V,!1,!0),X=Ft(B,H,!0,!1)):!e&&s?(G=Ft(H,V,!1,!1),X=Ft(H,B,!0,!1)):e&&!s?(G=Ft(V,H,!1,!0),X=Ft(B,H,!1,!1)):(G=Ft(V,H,!0,!0),X=Ft(H,B,!0,!0)),r!=null){const q=yf(z,H);return[G,X,q]}else return[G,X]},k={a:b,b:C,bias:_,preluActivationWeights:I},T={transposeA:e,transposeB:s,activation:i,leakyreluAlpha:a};return r==null?Ki((P,B,V)=>{const L=R.runKernel(lc,k,T);return V([P,B,L]),{value:A(L,w),gradFunc:v}})(b,C):Ki((P,B,V,L)=>{const z=R.runKernel(lc,k,T);return L([P,B,z,V]),{value:A(z,w),gradFunc:v}})(b,C,_)}const vx=F({fusedMatMul_:_R});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SR(n,t,e,s,r="bilinear",i=0){const o=$(n,"image","cropAndResize"),a=$(t,"boxes","cropAndResize","float32"),l=$(e,"boxInd","cropAndResize","int32"),c=a.shape[0];S(o.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${o.rank}.`),S(a.rank===2&&a.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${c},4] but had shape ${a.shape}.`),S(l.rank===1&&l.shape[0]===c,()=>`Error in cropAndResize: boxInd must be have size [${c}] but had shape ${a.shape}.`),S(s.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${s.length}.`),S(s[0]>=1&&s[1]>=1,()=>`cropSize must be atleast [1,1], but was ${s}`),S(r==="bilinear"||r==="nearest",()=>`method must be bilinear or nearest, but was ${r}`);const u={image:o,boxes:a,boxInd:l},h={method:r,extrapolationValue:i,cropSize:s};return R.runKernel(up,u,h)}const IR=F({cropAndResize_:SR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vR(n){const t=$(n,"image","flipLeftRight","float32");S(t.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`);const e={image:t};return R.runKernel(bp,e,{})}const kR=F({flipLeftRight_:vR});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $R(n){const t=$(n,"image","grayscaleToRGB"),e=t.rank-1,s=t.shape[e];S(t.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`),S(s===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${s}.`);const r=new Array(t.rank);return r.fill(1,0,e),r[e]=3,Yn(t,r)}const TR=F({grayscaleToRGB_:$R});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NR(n){const t=$(n,"image","RGBToGrayscale"),e=t.rank-1,s=t.shape[e];S(t.rank>=2,()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${t.rank}.`),S(s===3,()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${s}.`);const r=t.dtype,i=rt(t,"float32"),o=ln([.2989,.587,.114]);let a;switch(t.rank){case 2:a=Io("ij,j->i",i,o);break;case 3:a=Io("ijk,k->ij",i,o);break;case 4:a=Io("ijkl,l->ijk",i,o);break;case 5:a=Io("ijklm,m->ijkl",i,o);break;case 6:a=Io("ijklmn,n->ijklm",i,o);break;default:throw new Error("Not a valid tensor rank.")}return a=Je(a,-1),rt(a,r)}const ER=F({rgbToGrayscale_:NR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RR(n,t,e=0,s=.5){const r=$(n,"image","rotateWithOffset","float32");S(r.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${r.rank}.`);const i={image:r},o={radians:t,fillValue:e,center:s};return R.runKernel(Bp,i,o)}const DR=F({rotateWithOffset_:RR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ao(n,t,e,s,r,i){s==null&&(s=.5),r==null&&(r=Number.NEGATIVE_INFINITY),i==null&&(i=0);const o=n.shape[0];return e=Math.min(e,o),S(0<=s&&s<=1,()=>`iouThreshold must be in [0, 1], but was '${s}'`),S(n.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${n.rank}'`),S(n.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${n.shape[1]}`),S(t.rank===1,()=>"scores must be a 1D tensor"),S(t.shape[0]===o,()=>`scores has incompatible shape with boxes. Expected ${o}, but was ${t.shape[0]}`),S(0<=i&&i<=1,()=>`softNmsSigma must be in [0, 1], but was '${i}'`),{maxOutputSize:e,iouThreshold:s,scoreThreshold:r,softNmsSigma:i}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AR(n,t,e,s=.5,r=Number.NEGATIVE_INFINITY){const i=$(n,"boxes","nonMaxSuppression","float32"),o=$(t,"scores","nonMaxSuppression","float32"),a=ao(i,o,e,s,r);e=a.maxOutputSize,s=a.iouThreshold,r=a.scoreThreshold;const l={maxOutputSize:e,iouThreshold:s,scoreThreshold:r};return R.runKernel(vp,{boxes:i,scores:o},l)}const FR=F({nonMaxSuppression_:AR});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MR(n,t,e){const s=PR(n,t,e),r=s<0?-(s+1):s;n.splice(r,0,t)}function PR(n,t,e){return BR(n,t,e||OR)}function OR(n,t){return n>t?1:n<t?-1:0}function BR(n,t,e){let s=0,r=n.length,i=0,o=!1;for(;s<r;){i=s+(r-s>>>1);const a=e(t,n[i]);a>0?s=i+1:(r=i,o=!a)}return o?s:-s-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cf(n,t,e,s,r){return If(n,t,e,s,r,0)}function _f(n,t,e,s,r,i){return If(n,t,e,s,r,0,!1,i,!0)}function Sf(n,t,e,s,r,i){return If(n,t,e,s,r,i,!0)}function If(n,t,e,s,r,i,o=!1,a=!1,l=!1){const c=[];for(let g=0;g<t.length;g++)t[g]>r&&c.push({score:t[g],boxIndex:g,suppressBeginIndex:0});c.sort(kx);const u=i>0?-.5/i:0,h=[],d=[];for(;h.length<e&&c.length>0;){const g=c.pop(),{score:x,boxIndex:y,suppressBeginIndex:w}=g;if(x<r)break;let b=!1;for(let C=h.length-1;C>=w;--C){const _=LR(n,y,h[C]);if(_>=s){b=!0;break}if(g.score=g.score*VR(s,u,_),g.score<=r)break}g.suppressBeginIndex=h.length,b||(g.score===x?(h.push(y),d.push(g.score)):g.score>r&&MR(c,g,kx))}const p=h.length,f=e-p;a&&f>0&&(h.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));const m={selectedIndices:h};return o&&(m.selectedScores=d),l&&(m.validOutputs=p),m}function LR(n,t,e){const s=n.subarray(t*4,t*4+4),r=n.subarray(e*4,e*4+4),i=Math.min(s[0],s[2]),o=Math.min(s[1],s[3]),a=Math.max(s[0],s[2]),l=Math.max(s[1],s[3]),c=Math.min(r[0],r[2]),u=Math.min(r[1],r[3]),h=Math.max(r[0],r[2]),d=Math.max(r[1],r[3]),p=(a-i)*(l-o),f=(h-c)*(d-u);if(p<=0||f<=0)return 0;const m=Math.max(i,c),g=Math.max(o,u),x=Math.min(a,h),y=Math.min(l,d),w=Math.max(x-m,0)*Math.max(y-g,0);return w/(p+f-w)}function VR(n,t,e){const s=Math.exp(t*e*e);return e<=n?s:0}function kx(n,t){return n.score-t.score||n.score===t.score&&t.boxIndex-n.boxIndex}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function zR(n,t,e,s=.5,r=Number.NEGATIVE_INFINITY){const i=$(n,"boxes","nonMaxSuppressionAsync"),o=$(t,"scores","nonMaxSuppressionAsync"),a=ao(i,o,e,s,r);e=a.maxOutputSize,s=a.iouThreshold,r=a.scoreThreshold;const l=await Promise.all([i.data(),o.data()]),c=l[0],u=l[1],{selectedIndices:h}=Cf(c,u,e,s,r);return i!==n&&i.dispose(),o!==t&&o.dispose(),ln(h,"int32")}const UR=zR;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WR(n,t,e,s=.5,r=Number.NEGATIVE_INFINITY,i=0){const o=$(n,"boxes","nonMaxSuppression"),a=$(t,"scores","nonMaxSuppression"),l=ao(o,a,e,s,r,i);e=l.maxOutputSize,s=l.iouThreshold,r=l.scoreThreshold,i=l.softNmsSigma;const c={boxes:o,scores:a},u={maxOutputSize:e,iouThreshold:s,scoreThreshold:r,softNmsSigma:i},h=R.runKernel($p,c,u);return{selectedIndices:h[0],selectedScores:h[1]}}const GR=F({nonMaxSuppressionWithScore_:WR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function HR(n,t,e,s=.5,r=Number.NEGATIVE_INFINITY,i=0){const o=$(n,"boxes","nonMaxSuppressionAsync"),a=$(t,"scores","nonMaxSuppressionAsync"),l=ao(o,a,e,s,r,i);e=l.maxOutputSize,s=l.iouThreshold,r=l.scoreThreshold,i=l.softNmsSigma;const c=await Promise.all([o.data(),a.data()]),u=c[0],h=c[1],{selectedIndices:d,selectedScores:p}=Sf(u,h,e,s,r,i);return o!==n&&o.dispose(),a!==t&&a.dispose(),{selectedIndices:ln(d,"int32"),selectedScores:ln(p)}}const XR=HR;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jR(n,t,e,s=.5,r=Number.NEGATIVE_INFINITY,i=!1){const o=$(n,"boxes","nonMaxSuppression"),a=$(t,"scores","nonMaxSuppression"),l=ao(o,a,e,s,r,null),c=l.maxOutputSize,u=l.iouThreshold,h=l.scoreThreshold,d={boxes:o,scores:a},p={maxOutputSize:c,iouThreshold:u,scoreThreshold:h,padToMaxOutputSize:i},f=R.runKernel(kp,d,p);return{selectedIndices:f[0],validOutputs:f[1]}}const qR=F({nonMaxSuppressionPadded_:jR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function KR(n,t,e,s=.5,r=Number.NEGATIVE_INFINITY,i=!1){const o=$(n,"boxes","nonMaxSuppressionAsync"),a=$(t,"scores","nonMaxSuppressionAsync"),l=ao(o,a,e,s,r,null),c=l.maxOutputSize,u=l.iouThreshold,h=l.scoreThreshold,[d,p]=await Promise.all([o.data(),a.data()]),{selectedIndices:f,validOutputs:m}=_f(d,p,c,u,h,i);return o!==n&&o.dispose(),a!==t&&a.dispose(),{selectedIndices:ln(f,"int32"),validOutputs:Mt(m,"int32")}}const YR=KR;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JR(n,t,e=!1,s=!1){const r=$(n,"images","resizeBilinear");S(r.rank===3||r.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`),S(t.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`),S(s===!1||e===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let i=r,o=!1;r.rank===3&&(o=!0,i=A(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const a={images:i},l={alignCorners:e,halfPixelCenters:s,size:t},c=R.runKernel(Ru,a,l);return o?A(c,[c.shape[1],c.shape[2],c.shape[3]]):c}const iw=F({resizeBilinear_:JR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZR(n,t,e=!1,s=!1){const r=$(n,"images","resizeNearestNeighbor");S(r.rank===3||r.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`),S(t.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`),S(r.dtype==="float32"||r.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),S(s===!1||e===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let i=r,o=!1;r.rank===3&&(o=!0,i=A(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const a={images:i},l={alignCorners:e,halfPixelCenters:s,size:t},c=R.runKernel(Eu,a,l);return o?A(c,[c.shape[1],c.shape[2],c.shape[3]]):c}const ow=F({resizeNearestNeighbor_:ZR});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QR(n,t="binary",e=!1,s=.5){const r=$(n,"image","threshold"),i=.2989,o=.587,a=.114,l=r.shape[0]*r.shape[1];let c=E(ln([s]),255),u,h,d,p;if(S(r.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${r.rank}.`),S(r.shape[2]===3||r.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${r.shape[2]}.`),S(r.dtype==="int32"||r.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${r.dtype}.`),S(t==="otsu"||t==="binary",()=>`Method must be binary or otsu, but was ${t}`),r.shape[2]===3){[u,h,d]=bn(r,[1,1,1],-1);const g=E(u,i),x=E(h,o),y=E(d,a);p=Y(Y(g,x),y)}else p=n;if(t==="otsu"){const g=ZT(rt(j0(p),"int32"),Fo([]),256);c=tD(g,l)}const f=e?oo(p,c):Cn(p,c);return rt(E(f,255),"int32")}function tD(n,t){let e=ln([-1]),s=ln([0]),r=ln([0]),i,o,a,l,c,u;for(let h=0;h<n.size-1;h++){i=qt(n,0,h+1),o=qt(n,h+1),c=gt(pt(i),t),u=gt(pt(o),t);const d=pt(E(i,Jo(0,i.size)));a=gt(d,pt(i));const p=ju(o.shape,i.size),f=Y(Jo(0,o.size),p),m=E(o,f);l=gt(pt(m),pt(o));const g=yt(a,l),x=yt(a,l),y=E(c,u);r=E(E(y,g),x);const w=Cn(r,s);s=je(w,r,s),e=je(w,ln([h]),e)}return e}const eD=F({threshold_:QR});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nD(n,t,e="nearest",s="constant",r=0,i){const o=$(n,"image","transform","float32"),a=$(t,"transforms","transform","float32");S(o.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${o.rank}.`),S(a.rank===2&&(a.shape[0]===o.shape[0]||a.shape[0]===1)&&a.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),S(i==null||i.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${i}.`);const l={image:o,transforms:a},c={interpolation:e,fillMode:s,fillValue:r,outputShape:i};return R.runKernel(Pp,l,c)}const sD=F({transform_:nD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rD(n,t,e){const s=$(n,"a","bandPart");S(s.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${s.rank}.`);const r=s.shape,[i,o]=s.shape.slice(-2);let a,l;typeof t=="number"?(S(t%1===0,()=>`bandPart(): numLower must be an integer, got ${t}.`),S(t<=i,()=>`bandPart(): numLower (${t}) must not be greater than the number of rows (${i}).`),a=$(t<0?i:t,"numLower","bandPart")):(S(t.dtype==="int32",()=>"bandPart(): numLower's dtype must be an int32."),a=je(gc(t,0),i,Yo(t,i))),typeof e=="number"?(S(e%1===0,()=>`bandPart(): numUpper must be an integer, got ${e}.`),S(e<=o,()=>`bandPart(): numUpper (${e}) must not be greater than the number of columns (${o}).`),l=$(e<0?o:e,"numUpper","bandPart")):(S(e.dtype==="int32",()=>"bandPart(): numUpper's dtype must be an int32."),l=je(gc(e,0),o,Yo(e,o)));const c=A(Jo(0,i,1,"int32"),[-1,1]),u=Jo(0,o,1,"int32"),h=yt(c,u),d=Rs(oo(h,a),li(h,ce(l))),p=$e([i,o],s.dtype);return A(Ds(ti(A(s,[-1,i,o])).map(f=>je(d,f,p))),r)}const iD=F({bandPart_:rD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oD(n){let t;if(Array.isArray(n)){t=!1,S(n!=null&&n.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const r=n[0].shape[0];for(let i=1;i<n.length;++i)S(n[i].shape[0]===r,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${n[i].shape[0]} vs. ${r})`)}else t=!0,n=bn(n,n.shape[0],0).map(r=>al(r,[0]));S(n.length<=n[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${n.length}) exceeds number of dimensions (${n[0].shape[0]}).`);const e=[],s=n;for(let r=0;r<n.length;++r)e.push(R.tidy(()=>{let i=s[r];if(r>0)for(let o=0;o<r;++o){const a=E(pt(E(e[o],i)),e[o]);i=yt(i,a)}return gt(i,Ku(i,"euclidean"))}));return t?Ds(e,0):e}const aD=F({gramSchmidt_:oD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lD(n,t=!1){if(S(n.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${n.rank}`),n.rank===2)return $x(n,t);{const e=n.shape.slice(0,n.shape.length-2).reduce((l,c)=>l*c),s=ti(A(n,[e,n.shape[n.shape.length-2],n.shape[n.shape.length-1]]),0),r=[],i=[];s.forEach(l=>{const[c,u]=$x(l,t);r.push(c),i.push(u)});const o=A(Ds(r,0),n.shape),a=A(Ds(i,0),n.shape);return[o,a]}}function $x(n,t=!1){return R.tidy(()=>{S(n.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${n.shape.length}D Tensor.`);const e=n.shape[0],s=n.shape[1];let r=B0(e),i=zr(n);const o=Yl([[1]],[1,1]);let a=zr(o);const l=e>=s?s:e;for(let c=0;c<l;++c){const u=i,h=a,d=r;[a,i,r]=R.tidy(()=>{const p=qt(i,[c,c],[e-c,1]),f=Ku(p),m=qt(i,[c,c],[1,1]),g=je(Cn(m,0),Yl([[-1]]),Yl([[1]])),x=yt(m,E(g,f)),y=gt(p,x);y.shape[0]===1?a=zr(o):a=Qe([o,qt(y,[1,0],[y.shape[0]-1,y.shape[1]])],0);const w=ce(gt(Ft(g,x),f)),b=qt(i,[c,0],[e-c,s]),C=E(w,a),_=Et(a);if(c===0)i=yt(b,Ft(C,Ft(_,b)));else{const k=yt(b,Ft(C,Ft(_,b)));i=Qe([qt(i,[0,0],[c,s]),k],0)}const I=Et(C),v=qt(r,[0,c],[e,r.shape[1]-c]);if(c===0)r=yt(v,Ft(Ft(v,a),I));else{const k=yt(v,Ft(Ft(v,a),I));r=Qe([qt(r,[0,0],[e,c]),k],1)}return[a,i,r]}),vt([u,h,d])}return!t&&e>s&&(r=qt(r,[0,0],[e,s]),i=qt(i,[0,0],[s,s])),[r,i]})}const cD=F({qr_:lD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Es={flipLeftRight:kR,grayscaleToRGB:TR,resizeNearestNeighbor:ow,resizeBilinear:iw,rgbToGrayscale:ER,rotateWithOffset:DR,cropAndResize:IR,nonMaxSuppression:FR,nonMaxSuppressionAsync:UR,nonMaxSuppressionWithScore:GR,nonMaxSuppressionWithScoreAsync:XR,nonMaxSuppressionPadded:qR,nonMaxSuppressionPaddedAsync:YR,threshold:eD,transform:sD},uD={bandPart:iD,gramSchmidt:aD,qr:cD};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hD=new Map,dD=new Map;class lo{getClassName(){return this.constructor.className}static fromConfig(t,e){return new t(e)}}class $n{constructor(){this.classNameMap={}}static getMap(){return $n.instance==null&&($n.instance=new $n),$n.instance}static register(t){$n.getMap().classNameMap[t.className]=[t,t.fromConfig]}}function j(n,t,e){S(n.className!=null,()=>"Class being registered does not have the static className property defined."),S(typeof n.className=="string",()=>"className is required to be a string, but got type "+typeof n.className),S(n.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),typeof t>"u"&&(t="Custom"),typeof e>"u"&&(e=n.className);const s=e,r=t+">"+s;return $n.register(n),hD.set(r,n),dD.set(n,r),n}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class br extends lo{minimize(t,e=!1,s){const{value:r,grads:i}=this.computeGradients(t,s);if(s!=null){const o=s.map(a=>({name:a.name,tensor:i[a.name]}));this.applyGradients(o)}else this.applyGradients(i);return vt(i),e?r:(r.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(t,e){return bE(t,e)}dispose(){this.iterations_!=null&&vt(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:Mt(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(t){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(t){return this.iterations_=(await t[0].tensor.data())[0],t.slice(1)}}Object.defineProperty(br,Symbol.hasInstance,{value:n=>n.minimize!=null&&n.computeGradients!=null&&n.applyGradients!=null});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class aw extends br{static get className(){return"Adadelta"}constructor(t,e,s=null){super(),this.learningRate=t,this.rho=e,this.epsilon=s,this.accumulatedGrads=[],this.accumulatedUpdates=[],s==null&&(this.epsilon=R.backend.epsilon())}applyGradients(t){(Array.isArray(t)?t.map(s=>s.name):Object.keys(t)).forEach((s,r)=>{const i=R.registeredVariables[s],o=!1;this.accumulatedGrads[r]==null&&(this.accumulatedGrads[r]={originalName:`${s}/accum_grad`,variable:M(()=>Rt(i).variable(o))}),this.accumulatedUpdates[r]==null&&(this.accumulatedUpdates[r]={originalName:`${s}/accum_var`,variable:M(()=>Rt(i).variable(o))});const a=Array.isArray(t)?t[r].tensor:t[s];if(a==null)return;const l=this.accumulatedGrads[r].variable,c=this.accumulatedUpdates[r].variable;M(()=>{const u=Y(E(l,this.rho),E(Jt(a),1-this.rho)),h=E(gt(Le(Y(c,this.epsilon)),Le(Y(l,this.epsilon))),a),d=Y(E(c,this.rho),E(Jt(h),1-this.rho));l.assign(u),c.assign(d);const p=Y(E(h,-this.learningRate),i);i.assign(p)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(vt(this.accumulatedGrads.map(t=>t.variable)),vt(this.accumulatedUpdates.map(t=>t.variable)))}async getWeights(){const t=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(t.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(t){t=await this.extractIterations(t);const e=t.length/2,s=!1;this.accumulatedGrads=t.slice(0,e).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.accumulatedUpdates=t.slice(e,e*2).map(r=>({originalName:r.name,variable:r.tensor.variable(s)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.rho,e.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class lw extends br{static get className(){return"Adagrad"}constructor(t,e=.1){super(),this.learningRate=t,this.initialAccumulatorValue=e,this.accumulatedGrads=[]}applyGradients(t){(Array.isArray(t)?t.map(s=>s.name):Object.keys(t)).forEach((s,r)=>{const i=R.registeredVariables[s];this.accumulatedGrads[r]==null&&(this.accumulatedGrads[r]={originalName:`${s}/accumulator`,variable:M(()=>ju(i.shape,this.initialAccumulatorValue).variable(!1))});const o=Array.isArray(t)?t[r].tensor:t[s];if(o==null)return;const a=this.accumulatedGrads[r].variable;M(()=>{const l=Y(a,Jt(o));a.assign(l);const c=Y(E(gt(o,Le(Y(l,R.backend.epsilon()))),-this.learningRate),i);i.assign(c)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&vt(this.accumulatedGrads.map(t=>t.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t);const e=!1;this.accumulatedGrads=t.map(s=>({originalName:s.name,variable:s.tensor.variable(e)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(t,e){return new t(e.learningRate,e.initialAccumulatorValue)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cw extends br{static get className(){return"Adam"}constructor(t,e,s,r=null){super(),this.learningRate=t,this.beta1=e,this.beta2=s,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],M(()=>{this.accBeta1=Mt(e).variable(),this.accBeta2=Mt(s).variable()}),r==null&&(this.epsilon=R.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map(s=>s.name):Object.keys(t);M(()=>{const s=yt(1,this.accBeta1),r=yt(1,this.accBeta2);e.forEach((i,o)=>{const a=R.registeredVariables[i],l=!1;this.accumulatedFirstMoment[o]==null&&(this.accumulatedFirstMoment[o]={originalName:`${i}/m`,variable:M(()=>Rt(a).variable(l))}),this.accumulatedSecondMoment[o]==null&&(this.accumulatedSecondMoment[o]={originalName:`${i}/v`,variable:M(()=>Rt(a).variable(l))});const c=Array.isArray(t)?t[o].tensor:t[i];if(c==null)return;const u=this.accumulatedFirstMoment[o].variable,h=this.accumulatedSecondMoment[o].variable,d=Y(E(u,this.beta1),E(c,1-this.beta1)),p=Y(E(h,this.beta2),E(Jt(c),1-this.beta2)),f=gt(d,s),m=gt(p,r);u.assign(d),h.assign(p);const g=Y(E(gt(f,Y(Le(m),this.epsilon)),-this.learningRate),a);a.assign(g)}),this.accBeta1.assign(E(this.accBeta1,this.beta1)),this.accBeta2.assign(E(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&vt(this.accumulatedFirstMoment.map(t=>t.variable)),this.accumulatedSecondMoment!=null&&vt(this.accumulatedSecondMoment.map(t=>t.variable))}async getWeights(){const t=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(t.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(t){t=await this.extractIterations(t),M(()=>{this.accBeta1.assign(Zr(this.beta1,this.iterations_+1)),this.accBeta2.assign(Zr(this.beta2,this.iterations_+1))});const e=t.length/2,s=!1;this.accumulatedFirstMoment=t.slice(0,e).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.accumulatedSecondMoment=t.slice(e,e*2).map(r=>({originalName:r.name,variable:r.tensor.variable(s)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class uw extends br{static get className(){return"Adamax"}constructor(t,e,s,r=null,i=0){super(),this.learningRate=t,this.beta1=e,this.beta2=s,this.epsilon=r,this.decay=i,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],M(()=>{this.iteration=Mt(0).variable(),this.accBeta1=Mt(e).variable()}),r==null&&(this.epsilon=R.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map(s=>s.name):Object.keys(t);M(()=>{const s=yt(1,this.accBeta1),r=gt(-this.learningRate,Y(E(this.iteration,this.decay),1));e.forEach((i,o)=>{const a=R.registeredVariables[i],l=!1;this.accumulatedFirstMoment[o]==null&&(this.accumulatedFirstMoment[o]={originalName:`${i}/m`,variable:Rt(a).variable(l)}),this.accumulatedWeightedInfNorm[o]==null&&(this.accumulatedWeightedInfNorm[o]={originalName:`${i}/v`,variable:Rt(a).variable(l)});const c=Array.isArray(t)?t[o].tensor:t[i];if(c==null)return;const u=this.accumulatedFirstMoment[o].variable,h=this.accumulatedWeightedInfNorm[o].variable,d=Y(E(u,this.beta1),E(c,1-this.beta1)),p=E(h,this.beta2),f=We(c),m=xr(p,f);u.assign(d),h.assign(m);const g=Y(E(gt(r,s),gt(d,Y(m,this.epsilon))),a);a.assign(g)}),this.iteration.assign(Y(this.iteration,1)),this.accBeta1.assign(E(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&vt(this.accumulatedFirstMoment.map(t=>t.variable)),this.accumulatedWeightedInfNorm!=null&&vt(this.accumulatedWeightedInfNorm.map(t=>t.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(t){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon,e.decay)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vf extends br{static get className(){return"SGD"}constructor(t){super(),this.learningRate=t,this.setLearningRate(t)}applyGradients(t){(Array.isArray(t)?t.map(s=>s.name):Object.keys(t)).forEach((s,r)=>{const i=Array.isArray(t)?t[r].tensor:t[s];if(i==null)return;const o=R.registeredVariables[s];M(()=>{const a=Y(E(this.c,i),o);o.assign(a)})}),this.incrementIterations()}setLearningRate(t){this.learningRate=t,this.c!=null&&this.c.dispose(),this.c=ps(Mt(-t))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(t){if(t=await this.extractIterations(t),t.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(t,e){return new t(e.learningRate)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hw extends vf{static get className(){return"Momentum"}constructor(t,e,s=!1){super(t),this.learningRate=t,this.momentum=e,this.useNesterov=s,this.accumulations=[],this.m=Mt(this.momentum)}applyGradients(t){(Array.isArray(t)?t.map(s=>s.name):Object.keys(t)).forEach((s,r)=>{const i=R.registeredVariables[s];this.accumulations[r]==null&&(this.accumulations[r]={originalName:`${s}/momentum`,variable:M(()=>Rt(i).variable(!1))});const o=this.accumulations[r].variable,a=Array.isArray(t)?t[r].tensor:t[s];a!=null&&M(()=>{let l;const c=Y(E(this.m,o),a);this.useNesterov?l=Y(E(this.c,Y(a,E(c,this.m))),i):l=Y(E(this.c,c),i),o.assign(c),i.assign(l)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&vt(this.accumulations.map(t=>t.variable))}setMomentum(t){this.momentum=t}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t);const e=!1;this.accumulations=t.map(s=>({originalName:s.name,variable:s.tensor.variable(e)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(t,e){return new t(e.learningRate,e.momentum,e.useNesterov)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dw extends br{static get className(){return"RMSProp"}constructor(t,e=.9,s=0,r=null,i=!1){if(super(),this.learningRate=t,this.decay=e,this.momentum=s,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=i,r==null&&(this.epsilon=R.backend.epsilon()),t==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(t){(Array.isArray(t)?t.map(s=>s.name):Object.keys(t)).forEach((s,r)=>{const i=R.registeredVariables[s],o=!1;this.accumulatedMeanSquares[r]==null&&(this.accumulatedMeanSquares[r]={originalName:`${s}/rms`,variable:M(()=>Rt(i).variable(o))}),this.accumulatedMoments[r]==null&&(this.accumulatedMoments[r]={originalName:`${s}/momentum`,variable:M(()=>Rt(i).variable(o))}),this.accumulatedMeanGrads[r]==null&&this.centered&&(this.accumulatedMeanGrads[r]={originalName:`${s}/mg`,variable:M(()=>Rt(i).variable(o))});const a=Array.isArray(t)?t[r].tensor:t[s];if(a==null)return;const l=this.accumulatedMeanSquares[r].variable,c=this.accumulatedMoments[r].variable;M(()=>{const u=Y(E(l,this.decay),E(Jt(a),1-this.decay));if(this.centered){const h=this.accumulatedMeanGrads[r].variable,d=Y(E(h,this.decay),E(a,1-this.decay)),p=gt(E(a,this.learningRate),Le(yt(u,Y(Jt(d),this.epsilon)))),f=Y(E(c,this.momentum),p);l.assign(u),h.assign(d),c.assign(f);const m=yt(i,f);i.assign(m)}else{const h=Y(E(l,this.decay),E(Jt(a),1-this.decay)),d=Y(E(c,this.momentum),gt(E(a,this.learningRate),Le(Y(h,this.epsilon))));l.assign(h),c.assign(d);const p=yt(i,d);i.assign(p)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&vt(this.accumulatedMeanSquares.map(t=>t.variable)),this.accumulatedMeanGrads!=null&&this.centered&&vt(this.accumulatedMeanGrads.map(t=>t.variable)),this.accumulatedMoments!=null&&vt(this.accumulatedMoments.map(t=>t.variable))}async getWeights(){const t=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&t.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(t.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(t){t=await this.extractIterations(t);const e=this.centered?t.length/3:t.length/2,s=!1;this.accumulatedMeanSquares=t.slice(0,e).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.accumulatedMoments=t.slice(e,e*2).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.centered&&(this.accumulatedMeanGrads=t.slice(e*2,e*3).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(t,e){return new t(e.learningRate,e.decay,e.momentum,e.epsilon,e.centered)}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pD=[aw,lw,cw,uw,hw,dw,vf];function fD(){for(const n of pD)j(n)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tx(n,t,e,s){o(n),e=e??0,s=s??1,a(e,s);let r=0;const i=l=>(l.then(c=>{const u=e+ ++r/n.length*(s-e);return t(u),c}),l);function o(l){S(l!=null&&Array.isArray(l)&&l.length>0,()=>"promises must be a none empty array")}function a(l,c){S(l>=0&&l<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${l}`),S(c>=0&&c<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${c}`),S(c>=l,()=>`startFraction must be no more than endFraction, but got startFraction ${l} and endFraction ${c}`)}return Promise.all(n.map(i))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function gD(n,t){t==null&&(t={});const e=t.fetchFunc==null?O().platform.fetch:t.fetchFunc,s=n.map(h=>e(h,t.requestInit,{isBinary:!0})),a=(t.onProgress==null?await Promise.all(s):await Tx(s,t.onProgress,0,.5)).map(h=>h.arrayBuffer());return t.onProgress==null?await Promise.all(a):await Tx(a,t.onProgress,.5,1)}function mD(n,t){var e;const s=t.fetchFunc==null?O().platform.fetch:t.fetchFunc;let r=0,i;return(e=t.onProgress)===null||e===void 0||e.call(t,0),new ReadableStream({pull:async o=>{for(var a;r<n.length;){i||(i=(await s(n[r],t.requestInit,{isBinary:!0})).body.getReader());const{done:l,value:c}=await i.read();if(l){r++,i=void 0,(a=t.onProgress)===null||a===void 0||a.call(t,r/n.length);continue}o.enqueue(c);return}o.close()}})}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xD="application/octet-stream",yD="application/json";class kf{constructor(t,e){if(this.DEFAULT_METHOD="POST",e==null&&(e={}),this.weightPathPrefix=e.weightPathPrefix,this.weightUrlConverter=e.weightUrlConverter,e.fetchFunc!=null?(S(typeof e.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=e.fetchFunc):this.fetch=O().platform.fetch,S(t!=null&&t.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(t)&&S(t.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${t.length}).`),this.path=t,e.requestInit!=null&&e.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=e.requestInit||{},this.loadOptions=e}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const e=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);e.body=new FormData;const s=[{paths:["./model.weights.bin"],weights:t.weightSpecs}],r=D$(t,s);if(e.body.append("model.json",new Blob([JSON.stringify(r)],{type:yD}),"model.json"),t.weightData!=null){const o=fr.join(t.weightData);e.body.append("model.weights.bin",new Blob([o],{type:xD}),"model.weights.bin")}const i=await this.fetch(this.path,e);if(i.ok)return{modelArtifactsInfo:Up(t),responses:[i]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${i.status}.`)}async loadModelJSON(){const t=await this.fetch(this.path,this.requestInit);if(!t.ok)throw new Error(`Request to ${this.path} failed with status code ${t.status}. Please verify this URL points to the model JSON of the model to load.`);let e;try{e=await t.json()}catch{let o=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?o+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":o+=" Please make sure the server is serving valid JSON for this request.",new Error(o)}const s=e.modelTopology,r=e.weightsManifest;if(s==null&&r==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return e}async load(){if(this.loadOptions.streamWeights)return this.loadStream();const t=await this.loadModelJSON();return F$(t,e=>this.loadWeights(e))}async loadStream(){const t=await this.loadModelJSON(),e=await this.getWeightUrls(t.weightsManifest),s=_x(t.weightsManifest),r=()=>mD(e,this.loadOptions);return Object.assign(Object.assign({},t),{weightSpecs:s,getWeightStream:r})}async getWeightUrls(t){const e=Array.isArray(this.path)?this.path[1]:this.path,[s,r]=bD(e),i=this.weightPathPrefix||s,o=[],a=[];for(const l of t)for(const c of l.paths)this.weightUrlConverter!=null?a.push(this.weightUrlConverter(c)):o.push(i+c+r);return this.weightUrlConverter&&o.push(...await Promise.all(a)),o}async loadWeights(t){const e=await this.getWeightUrls(t),s=_x(t),r=await gD(e,this.loadOptions);return[s,r]}}kf.URL_SCHEME_REGEX=/^https?:\/\//;function bD(n){const t=n.lastIndexOf("/"),e=n.lastIndexOf("?"),s=n.substring(0,t),r=e>t?n.substring(e):"";return[s+"/",r]}function Nx(n){return n.match(kf.URL_SCHEME_REGEX)!=null}const pw=(n,t)=>{if(typeof fetch>"u"&&(t==null||t.fetchFunc==null))return null;{let e=!0;if(Array.isArray(n)?e=n.every(s=>Nx(s)):e=Nx(n),e)return fw(n,t)}return null};ve.registerSaveRouter(pw);ve.registerLoadRouter(pw);function fw(n,t){return new kf(n,t)}function wD(n,t){return fw(n,t)}function $f(n,t){const e=n.shape.length,s=t.shape.length;if(e<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${e}.`);if(s<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${s}.`);if(t.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[s-1]>e)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[s-1]} vs. ${e}`);if(W(n.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${n.shape}.`);const r=t.shape,i=r[r.length-1];let o=1;for(let h=0;h<r.length-1;++h)o*=r[h];const a=n.shape,l=r.slice();l.pop();let c=1;for(let h=i;h<e;++h)c*=a[h],l.push(a[h]);const u=[...ht(n.shape).map(h=>h/c),1].slice(0,i);return[l,o,c,u]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bd=-2,CD=-1;function Tf(n,t,e){const s=n.shape.length;S(s===t.length,()=>`Error in slice${s}D: Length of begin ${t} must match the rank of the array (${s}).`),S(s===e.length,()=>`Error in slice${s}D: Length of size ${e} must match the rank of the array (${s}).`);for(let r=0;r<s;++r)S(t[r]+e[r]<=n.shape[r],()=>`Error in slice${s}D: begin[${r}] + size[${r}] (${t[r]+e[r]}) would overflow input.shape[${r}] (${n.shape[r]})`)}function _D(n){const t=[];let e=0;for(;n>0;)n&1&&t.push(e),n/=2,e++;return t}function Nf(n,t,e){const s=[];for(let r=0;r<n.length;r++)s[r]=Math.ceil((t[r]-n[r])/e[r]);return s}function gw(n,t,e,s){const r=[...n];for(let i=r.length;i<s.length;i++)r.push(1);for(let i=0;i<e;i++)i===0?r[t]=1:(r.splice(t,0,1),r.pop());return r}function mw(n,t,e){return e<=n?e:e-(t-1)}function xw(n,t){const e=[];for(let s=0;s<n;s++)e.push(t+s);return e}function SD(n,t,e,s,r,i,o,a,l){const c=n.length;let u=new Array(c),h=new Array(c),d=new Array(c);if(t.length&&e>0){const p=t[0],f=e+1;u=yw(o,p,f,s,n),h=bw(a,p,f,r,n),d=gw(i,p,f,n)}else for(let p=0;p<c;p++)u[p]=Cw(o,s,i,n,p,l),h[p]=_w(a,r,i,n,p,l),d[p]=ww(i,p,l);return{begin:u,end:h,strides:d}}function yw(n,t,e,s,r){const i=[...r],o=xw(e,t);for(let a=0;a<i.length;a++)if(o.indexOf(a)>-1)i[a]=0;else{const l=mw(t,e,a);let c=s[l];n&1<<l&&(c=0),i[a]=c}return i}function bw(n,t,e,s,r){const i=[...r],o=xw(e,t);for(let a=0;a<i.length;a++)if(o.indexOf(a)>-1)i[a]=Number.MAX_SAFE_INTEGER;else{const l=mw(t,e,a);let c=s[l];n&1<<l&&(c=Number.MAX_SAFE_INTEGER),i[a]=c}for(let a=0;a<i.length;a++){const l=r[a];i[a]<0&&(i[a]+=l),i[a]=Gr(0,i[a],r[a])}return i}function ww(n,t,e){let s=n[t];return(e&1<<t||s==null)&&(s=1),s}function Cw(n,t,e,s,r,i){let o=t[r];const a=e[r]||1;(n&1<<r||i&1<<r||o==null)&&(a>0?o=Number.MIN_SAFE_INTEGER:o=Number.MAX_SAFE_INTEGER);const l=s[r];return o<0&&(o+=l),o=Gr(0,o,l-1),o}function _w(n,t,e,s,r,i){let o=t[r];const a=e[r]||1;(n&1<<r||i&1<<r||o==null)&&(a>0?o=Number.MAX_SAFE_INTEGER:o=Number.MIN_SAFE_INTEGER);const l=s[r];return o<0&&(o+=l),a>0?o=Gr(0,o,l):o=Gr(-1,o,l-1),o}function Ef(n,t,e){let s=e.length;for(let r=0;r<e.length;r++)if(e[r]>1){s=r;break}for(let r=s+1;r<e.length;r++)if(t[r]>0||e[r]!==n[r])return!1;return!0}function Rf(n,t){let e=n.length>0?n[n.length-1]:1;for(let s=0;s<n.length-1;s++)e+=n[s]*t[s];return e}function Ju(n,t,e){let s;const r=n.shape.length;typeof t=="number"?s=[t,...new Array(r-1).fill(0)]:t.length<r?s=t.concat(new Array(r-t.length).fill(0)):s=t.slice(),s.forEach(o=>{S(o!==-1,()=>"slice() does not support negative begin indexing.")});let i;return e==null?i=new Array(r).fill(-1):typeof e=="number"?i=[e,...new Array(r-1).fill(-1)]:e.length<r?i=e.concat(new Array(r-e.length).fill(-1)):i=e,i=i.map((o,a)=>o>=0?o:(S(o===-1,()=>`Negative size values should be exactly -1 but got ${o} for the slice() size at index ${a}.`),n.shape[a]-s[a])),[s,i]}function Df(n,t,e,s,r,i,o,a,l){let c;if(s==null?(c=new Array(t.length),c.fill(1)):c=s,o!=null&&o&o-1)throw new Error("Multiple ellipses in slice is not allowed.");let u=!1;const h={dims:c.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:e.slice(),strides:c.slice(),beginMask:r,endMask:i,ellipsisMask:o,newAxisMask:a,shrinkAxisMask:l};for(let w=0;w<h.dims;w++)u&&1<<w&a&&h.numAddAxisAfterEllipsis++,1<<w&o&&(u=!0);u||(h.ellipsisMask|=1<<h.dims,h.dims++);const d={dims:n.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};ID(h,d);let p=!0,f=!0,m=!0;const g=[],x=[];for(let w=0;w<n.length;++w){if(d.strides[w]===0)throw Error(`strides[${w}] must be non-zero`);const b=!!(d.shrinkAxisMask&1<<w),C=n[w];if(C===-1){g.push(b?1:-1);continue}const _=[d.beginMask&1<<w,d.endMask&1<<w],I=[d.strides[w]>0?0:-1,d.strides[w]>0?C:C-1];if(b&&d.strides[w]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&d.strides[w]===1;const v=!!(d.beginMask&1<<w&&d.endMask&1<<w);if(d.beginValid&&d.endValid){if(b){const P=d.begin[w]<0?C+d.begin[w]:d.begin[w];if(d.begin[w]=P,d.end[w]=d.begin[w]+1,P<0||P>=C)throw Error(`slice index ${d.begin[w]} of dimension ${w} out of bounds.`)}else d.begin[w]=Ex(d.begin[w],0,d.strides[w],C,_,I),d.end[w]=Ex(d.end[w],1,d.strides[w],C,_,I);const D=d.strides[w]===1&&d.begin[w]===0&&d.end[w]===C;p=p&&D,f=f&&(w===0&&d.strides[w]===1||D)}else p=p&&d.strides[w]===1&&v,f=f&&(w===0&&d.strides[w]===1||v);let k,T=!1;if(d.beginValid&&d.endValid?(k=d.end[w]-d.begin[w],T=!0):b?(k=1,T=!0):v&&C>=0&&(d.strides[w]<0?k=-C:k=C,T=!0),T){let D;k===0||k<0!=d.strides[w]<0?D=0:D=Math.trunc(k/d.strides[w])+(k%d.strides[w]!==0?1:0),g.push(D)}else g.push(-1)}for(let w=0;w<d.finalShapeGatherIndices.length;++w){const b=d.finalShapeGatherIndices[w];b>=0?x.push(g[b]):b===bd&&x.push(1)}return{finalShapeSparse:x.filter((w,b)=>d.finalShapeGatherIndices[b]!==bd),finalShape:x,isIdentity:p,sliceDim0:f,isSimpleSlice:m,begin:d.begin,end:d.end,strides:d.strides}}function ID(n,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let e=0;t.beginValid=n.begin!=null,t.endValid=n.end!=null,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let s=0;s<n.dims;s++)if(1<<s&n.ellipsisMask){const r=Math.min(t.dims-(n.dims-s)+1+n.numAddAxisAfterEllipsis,t.dims);for(;e<r;e++)t.begin[e]=0,t.end[e]=0,t.strides[e]=1,t.beginMask|=1<<e,t.endMask|=1<<e,t.finalShapeGatherIndices.push(e),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[e]=s}else if(1<<s&n.newAxisMask)t.finalShapeGatherIndices.push(bd),t.finalShapeGatherIndicesSparse.push(-1);else{if(e===t.begin.length)throw Error(`Index out of range using input dim ${e}; input has only ${t.dims} dims, ${t.begin.length}.`);n.begin!=null&&(t.begin[e]=n.begin[s]),n.end!=null&&(t.end[e]=n.end[s]),t.strides[e]=n.strides[s],n.beginMask&1<<s&&(t.beginMask|=1<<e),n.endMask&1<<s&&(t.endMask|=1<<e),n.shrinkAxisMask&1<<s?(t.finalShapeGatherIndices.push(CD),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<e):(t.finalShapeGatherIndices.push(e),t.finalShapeGatherIndicesSparse.push(s)),t.inputShapeGatherIndicesSparse[e]=s,e++}}function Ex(n,t,e,s,r,i){if(r[t])return e>0?i[t]:i[t+1&1];{const o=n<0?s+n:n;return o<i[0]?i[0]:o>i[1]?i[1]:o}}const vD=Object.freeze(Object.defineProperty({__proto__:null,assertParamsValid:Tf,computeFlatOffset:Rf,computeOutShape:Nf,getNormalizedAxes:SD,isSliceContinous:Ef,maskToAxes:_D,parseSliceParams:Ju,sliceInfo:Df,startForAxis:Cw,startIndicesWithElidedDims:yw,stopForAxis:_w,stopIndicesWithElidedDims:bw,stridesForAxis:ww,stridesWithElidedDims:gw},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kD{static sgd(t){return new vf(t)}static momentum(t,e,s=!1){return new hw(t,e,s)}static rmsprop(t,e=.9,s=0,r=null,i=!1){return new dw(t,e,s,r,i)}static adam(t=.001,e=.9,s=.999,r=null){return new cw(t,e,s,r)}static adadelta(t=.001,e=.95,s=null){return new aw(t,e,s)}static adamax(t=.002,e=.9,s=.999,r=null,i=0){return new uw(t,e,s,r,i)}static adagrad(t,e=.1){return new lw(t,e)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Si=kD;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $D=typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:n=>n();function Sw(){return new Promise(n=>$D(()=>n()))}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Af(n,t){const e=n[0].length;n.forEach((r,i)=>{S(r.length===e,()=>`Error in concat${e}D: rank of tensors[${i}] must be the same as the rank of the rest (${e})`)}),S(t>=0&&t<e,()=>`Error in concat${e}D: axis must be between 0 and ${e-1}.`);const s=n[0];n.forEach((r,i)=>{for(let o=0;o<e;o++)S(o===t||r[o]===s[o],()=>`Error in concat${e}D: Shape of tensors[${i}] (${r}) does not match the shape of the rest (${s}) along the non-concatenated axis ${i}.`)})}function fs(n,t){const e=n[0].slice();for(let s=1;s<n.length;s++)e[t]+=n[s][t];return e}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var jn;(function(n){n[n.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",n[n.VALUE_ROWIDS=1]="VALUE_ROWIDS",n[n.ROW_LENGTHS=2]="ROW_LENGTHS",n[n.ROW_SPLITS=3]="ROW_SPLITS",n[n.ROW_LIMITS=4]="ROW_LIMITS",n[n.ROW_STARTS=5]="ROW_STARTS"})(jn||(jn={}));function Iw(n,t,e){let s=new Array;if(e==null&&t==null)return s;if(t==null)for(;s.length<n+e.length;)s.push(-1);else s=t.slice();if(e==null)return s;if(n+e.length!==s.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${n+e.length}, but shape.rank = ${s.length}`);for(let r=1;r<e.length;++r){const i=e[r],o=s[s.length-e.length+r],a=s[o];if(i>=0)if(a>=0){if(a!==i)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${r+n}] = ${i} but shape[${r+n}] = ${a}`)}else s[o]=i}return s}function vw(n){const t={FIRST_DIM_SIZE:jn.FIRST_DIM_SIZE,VALUE_ROWIDS:jn.VALUE_ROWIDS,ROW_LENGTHS:jn.ROW_LENGTHS,ROW_SPLITS:jn.ROW_SPLITS,ROW_LIMITS:jn.ROW_LIMITS,ROW_STARTS:jn.ROW_STARTS},e=[];for(const s of n)if(s in t)e.push(t[s]);else break;return e}function kw(n){return n.length===0?0:n[0]===jn.FIRST_DIM_SIZE?n.length-1:n.length}function $w(n,t){if(n==null||t==null)return;const e=n.length,s=t.length;if(e>=s)throw new Error(`defaultValue.shape=${n} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${e} must be less than ragged tensor input flatValues.rank = ${s})`);for(let r=0;r<Math.min(e,s-1);++r){const i=n[r],o=t[r+1];if(i>=0&&o>=0&&i!==1&&i!==o)throw new Error(`defaultValue.shape=${n}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${r-n.length}] = ${i} but ragged tensor input.flatValues.shape[${r-n.length}] = ${o}`)}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ff=30;function Zu(n){return n<=Ff?n:ed(n,Math.floor(Math.sqrt(n)))}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mf(n,t,e){const s=e*(typeof n=="number"?n:n[0]),r=t*(typeof n=="number"?n:n[1]);return[s,r]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cl(n,t,e,s=!0){let r=[];if(s)r=r.concat(t.slice(0)),r.push(n[0]/e),r=r.concat(n.slice(1));else{r=r.concat(n[0]);const i=t.length;for(let o=0;o<i;++o)r=r.concat([n[o+1]/t[o],t[o]]);r=r.concat(n.slice(i+1))}return r}function ul(n,t,e=!0){const s=[];if(e){s.push(t);for(let r=t+1;r<n;++r)r<=2*t?(s.push(r),s.push(r-(t+1))):s.push(r)}else{const r=[],i=[];for(let o=1;o<n;++o)o>=t*2+1||o%2===1?i.push(o):r.push(o);s.push(...r),s.push(0),s.push(...i)}return s}function hl(n,t,e,s=!0){const r=[];s?r.push(n[0]/e):r.push(n[0]*e);for(let i=1;i<n.length;++i)i<=t.length?s?r.push(t[i-1]*n[i]):r.push(n[i]/t[i-1]):r.push(n[i]);return r}function Pf(n,t){const e=[0];for(let s=0;s<t;++s)e.push(n[s][0]);return e}function Of(n,t,e){const s=n.slice(0,1);for(let r=0;r<e;++r)s.push(n[r+1]-t[r][0]-t[r][1]);return s}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qu=1.7580993408473768,th=1.0507009873554805;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bf=.3275911,Lf=.254829592,Vf=-.284496736,zf=1.421413741,Uf=-1.453152027,Wf=1.061405429;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function As(n,t){if(n.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${n.length}, imag: ${t.length}.`);const e=new Float32Array(n.length*2);for(let s=0;s<e.length;s+=2)e[s]=n[s/2],e[s+1]=t[s/2];return e}function Tw(n){const t=new Float32Array(n.length/2),e=new Float32Array(n.length/2);for(let s=0;s<n.length;s+=2)t[s/2]=n[s],e[s/2]=n[s+1];return{real:t,imag:e}}function Nw(n){const t=Math.ceil(n.length/4),e=new Float32Array(t),s=new Float32Array(t);for(let r=0;r<n.length;r+=4)e[Math.floor(r/4)]=n[r],s[Math.floor(r/4)]=n[r+1];return{real:e,imag:s}}function Ew(n){const t=Math.floor(n.length/4),e=new Float32Array(t),s=new Float32Array(t);for(let r=2;r<n.length;r+=4)e[Math.floor(r/4)]=n[r],s[Math.floor(r/4)]=n[r+1];return{real:e,imag:s}}function Gf(n,t){const e=n[t*2],s=n[t*2+1];return{real:e,imag:s}}function Rw(n,t,e,s){n[s*2]=t,n[s*2+1]=e}function Dw(n,t){const e=new Float32Array(n/2),s=new Float32Array(n/2);for(let r=0;r<Math.ceil(n/2);r++){const i=(t?2:-2)*Math.PI*(r/n);e[r]=Math.cos(i),s[r]=Math.sin(i)}return{real:e,imag:s}}function Aw(n,t,e){const s=(e?2:-2)*Math.PI*(n/t),r=Math.cos(s),i=Math.sin(s);return{real:r,imag:i}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mh="->",TD=/->/g,Rx=",",Dx="...";function Hf(n,t){n=n.replace(/\s/g,"");const e=(n.length-n.replace(TD,"").length)/Mh.length;if(e<1)throw new Error("Equations without an arrow are not supported.");if(e>1)throw new Error(`Equation must contain exactly one arrow ("${Mh}").`);const[s,r]=n.split(Mh);S(s.indexOf(Dx)===-1,()=>`The ellipsis notation ("${Dx}") is not supported yet.`);const i=s.split(Rx),o=i.length;if(t!==o)throw new Error(`Expected ${o} input tensors, received ${t}`);if(o>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const a=[];for(let d=0;d<r.length;++d){const p=r[d];if(!i.some(f=>f.indexOf(p)!==-1))throw new Error(`Output subscripts contain the label ${p} not present in the input subscripts.`);a.indexOf(p)===-1&&a.push(p)}for(let d=0;d<s.length;++d){const p=s[d];a.indexOf(p)===-1&&p!==Rx&&a.push(p)}const l=new Array(i.length);for(let d=0;d<o;++d){if(new Set(i[d].split("")).size!==i[d].length)throw new Error(`Found duplicate axes in input component ${i[d]}. Support for duplicate axes in input is not implemented yet.`);l[d]=[];for(let p=0;p<i[d].length;++p)l[d].push(a.indexOf(i[d][p]))}const c=a.length,u=r.length,h=[];for(let d=u;d<c;++d)h.push(d);return{allDims:a,summedDims:h,idDims:l}}function Xf(n,t){let e=new Array(n);e.fill(-1);for(let r=0;r<t.length;++r)e[t[r]]=r;const s=[];for(let r=0;r<n;++r)e[r]===-1&&s.push(r);return e=e.filter(r=>r!==-1),{permutationIndices:e,expandDims:s}}function jf(n,t,e){const s=new Array(n);for(let r=0;r<e.length;++r){const i=e[r].shape;for(let o=0;o<t[r].length;++o)s[t[r][o]]===void 0?s[t[r][o]]=i[o]:S(s[t[r][o]]===i[o],()=>`Expected dimension ${s[t[r][o]]} at axis ${o} of input shaped ${JSON.stringify(i)}, but got dimension ${i[o]}`)}}function qf(n,t){const e=n,s=[];let r=0;n.length===0&&e.push(-1),r=n.length+1;for(let o=0;o<r;++o)s.push([]);const i=[];for(let o=0;o<e.length;++o){const a=e[o],l=ND(t,a);for(const c of l)i.indexOf(c)===-1&&(s[o].push(c),i.push(c))}return{path:e,steps:s}}function Kf(n){return n.every((t,e)=>t===e)}function ND(n,t){const e=[];for(let s=0;s<n.length;++s)(n[s].length===0||n[s].indexOf(t)!==-1||t===-1)&&e.push(s);return e}function Yf(n,t,e=0){let s=[];if(typeof t=="number")S(n.shape[e]%t===0,()=>"Number of splits must evenly divide the axis."),s=new Array(t).fill(n.shape[e]/t);else{const r=t.reduce((o,a)=>(a===-1&&(o+=1),o),0);S(r<=1,()=>"There should be only one negative value in split array.");const i=t.indexOf(-1);if(i!==-1){const o=t.reduce((a,l)=>l>0?a+l:a);t[i]=n.shape[e]-o}S(n.shape[e]===t.reduce((o,a)=>o+a),()=>"The sum of sizes must match the size of the axis dimension."),s=t}return s}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fw(n){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${n}`}function Mw(n,t){return`indices(${n}, 0) is invalid: ${t} < 0`}function Pw(n,t,e){return`indices(${n}, 0) is invalid: ${t} >= ${e}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ow(n,t){return`only one output dimension may be -1, not both ${n} and ${t}`}function Bw(n,t){return`size ${n} must be non-negative, not ${t}`}function Lw(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function Vw(n,t){const e=W(n),s=W(t);return`Input to reshape is a SparseTensor with ${e}
  dense values, but the requested shape requires a multiple of ${s}. inputShape=${n} outputShape= ${t}`}function zw(n,t){const e=W(n),s=W(t);return`Input to reshape is a tensor with ${e} dense values, but the requested shape has ${s}. inputShape=${n} outputShape=${t}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wd(){return"segment ids must be >= 0"}function Uw(){return"segment ids are not increasing"}function Ww(n,t){return`Segment id ${n} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function Gw(n,t,e){return`Bad: indices[${n}] == ${t} out of range [0, ${e})`}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hw(n,t){let e=!1,s;for(n<=Ff?(s=n,e=!0):s=ed(n,Math.floor(Math.sqrt(n)));!e;)s>t||s===n?e=!0:s=ed(n,s+1);return s}function Xw(n,t,e){const s=[],r=n.length;for(let i=0;i<r;i++)i!==t?s.push(n[i]):s.push(e);return s}function Jf(n,t,e,s){const r=t.shape.length,i=n.shape.length;if(s!==0&&(s<-r||s>r))throw new Error(`Expect batchDims in the range of [-${r}, ${r}], but got ${s}`);if(s<0&&(s+=r),s>i)throw new Error(`batchDims (${s}) must be less than rank(x) (
    ${i}).`);if(e<s)throw new Error(`batchDims (${s}) must be less than or equal to axis (${e}).`);for(let h=0;h<s;++h)if(n.shape[h]!==t.shape[h])throw new Error(`x.shape[${h}]: ${n.shape[h]} should be equal to indices.shape[${h}]: ${t.shape[h]}.`);const o=n.shape[e],a=[];let l=1,c=1,u=1;for(let h=0;h<s;++h)a.push(n.shape[h]),l*=n.shape[h];for(let h=s;h<e;h++)a.push(n.shape[h]),c*=n.shape[h];for(let h=s;h<r;h++)a.push(t.shape[h]);for(let h=e+1;h<i;h++)a.push(n.shape[h]),u*=n.shape[h];return{batchSize:l,sliceSize:u,outerSize:c,dimSize:o,outputShape:a}}const ED=Object.freeze(Object.defineProperty({__proto__:null,collectGatherOpShapeInfo:Jf,computeOutShape:Xw,segOpComputeOptimalWindowSize:Hw},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fs(n){try{return n.map(t=>or(t))}catch(t){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${t}`)}}function jw(n){return n.map(t=>nr(t))}const RD=Object.freeze(Object.defineProperty({__proto__:null,ERF_A1:Lf,ERF_A2:Vf,ERF_A3:zf,ERF_A4:Uf,ERF_A5:Wf,ERF_P:Bf,PARALLELIZE_THRESHOLD:Ff,get RowPartitionType(){return jn},SELU_SCALE:th,SELU_SCALEALPHA:Qu,applyActivation:bf,assertAndGetBroadcastShape:Ct,assertAxesAreInnerMostDims:Fe,assertParamsConsistent:Af,assignToTypedArray:Rw,axesAreInnerMostDims:Kp,calculateShapes:hi,checkEinsumDimSizes:jf,checkPadOnDimRoundingMode:nn,combineLocations:P0,combineRaggedTensorToTensorShapes:Iw,complexWithEvenIndex:Nw,complexWithOddIndex:Ew,computeConv2DInfo:Ae,computeConv3DInfo:gr,computeDefaultPad:Wp,computeDilation2DInfo:rl,computeOptimalWindowSize:Zu,computeOutAndReduceShapes:Ne,computeOutShape:fs,computePool2DInfo:Pn,computePool3DInfo:Ps,convertConv2DDataFormat:Os,decodeEinsumEquation:Hf,eitherStridesOrDilationsAreOne:Ve,expandShapeToKeepDim:xe,exponent:Aw,exponents:Dw,fromStringArrayToUint8:jw,fromUint8ToStringArray:Fs,getAxesPermutation:oe,getBroadcastDims:qi,getComplexWithIndex:Gf,getEinsumComputePath:qf,getEinsumPermutation:Xf,getFusedBiasGradient:yf,getFusedDyActivation:xf,getImageCenter:Mf,getInnerMostAxes:he,getPermuted:ul,getRaggedRank:kw,getReductionAxes:Se,getReshaped:cl,getReshapedPermuted:hl,getRowPartitionTypesHelper:vw,getSliceBeginCoords:Pf,getSliceSize:Of,getSparseFillEmptyRowsIndicesDenseShapeMismatch:Fw,getSparseFillEmptyRowsNegativeIndexErrorMessage:Mw,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:Pw,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:Lw,getSparseReshapeInputOutputMismatchErrorMessage:zw,getSparseReshapeInputOutputMultipleErrorMessage:Vw,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:Ow,getSparseReshapeNegativeOutputDimErrorMessage:Bw,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:Gw,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:wd,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:Uw,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:Ww,getUndoAxesPermutation:mr,isIdentityPermutation:Kf,log:jk,mergeRealAndImagArrays:As,prepareAndValidate:$f,prepareSplitSize:Yf,segment_util:ED,shouldFuse:wf,slice_util:vD,splitRealAndImagArrays:Tw,stridesOrDilationsArePositive:Yr,tupleValuesAreOne:Kr,upcastType:cn,validateDefaultValueShape:$w,validateInput:nR,validateUpdateShape:ew,warn:mn},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */fD();/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qw={kernelName:Uc,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>E(n,ll(rt(e,"float32"),-1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DD={kernelName:ca,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>{const s=Jt(rt(e,"float32")),r=Le(yt(Mt(1),s));return ce(gt(n,r))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AD={kernelName:ua,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>{const s=Le(yt(Jt(rt(e,"float32")),1));return gt(n,s)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FD={kernelName:ro,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,r=Ct(e.shape,s.shape);return{a:()=>{let a=n;const l=Se(e.shape,r);return l.length>0&&(a=pt(a,l)),A(a,e.shape)},b:()=>{let a=n;const l=Se(s.shape,r);return l.length>0&&(a=pt(a,l)),A(a,s.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MD={kernelName:Zd,saveAllInputs:!0,gradFunc:(n,t)=>{const e={};return t.forEach((s,r)=>{e[r]=()=>n.clone()}),e}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PD={kernelName:Wc,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Rt(e)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OD={kernelName:Gc,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Rt(e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BD={kernelName:ha,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>gt(n,Le(yt(Mt(1),Jt(rt(e,"float32")))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LD={kernelName:da,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>{const s=Le(Y(Mt(1),Jt(rt(e,"float32"))));return gt(n,s)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VD={kernelName:ga,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,r=Ct(e.shape,s.shape);return{a:()=>{const a=Y(Jt(e),Jt(s));let l=E(n,gt(s,a));const c=Se(e.shape,r);return c.length>0&&(l=pt(l,c)),A(l,e.shape)},b:()=>{const a=Y(Jt(e),Jt(s));let l=ce(E(n,gt(e,a)));const c=Se(s.shape,r);return c.length>0&&(l=pt(l,c)),A(l,s.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zD={kernelName:pa,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>gt(n,Y(Jt(rt(e,"float32")),1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UD={kernelName:fa,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>gt(n,yt(Mt(1),Jt(rt(e,"float32"))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WD(n,t,e,s,r,i){const o=$(n,"dy","avgPool3dGrad"),a=$(t,"input","avgPool3dGrad");let l=o,c=a,u=!1;a.rank===4&&(u=!0,l=A(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),c=A(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),S(l.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`),S(c.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${c.rank}.`),nn("avgPool3dGrad",r,i);const h={dy:l,input:c},d={filterSize:e,strides:s,pad:r,dimRoundingMode:i},p=R.runKernel(np,h,d);return u?A(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}const GD=F({avgPool3dGrad_:WD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HD={kernelName:Xc,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{filterSize:r,strides:i,pad:o,dimRoundingMode:a}=e;return{x:()=>GD(n,s,r,i,o,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XD(n,t,e,s,r){const i=$(n,"dy","avgPoolGrad"),o=$(t,"input","avgPoolGrad");S(o.rank===i.rank,()=>`Rank of input (${o.rank}) does not match rank of dy (${i.rank})`);let a=o,l=i,c=!1;o.rank===3&&(c=!0,a=A(o,[1,o.shape[0],o.shape[1],o.shape[2]]),l=A(i,[1,i.shape[0],i.shape[1],i.shape[2]])),S(l.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`),S(a.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${a.rank}.`);const u={dy:l,input:a},h={filterSize:e,strides:s,pad:r},d=R.runKernel(ep,u,h);return c?A(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const jD=F({avgPoolGrad_:XD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qD={kernelName:Hc,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{filterSize:r,strides:i,pad:o}=e;return{x:()=>jD(n,s,r,i,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KD={kernelName:jc,inputsToSave:["a","b"],gradFunc:(n,t,e)=>{const[s,r]=t,{transposeA:i,transposeB:o}=e;return!i&&!o?{a:()=>Ft(n,r,!1,!0),b:()=>Ft(s,n,!0,!1)}:!i&&o?{a:()=>Ft(n,r,!1,!1),b:()=>Ft(n,s,!0,!1)}:i&&!o?{a:()=>Ft(r,n,!1,!0),b:()=>Ft(s,n,!1,!1)}:{a:()=>Ft(r,n,!0,!0),b:()=>Ft(n,s,!0,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YD={kernelName:qc,gradFunc:(n,t,e)=>{const{blockShape:s,crops:r}=e;return{x:()=>sf(n,s,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JD={kernelName:Wk,gradFunc:(n,t,e)=>{const s=e,r=s.inputShape,i=s.shape,o=Array.from(i);for(let l=r.length-1;l>=0;l--)if(r[l]===i[l])o[l]=1;else if(r[l]!==1)throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${i}].`);const a=[];for(let l=0;l<o.length;l++)o[l]>1&&a.push(l);return{x:()=>pt(n,a,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZD={kernelName:ma,gradFunc:n=>({x:()=>n.clone()})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QD={kernelName:xa,gradFunc:n=>({x:()=>Rt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tA={kernelName:ya,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{clipValueMin:r,clipValueMax:i}=e;return{x:()=>je(Rs(li(s,r),oo(s,i)),n,Rt(n))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eA={kernelName:Kc,inputsToSave:["x"],gradFunc:qw.gradFunc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nA={kernelName:Yc,saveAllInputs:!0,gradFunc:(n,t,e)=>{const s=t.map(l=>l.shape),{axis:r}=e,i=$t(r,t[0].shape)[0],o=s.map(l=>l[i]);return bn(n,o,i).map(l=>()=>l)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sA={kernelName:Jc,inputsToSave:["x","filter"],gradFunc:(n,t,e)=>{const[s,r]=t,{dilations:i,strides:o,pad:a,dataFormat:l}=e;return S(Kr(i),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`),{x:()=>Xp(s.shape,n,r,o,a,l),filter:()=>mf(s,n,r.shape,o,a,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rA={kernelName:Zc,inputsToSave:["dy","filter"],gradFunc:(n,t,e)=>{const[s,r]=t,{strides:i,pad:o,dataFormat:a,dimRoundingMode:l}=e;return{dy:()=>Jr(n,r,i,o,a,1,l),filter:()=>mf(n,s,r.shape,i,o,a,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iA(n,t,e,s,r){let i=n;n.rank===4&&(i=A(n,[1,n.shape[0],n.shape[1],n.shape[2],n.shape[3]]));let o=t;o.rank===4&&(o=A(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),S(i.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${i.shape}.`),S(o.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${o.shape}.`),S(e.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${e}.`),S(i.shape[4]===e[3],()=>`Error in conv3dDerFilter: depth of input ${i.shape[4]}) must match input depth in filter (${e[3]}.`),S(o.shape[4]===e[4],()=>`Error in conv3dDerFilter: depth of dy (${o.shape[4]}) must match output depth for filter (${e[4]}).`);const a={x:i,dy:o},l={strides:s,pad:r,filterShape:e};return R.runKernel(ap,a,l)}const oA=F({conv3DBackpropFilter_:iA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aA={kernelName:Qc,inputsToSave:["x","filter"],gradFunc:(n,t,e)=>{const{dilations:s,strides:r,pad:i}=e;S(Kr(s),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);const[o,a]=t;return{x:()=>D0(o.shape,n,a,r,i),filter:()=>oA(o,n,a.shape,r,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lA={kernelName:ba,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>E(ce(J0(rt(e,"float32"))),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cA={kernelName:wa,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>E(Z0(rt(e,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uA={kernelName:tu,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{axis:r,exclusive:i,reverse:o}=e;return{x:()=>{const a=oe([r],s.rank);let l=F0(n,r,i,!o);return a!=null&&(l=Et(l,a)),l}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hA={kernelName:eu,inputsToSave:["x","filter"],gradFunc:(n,t,e)=>{const{dilations:s,strides:r,pad:i,dimRoundingMode:o}=e,a=s??[1,1];S(Kr(a),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`);const[l,c]=t;return S(l.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`),S(c.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${c.rank}.`),S(l.shape[3]===c.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${c.shape[2]}.`),S(Ve(r,a),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${r} and dilations '${a}'.`),nn("depthwiseConv2d",i,o),{x:()=>CR(l.shape,n,c,r,i,a,o),filter:()=>bR(l,n,c.shape,r,i,a,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dA={kernelName:nu,inputsToSave:["x","filter"],gradFunc:(n,t,e)=>{const[s,r]=t,i={x:s,filter:r,dy:n},o={x:s,filter:r,dy:n};return{x:()=>R.runKernel(nd,i,e),filter:()=>R.runKernel(sd,o,e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pA={kernelName:_a,outputsToSave:[!0],gradFunc:(n,t)=>{const[e]=t,s={dy:n,y:e};return{x:()=>R.runKernel(mp,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fA={kernelName:Sa,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t,s=E(bs(ce(Jt(e))),2/Math.sqrt(Math.PI));return{x:()=>E(n,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gA={kernelName:Ia,outputsToSave:[!0],gradFunc:(n,t)=>{const[e]=t;return{x:()=>E(n,e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mA={kernelName:ru,inputsToSave:["input"],gradFunc:(n,t)=>{const[e]=t;return{input:()=>A(n,e.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xA={kernelName:va,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>E(n,bs(e))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yA={kernelName:ka,gradFunc:n=>({x:()=>Rt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bA={kernelName:$a,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,r=Ct(e.shape,s.shape);return{a:()=>{const a=gt(n,rt(s,"float32")),l=Se(e.shape,r);return l.length>0?A(pt(a,l),e.shape):a},b:()=>{let a=E(n,rt(e,"float32"));const l=Se(s.shape,r);l.length>0&&(a=A(pt(a,l),s.shape));const c=Jt(s);return ce(gt(a,rt(c,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wA={kernelName:iu,inputsToSave:["x","mean","variance","scale"],gradFunc:(n,t,e)=>{const{varianceEpsilon:s}=e,[r,i,o,a]=t,l=a??Mt(1),c=Se(i.shape,r.shape),u=[];if(i.rank===1){for(let b=0;b<r.shape.length-1;++b)u.push(r.shape[b]);u.push(1)}const h=yt(r,i),d=E(n,l),p=q0(Y(o,Mt(s))),f=E(E(E(p,p),p),Mt(-.5));return{x:()=>i.rank===1?A(E(E(n,Yn(A(p,[1,1,1,i.shape[0]]),u)),l),r.shape):A(E(E(n,p),l),r.shape),mean:()=>{let b=E(E(p,Mt(-1)),d);return i.rank===1&&(b=pt(b,c)),A(b,i.shape)},variance:()=>{let b=E(E(f,h),d);return i.rank===1&&(b=pt(b,c)),A(b,i.shape)},scale:()=>{const b=E(h,p);let C=E(n,b);return i.rank===1&&(C=pt(C,c)),A(C,i.shape)},offset:()=>{let b=n;return i.rank===1&&(b=pt(b,c)),A(b,i.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CA={kernelName:ou,inputsToSave:["x","indices"],gradFunc:(n,t,e)=>{const[s,r]=t,{axis:i,batchDims:o}=e,a=$t(i,s.shape)[0],l=(c,u,h)=>()=>{const d=c.shape,p=u.size,f=d.slice(0,a),m=f.length,g=d.slice(i,d.length).slice(1),x=g.length,y=Ax(0,m),w=Ax(m+1,m+1+x),b=Fx([f,[p],g]),C=A(h,b),_=A(u,[p]),I=Fx([[m],y,w]),v=Et(C,I);let k=sw(v,_,c.shape[a]);const T=mr(I);return k=Et(k,T),k};if(o===1){const c=s.shape[0],u=s.split(c,0);return{x:()=>Ds(u.map((p,f)=>l(p,r.slice(f,1),n.slice(f,1))())).reshape(s.shape),indices:()=>r}}else return{x:l(s,r,n),indices:()=>r}}};function Ax(n,t){const e=[];for(let s=n;s<t;++s)e.push(s);return e}function Fx(n){const t=[];for(let e=0;e<n.length;++e)for(let s=0;s<n[e].length;++s)t.push(n[e][s]);return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _A={kernelName:Ta,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t;return{a:()=>Rt(e),b:()=>Rt(s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SA={kernelName:Na,gradFunc:n=>({x:()=>rt(n,"float32")})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IA={kernelName:Ea,gradFunc:n=>({x:()=>Rt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vA={kernelName:Ra,gradFunc:n=>({x:()=>Rt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kA={kernelName:Da,gradFunc:n=>({x:()=>Rt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $A={kernelName:lu,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{alpha:r}=e,i=Cn(s,0);return{x:()=>je(i,n,E(n,r))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TA={kernelName:Fa,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>gt(n,Y(e,1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NA={kernelName:Aa,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>gt(n,rt(e,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EA={kernelName:Hk,inputsToSave:[],outputsToSave:[!0],gradFunc:(n,t,e)=>{const[s]=t,{axis:r}=e;return{logits:()=>{const o=bs(s);return yt(n,E(pt(n,r,!0),o))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RA(n,t,e,s=5,r=1,i=1,o=.5){const a={x:n,y:t,dy:e},l={depthRadius:s,bias:r,alpha:i,beta:o};return R.runKernel(_p,a,l)}const DA=F({localResponseNormalizationBackprop_:RA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AA={kernelName:fu,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{const[s,r]=t,{depthRadius:i,bias:o,alpha:a,beta:l}=e;return{x:()=>DA(s,r,n,i,o,a,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kw(n,t,e,s){return t.rank<e.rank&&(t=A(t,xe(t.shape,s))),n.rank<e.rank&&(n=A(n,xe(n.shape,s))),{x:()=>E(n,rt(ys(e,t),n.dtype))}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mx={kernelName:gu,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{const s=e,{reductionIndices:r}=s,i=t[0],o=t[1],a=$t(r,i.shape),l=Kw(n,o,i,a);return{x:()=>l.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FA={kernelName:Ma,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t;return{a:()=>E(n,rt(li(e,s),"float32")),b:()=>E(n,rt(gc(e,s),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MA(n,t,e,s,r,i,o){const a=$(n,"dy","maxPool3dGrad"),l=$(t,"input","maxPool3dGrad"),c=$(e,"output","maxPool3dGrad");let u=a,h=l,d=c,p=!1;l.rank===4&&(p=!0,u=A(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]]),h=A(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),d=A(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),S(u.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`),S(h.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`),S(d.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`),nn("maxPool3dGrad",i,o);const f={dy:u,input:h,output:d},m={filterSize:s,strides:r,pad:i,dimRoundingMode:o},g=R.runKernel(Ip,f,m);return p?A(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}const PA=F({maxPool3dGrad_:MA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OA={kernelName:xu,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{const[s,r]=t,{filterSize:i,strides:o,pad:a,dimRoundingMode:l}=e;return{x:()=>PA(n,s,r,i,o,a,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BA(n,t,e,s,r,i,o){const a=$(n,"dy","maxPoolGrad"),l=$(t,"input","maxPoolGrad"),c=$(e,"output","maxPoolGrad");S(l.rank===a.rank,()=>`Rank of input (${l.rank}) does not match rank of dy (${a.rank})`),S(a.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${a.rank}.`),S(l.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`),nn("maxPoolGrad",i,o);const u={dy:a,input:l,output:c},h={filterSize:s,strides:r,pad:i,dimRoundingMode:o};return R.runKernel(Sp,u,h)}const LA=F({maxPoolGrad_:BA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VA={kernelName:mu,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{const[s,r]=t,{filterSize:i,strides:o,pad:a}=e;return{x:()=>LA(n,s,r,i,o,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zA={kernelName:yu,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{axis:r}=e,i=$t(r,s.shape),a=Ne(s.shape,i)[1],l=W(a);return{x:()=>{const u=s.shape.slice();i.forEach(p=>{u[p]=1});const h=A(n,u);return gt(E(h,yr(s.shape,"float32")),l)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UA={kernelName:bu,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{const s=e,{axis:r}=s,[i,o]=t,a=$t(r,i.shape),l=Kw(n,o,i,a);return{x:()=>l.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WA={kernelName:Pa,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t;return{a:()=>E(n,rt(oo(e,s),"float32")),b:()=>E(n,rt(Cn(e,s),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GA={kernelName:wu,inputsToSave:["x"],gradFunc:(n,t,e)=>{const s=t[0],{paddings:r}=e,i=r.map(o=>o[0]);return{x:()=>qt(n,i,s.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HA={kernelName:Oa,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,r=Ct(e.shape,s.shape);return{a:()=>{const a=Se(e.shape,r);return a.length>0?A(pt(n,a),e.shape):n},b:()=>{const a=E(n,ce(Yu(gt(e,s)))),l=Se(s.shape,r);return l.length>0?A(pt(a,l),s.shape):a}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XA={kernelName:Ba,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,r=Ct(e.shape,s.shape);return{a:()=>{const a=E(n,rt(s,"float32")),l=Se(e.shape,r);return l.length>0?A(pt(a,l),e.shape):a},b:()=>{const a=E(n,rt(e,"float32")),l=Se(s.shape,r);return l.length>0?A(pt(a,l),s.shape):a}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jA={kernelName:Cu,gradFunc:n=>({x:()=>ce(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qA={kernelName:Iu,inputsToSave:["indices"],gradFunc:(n,t)=>{const e=t[0];return{indices:()=>$e(e.shape,"float32")}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KA={kernelName:Su,gradFunc:n=>({x:()=>Rt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YA={kernelName:vu,saveAllInputs:!0,gradFunc:(n,t,e)=>{const{axis:s}=e;return ti(n,s).map(i=>()=>i)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Px={kernelName:ku,inputsToSave:["x"],gradFunc:(n,t,e)=>{const s=t[0],{paddings:r}=e,i=r.map(o=>o[0]);return{x:()=>qt(n,i,s.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JA={kernelName:La,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(n,t)=>{const[e,s,r]=t,i=e,o=s,a=Ct(i.shape,o.shape);return{a:()=>{const u=rt(o,"float32");let h=E(n,E(u,Zr(i,yt(u,Mt(1)))));const d=Se(i.shape,a);return d.length>0&&(h=pt(h,d)),A(h,i.shape)},b:()=>{const u=Cn(i,0),h=je(u,ws(i),Rt(i));let d=E(n,E(r,h));const p=Se(o.shape,a);return p.length>0&&(d=pt(d,p)),A(d,o.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZA={kernelName:$u,inputsToSave:["x","alpha"],gradFunc:(n,t)=>{const[e,s]=t,r=Cn(e,0);return{x:()=>je(r,n,E(n,s)),alpha:()=>{let i=je(r,Rt(n),E(n,e));const o=Se(s.shape,n.shape);return o.length>0&&(i=pt(i,o)),A(i,s.shape)}}}};/**
 * @license
 * Copyright 2022 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QA(n,t,e){const s=n.shape.slice();s[e]=1;const r=A(t,s),i=xd(n,e,!0,!1),o=xd(n,e,!0,!0),a=E(i,o);return E(r,a)}function tF(n,t,e){const s=n.shape.length,r=s-e.length,i=oe(e,s);let o=n;i!=null&&(o=Et(n,i));const a=o.shape.slice(),c=a.splice(s-e.length,e.length).reduce((d,p)=>d*p,1);a.push(c);const u=o.reshape(a);let h=QA(u,t,r);if(h=h.reshape(o.shape),i!=null){const d=mr(i);h=Et(h,d)}return h}const eF={kernelName:Tu,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{axis:r}=e;let i=[];return r==null?i=s.shape.map((o,a)=>a):typeof r=="number"?i=[r]:i=r,{x:()=>tF(s,n,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nF={kernelName:Ca,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,r=Ct(e.shape,s.shape);return{a:()=>{const a=gt(n,rt(s,"float32")),l=Se(e.shape,r);return l.length>0?A(pt(a,l),e.shape):a},b:()=>{let a=E(n,rt(e,"float32"));const l=Se(s.shape,r);l.length>0&&(a=A(pt(a,l),s.shape));const c=Jt(s);return ce(gt(a,rt(c,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sF={kernelName:Va,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>gt(n,ce(Jt(e)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rF={kernelName:Ua,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t,s=E(oo(e,6),ll(e));return{x:()=>E(n,rt(s,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iF={kernelName:za,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>E(n,rt(ll(e),"float32"))}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oF={kernelName:Nu,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>A(n,e.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aF={kernelName:Ru,inputsToSave:["images"],gradFunc:(n,t,e)=>{const[s]=t,r={dy:n,images:s};return{images:()=>R.runKernel(Rp,r,e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lF={kernelName:Eu,inputsToSave:["images"],gradFunc:(n,t,e)=>{const[s]=t,r={dy:n,images:s};return{images:()=>R.runKernel(Ep,r,e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cF={kernelName:Du,gradFunc:(n,t,e)=>{const{dims:s}=e,r=$t(s,n.shape);return{x:()=>Qr(n,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uF={kernelName:Wa,gradFunc:n=>({x:()=>Rt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hF={kernelName:Ga,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>ce(gt(n,E(Zr(e,1.5),2)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dF={kernelName:Au,inputsToSave:["condition"],gradFunc:(n,t)=>{const[e]=t;return{condition:()=>rt(Rt(e),"float32"),t:()=>E(n,rt(e,n.dtype)),e:()=>E(n,rt(Qp(e),n.dtype))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pF={kernelName:Ha,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>{const s=Cn(e,Mt(0)),r=Mt(Qu),i=Mt(th),o=E(n,i),a=E(E(n,r),bs(rt(e,"float32")));return je(s,o,a)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fF={kernelName:Ka,outputsToSave:[!0],gradFunc:(n,t)=>{const[e]=t;return{x:()=>E(n,E(e,yt(Mt(1),e)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gF={kernelName:qa,gradFunc:n=>({x:()=>Rt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mF={kernelName:Xa,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>E(jp(rt(e,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xF={kernelName:ja,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>E(A0(rt(e,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yF={kernelName:Fu,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{begin:r,size:i}=e,o=s.shape,[a,l]=Ju(s,r,i),c=[];for(let u=0;u<n.rank;u++)c.push([a[u],o[u]-a[u]-l[u]]);return{x:()=>nf(n,c)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bF={kernelName:Bu,outputsToSave:[!0],gradFunc:(n,t,e)=>{const[s]=t,{dim:r}=e,i=!0,o=E(n,s);return{logits:()=>yt(o,E(pt(o,[r],i),s))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wF={kernelName:Ya,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>E(n,io(e))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ox={kernelName:Pu,gradFunc:(n,t,e)=>{const{blockShape:s,paddings:r}=e;return{x:()=>Hp(n,s,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bx={kernelName:Ou,gradFunc:(n,t,e)=>{const{axis:s}=e;return{x:()=>Qe(n,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CF={kernelName:Ja,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>gt(n,E(Le(rt(e,"float32")),2))}}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _F={kernelName:Dp,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>E(n,E(rt(e,"float32"),2))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SF={kernelName:Za,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,r=Mt(2);return{a:()=>E(n,E(r,yt(e,s))),b:()=>E(n,E(r,yt(s,e)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IF={kernelName:sl,gradFunc:n=>({x:()=>Rt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vF={kernelName:Qa,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,r=Ct(e.shape,s.shape);return{a:()=>{let a=n;const l=Se(e.shape,r);return l.length>0&&(a=pt(a,l)),A(a,e.shape)},b:()=>{let a=n;const l=Se(s.shape,r);return l.length>0&&(a=pt(a,l)),A(ce(a),s.shape)}}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kF={kernelName:Mu,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,r=s.shape.slice(),{axis:i}=e;$t(i,s.shape).forEach(c=>{r[c]=1});const a=A(n,r),l=E(a,yr(s.shape,"float32"));return{x:()=>l}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $F={kernelName:tl,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>gt(n,Jt(jp(e)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TF={kernelName:el,outputsToSave:[!0],gradFunc:(n,t)=>{const[e]=t;return{x:()=>E(yt(Mt(1),Jt(e)),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NF={kernelName:nl,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{reps:r}=e;return{x:()=>{let o=Rt(s);if(s.rank===1)for(let a=0;a<r[0];++a)o=Y(o,qt(n,[a*s.shape[0]],[s.shape[0]]));else if(s.rank===2)for(let a=0;a<r[0];++a)for(let l=0;l<r[1];++l)o=Y(o,qt(n,[a*s.shape[0],l*s.shape[1]],[s.shape[0],s.shape[1]]));else if(s.rank===3)for(let a=0;a<r[0];++a)for(let l=0;l<r[1];++l)for(let c=0;c<r[2];++c)o=Y(o,qt(n,[a*s.shape[0],l*s.shape[1],c*s.shape[2]],[s.shape[0],s.shape[1],s.shape[2]]));else if(s.rank===4)for(let a=0;a<r[0];++a)for(let l=0;l<r[1];++l)for(let c=0;c<r[2];++c)for(let u=0;u<r[3];++u)o=Y(o,qt(n,[a*s.shape[0],l*s.shape[1],c*s.shape[2],u*s.shape[3]],[s.shape[0],s.shape[1],s.shape[2],s.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${s.rank} tensors yet.`);return o}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EF={kernelName:Bi,gradFunc:(n,t,e)=>{const s=e,{perm:r}=s,i=mr(r);return{x:()=>Et(n,i)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RF={kernelName:Lu,gradFunc:(n,t,e)=>{const s=e,{axis:r}=s;return{value:()=>Ds(n,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DF={kernelName:Vu,inputsToSave:["segmentIds"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>AF(n,e)}}};function AF(n,t){const e=xr(t,Rt(t)),s=Yp(n,e);let r=li(t,Mt(0,"int32"));const i=s.rank-r.rank;for(let a=0;a<i;++a)r=Je(r,a+1);r=Rs(r,yr(s.shape,"bool"));const o=Rt(s);return je(r,s,o)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FF={kernelName:zu,gradFunc:n=>({x:()=>Rt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MF=[qw,DD,AD,FD,MD,PD,OD,BD,LD,VD,zD,UD,HD,qD,KD,YD,JD,ZD,QD,tA,eA,nA,rA,sA,aA,lA,cA,uA,hA,dA,nF,pA,fA,gA,mA,xA,bA,yA,wA,CA,_A,SA,IA,vA,kA,$A,TA,NA,EA,AA,Mx,Mx,FA,OA,VA,zA,UA,WA,GA,HA,XA,jA,qA,KA,YA,Px,Px,JA,ZA,eF,sF,rF,iF,oF,aF,lF,cF,uF,hF,dF,pF,fF,gF,mF,xF,yF,bF,wF,Ox,Ox,Bx,Bx,CF,SF,_F,IF,vF,kF,$F,TF,NF,EF,RF,DF,FF];for(const n of MF)qk(n);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.abs=function(){return this.throwIfDisposed(),We(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.acos=function(){return this.throwIfDisposed(),hT(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.acosh=function(){return this.throwIfDisposed(),pT(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.add=function(n){return this.throwIfDisposed(),Y(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.all=function(n,t){return this.throwIfDisposed(),N0(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.any=function(n,t){return this.throwIfDisposed(),gd(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.argMax=function(n){return this.throwIfDisposed(),jo(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.argMin=function(n){return this.throwIfDisposed(),yT(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.asScalar=function(){return this.throwIfDisposed(),S(this.size===1,()=>"The array must have only 1 element."),A(this,[])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.asType=function(n){return this.throwIfDisposed(),rt(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.as1D=function(){return this.throwIfDisposed(),A(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.as2D=function(n,t){return this.throwIfDisposed(),A(this,[n,t])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.as3D=function(n,t,e){return this.throwIfDisposed(),A(this,[n,t,e])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.as4D=function(n,t,e,s){return this.throwIfDisposed(),A(this,[n,t,e,s])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.as5D=function(n,t,e,s,r){return this.throwIfDisposed(),A(this,[n,t,e,s,r])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.asin=function(){return this.throwIfDisposed(),wT(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.asinh=function(){return this.throwIfDisposed(),_T(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.atan=function(){return this.throwIfDisposed(),IT(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.atan2=function(n){return this.throwIfDisposed(),kT(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.atanh=function(){return this.throwIfDisposed(),TT(this)};U().prototype.avgPool=function(n,t,e,s){return this.throwIfDisposed(),Gp(this,n,t,e,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.batchToSpaceND=function(n,t){return this.throwIfDisposed(),Hp(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.batchNorm=function(n,t,e,s,r){return this.throwIfDisposed(),Xu(this,n,t,e,s,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.broadcastTo=function(n){return this.throwIfDisposed(),Mo(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.cast=function(n){return this.throwIfDisposed(),rt(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.ceil=function(){return this.throwIfDisposed(),eN(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.clipByValue=function(n,t){return this.throwIfDisposed(),wn(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.concat=function(n,t){return this.throwIfDisposed(),n instanceof ye&&(n=[n]),Qe([this,...n],t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.conv1d=function(n,t,e,s,r,i){return this.throwIfDisposed(),E0(this,n,t,e,s,r,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.conv2dTranspose=function(n,t,e,s,r){return this.throwIfDisposed(),R0(this,n,t,e,s,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.conv2d=function(n,t,e,s,r,i){return this.throwIfDisposed(),Jr(this,n,t,e,s,r,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.cos=function(){return this.throwIfDisposed(),jp(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.cosh=function(){return this.throwIfDisposed(),A0(this)};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.cumprod=function(n,t,e){return this.throwIfDisposed(),xd(this,n,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.cumsum=function(n,t,e){return this.throwIfDisposed(),F0(this,n,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.depthToSpace=function(n,t){return this.throwIfDisposed(),kN(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.depthwiseConv2d=function(n,t,e,s,r,i){return this.throwIfDisposed(),qp(this,n,t,e,s,r,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.dilation2d=function(n,t,e,s,r){return this.throwIfDisposed(),NN(this,n,t,e,s,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.divNoNan=function(n){return this.throwIfDisposed(),FN(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.div=function(n){return this.throwIfDisposed(),gt(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.dot=function(n){return this.throwIfDisposed(),PN(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.elu=function(){return this.throwIfDisposed(),qu(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.equal=function(n){return this.throwIfDisposed(),ys(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.erf=function(){return this.throwIfDisposed(),M0(this)};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.euclideanNorm=function(n,t){return this.throwIfDisposed(),qN(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.exp=function(){return this.throwIfDisposed(),bs(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.expandDims=function(n){return this.throwIfDisposed(),Je(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.expm1=function(){return this.throwIfDisposed(),ZN(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.fft=function(){return this.throwIfDisposed(),tw(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.flatten=function(){return this.throwIfDisposed(),A(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.floor=function(){return this.throwIfDisposed(),Yu(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.floorDiv=function(n){return this.throwIfDisposed(),T0(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.gather=function(n,t,e){return this.throwIfDisposed(),Yp(this,n,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.greaterEqual=function(n){return this.throwIfDisposed(),li(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.greater=function(n){return this.throwIfDisposed(),Cn(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.ifft=function(){return this.throwIfDisposed(),yd(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.irfft=function(){return this.throwIfDisposed(),W2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.isFinite=function(){return this.throwIfDisposed(),aE(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.isInf=function(){return this.throwIfDisposed(),cE(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.isNaN=function(){return this.throwIfDisposed(),hE(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.leakyRelu=function(n){return this.throwIfDisposed(),Zp(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.lessEqual=function(n){return this.throwIfDisposed(),oo(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.less=function(n){return this.throwIfDisposed(),gc(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.localResponseNormalization=function(n,t,e,s){return this.throwIfDisposed(),mE(this,n,t,e,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.logSigmoid=function(){return this.throwIfDisposed(),SE(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.logSoftmax=function(n){return this.throwIfDisposed(),V0(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.logSumExp=function(n,t){return this.throwIfDisposed(),z0(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.log=function(){return this.throwIfDisposed(),ws(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.log1p=function(){return this.throwIfDisposed(),L0(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.logicalAnd=function(n){return this.throwIfDisposed(),Rs(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.logicalNot=function(){return this.throwIfDisposed(),Qp(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.logicalOr=function(n){return this.throwIfDisposed(),U0(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.logicalXor=function(n){return this.throwIfDisposed(),RE(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.matMul=function(n,t,e){return this.throwIfDisposed(),Ft(this,n,t,e)};U().prototype.maxPool=function(n,t,e,s){return this.throwIfDisposed(),tf(this,n,t,e,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.max=function(n,t){return this.throwIfDisposed(),Zn(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.maximum=function(n){return this.throwIfDisposed(),xr(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.mean=function(n,t){return this.throwIfDisposed(),me(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.min=function(n,t){return this.throwIfDisposed(),fc(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.minimum=function(n){return this.throwIfDisposed(),Yo(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.mirrorPad=function(n,t){return this.throwIfDisposed(),LE(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.mod=function(n){return this.throwIfDisposed(),zE(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.mul=function(n){return this.throwIfDisposed(),E(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.neg=function(){return this.throwIfDisposed(),ce(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.norm=function(n,t,e){return this.throwIfDisposed(),Ku(this,n,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.notEqual=function(n){return this.throwIfDisposed(),mc(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.oneHot=function(n,t=1,e=0){return this.throwIfDisposed(),W0(this,n,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.onesLike=function(){return this.throwIfDisposed(),Mn(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.pad=function(n,t){return this.throwIfDisposed(),nf(this,n,t)};U().prototype.pool=function(n,t,e,s,r,i){return this.throwIfDisposed(),JE(this,n,t,e,s,r,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.pow=function(n){return this.throwIfDisposed(),Zr(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.prelu=function(n){return this.throwIfDisposed(),rf(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.prod=function(n,t){return this.throwIfDisposed(),t2(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.reciprocal=function(){return this.throwIfDisposed(),S2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.relu=function(){return this.throwIfDisposed(),ui(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.relu6=function(){return this.throwIfDisposed(),X0(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.reshapeAs=function(n){return this.throwIfDisposed(),A(this,n.shape)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.reshape=function(n){return this.throwIfDisposed(),A(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.resizeBilinear=function(n,t,e){return this.throwIfDisposed(),iw(this,n,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.resizeNearestNeighbor=function(n,t,e){return this.throwIfDisposed(),ow(this,n,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.reverse=function(n){return this.throwIfDisposed(),Qr(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.rfft=function(){return this.throwIfDisposed(),X2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.round=function(){return this.throwIfDisposed(),j0(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.rsqrt=function(){return this.throwIfDisposed(),q0(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.selu=function(){return this.throwIfDisposed(),K0(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.separableConv2d=function(n,t,e,s,r,i){return this.throwIfDisposed(),Y0(this,n,t,e,s,r,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.sigmoid=function(){return this.throwIfDisposed(),io(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.sign=function(){return this.throwIfDisposed(),D2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.sin=function(){return this.throwIfDisposed(),J0(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.sinh=function(){return this.throwIfDisposed(),Z0(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.slice=function(n,t){return this.throwIfDisposed(),qt(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.softmax=function(n){return this.throwIfDisposed(),gf(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.softplus=function(){return this.throwIfDisposed(),il(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.spaceToBatchND=function(n,t){return this.throwIfDisposed(),sf(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.split=function(n,t){return this.throwIfDisposed(),bn(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.sqrt=function(){return this.throwIfDisposed(),Le(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.square=function(){return this.throwIfDisposed(),Jt(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.squaredDifference=function(n){return this.throwIfDisposed(),q2(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.squeeze=function(n){return this.throwIfDisposed(),al(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.stack=function(n,t){this.throwIfDisposed();const e=n instanceof ye?[this,n]:[this,...n];return Ds(e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.step=function(n){return this.throwIfDisposed(),ll(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.stridedSlice=function(n,t,e,s,r,i,o,a){return this.throwIfDisposed(),Q2(this,n,t,e,s,r,i,o,a)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.sub=function(n){return this.throwIfDisposed(),yt(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.sum=function(n,t){return this.throwIfDisposed(),pt(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.tan=function(){return this.throwIfDisposed(),eR(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.tanh=function(){return this.throwIfDisposed(),Hu(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.tile=function(n){return this.throwIfDisposed(),Yn(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.toBool=function(){return this.throwIfDisposed(),rt(this,"bool")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.toFloat=function(){return this.throwIfDisposed(),rt(this,"float32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.toInt=function(){return this.throwIfDisposed(),rt(this,"int32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.topk=function(n,t){return this.throwIfDisposed(),rR(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.transpose=function(n){return this.throwIfDisposed(),Et(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.unique=function(n){return this.throwIfDisposed(),aR(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.unsortedSegmentSum=function(n,t){return this.throwIfDisposed(),sw(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.unstack=function(n){return this.throwIfDisposed(),ti(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.where=function(n,t){return this.throwIfDisposed(),je(n,this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.zerosLike=function(){return this.throwIfDisposed(),Rt(this)};/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class ls extends Error{constructor(t){super(t),Object.setPrototypeOf(this,ls.prototype)}}class Rn extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Rn.prototype)}}class N extends Error{constructor(t){super(t),Object.setPrototypeOf(this,N.prototype)}}class _t extends Error{constructor(t){super(t),Object.setPrototypeOf(this,_t.prototype)}}class Zf extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Zf.prototype)}}/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Yw{constructor(t){this.maxEntries=t||100,this.cache=new Map}get(t){let e;return this.cache.has(t)&&(e=this.cache.get(t),this.cache.delete(t),this.cache.set(t,e)),e}put(t,e){if(this.cache.has(t))this.cache.delete(t);else if(this.cache.size>=this.maxEntries){const s=this.cache.keys().next().value;this.cache.delete(s)}this.cache.set(t,e)}getMaxEntries(){return this.maxEntries}setMaxEntries(t){if(t<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${t}.`);if(this.maxEntries>t)for(let e=0;e<this.maxEntries-t;e++){const s=this.cache.keys().next().value;this.cache.delete(s)}this.maxEntries=t}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function ei(n,t){if(Array.isArray(n)){let e=[];for(let s=0;s<t;s++)e=e.concat(n);return e}else{const e=new Array(t);return e.fill(n),e}}function cs(n,t){if(!n)throw new Zf(t)}function Lx(n,t){let e=0;for(const s of n)s===t&&e++;return e}function Ze(n){return n.length===1?n[0]:n}function Bt(n){return Array.isArray(n)?n:[n]}function $s(n){const e=n.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return e[0]!=="_"?e:"private"+e}function Dr(n){return n.length<=1||n.indexOf("_")===-1?n:n.replace(/[_]+(\w|$)/g,(t,e)=>e.toUpperCase())}let Sn={};function Qf(n){if(n==null)return null;const t={};return t.className=n.getClassName(),t.config=n.getConfig(),t}function Cd(n){if(!(n==null||typeof n!="object"))if(Array.isArray(n))n.forEach(t=>Cd(t));else{const t=Object.keys(n);for(const e of t){const s=n[e];s!=null&&typeof s=="object"&&(!Array.isArray(s)&&s.type==="ndarray"&&typeof s.value=="number"?n[e]=s.value:Cd(s))}}}function dl(n,t={},e={},s="object",r=!1){if(typeof n=="string"){const i=n;let o;if(i in e)o=e[i];else if(i in Sn)o=Sn[i];else if(o=t[i],o==null)throw new N(`Unknown ${s}: ${n}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return o}else{const i=n;if(i.className==null||i.config==null)throw new N(`${s}: Improper config format: ${JSON.stringify(i)}.
'className' and 'config' must set.`);const o=i.className;let a,l;if(o in e?[a,l]=e[o]:o in Sn?[a,l]=Sn.className:o in t&&([a,l]=t[o]),a==null)throw new N(`Unknown ${s}: ${o}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(l!=null){const c={};for(const p of Object.keys(Sn))c[p]=Sn[p];for(const p of Object.keys(e))c[p]=e[p];const u=i.config;u.customObjects=c;const h=Object.assign({},Sn);for(const p of Object.keys(e))Sn[p]=e[p];Cd(i.config);const d=l(a,i.config,e,r);return Sn=Object.assign({},h),d}else{const c=Object.assign({},Sn);for(const h of Object.keys(e))Sn[h]=e[h];const u=new a(i.config);return Sn=Object.assign({},c),u}}}function PF(n,t){return n<t?-1:n>t?1:0}function Ml(n,t){return-1*PF(n,t)}function sr(n){if(n==null)return n;const t=[];for(const e of n)t.indexOf(e)===-1&&t.push(e);return t}function OF(n){if(n==null)throw new N(`Invalid value in obj: ${JSON.stringify(n)}`);for(const t in n)if(n.hasOwnProperty(t))return!1;return!0}function di(n,t,e){if(e!=null&&n.indexOf(e)<0)throw new N(`${e} is not a valid ${t}.  Valid values are ${n} or null/undefined.`)}function tg(n,t,e=0,s=1/0){return cs(e>=0),cs(s>=e),Array.isArray(n)&&n.length>=e&&n.length<=s&&n.every(r=>typeof r===t)}function Te(n,t){Array.isArray(n)?(S(n.length>0,()=>`${t} is unexpectedly an empty array.`),n.forEach((e,s)=>Te(e,`element ${s+1} of ${t}`))):S(Number.isInteger(n)&&n>0,()=>`Expected ${t} to be a positive integer, but got ${Jw(n)}.`)}function Jw(n){return n===null?"null":Array.isArray(n)?"["+n.map(t=>Jw(t)).join(",")+"]":typeof n=="string"?`"${n}"`:`${n}`}function BF(n,t,e){let s=e!=null?e():Ye(),r;return(...o)=>{const a=e!=null?e():Ye();return a-s<t||(s=a,r=n(...o)),r}}function Zw(n){return n==="relu"?"relu":n==="linear"?"linear":n==="elu"?"elu":null}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let LF=0;function Qw(){return LF++}const Pl={};function eh(n=""){return n in Pl||(Pl[n]=0),Pl[n]+=1,n+Pl[n].toString()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const VF=["channelsFirst","channelsLast"],zF=["nearest","bilinear"],UF=["valid","same","causal"],WF=["max","avg"],GF=["sum","mul","concat","ave"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const Ii=new Map;function de(n){di(VF,"DataFormat",n)}function HF(n){di(zF,"InterpolationFormat",n)}function _n(n){di(UF,"PaddingMode",n)}function t1(n){di(WF,"PoolMode",n)}const Po=[],Vx="/";function Ur(n,t){Po.push(n);try{const e=t();return Po.pop(),e}catch(e){throw Po.pop(),e}}function XF(){return Po.length===0?"":Po.join(Vx)+Vx}function e1(n){if(!s1(n))throw new Error("Not a valid tensor name: '"+n+"'");return XF()+n}function n1(n){if(!s1(n))throw new Error("Not a valid tensor name: '"+n+"'");Ii.has(n)||Ii.set(n,0);const t=Ii.get(n);if(Ii.set(n,Ii.get(n)+1),t>0){const e=`${n}_${t}`;return Ii.set(e,1),e}else return n}const jF=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function s1(n){return!!n.match(jF)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function qF(n){return n===parseInt(n.toString(),10)}function rr(n,t,e){t==null&&(t=0),e==null&&(e=n.length);let s=1;for(let r=t;r<e;++r)s*=n[r];return s}function Yi(n){if(n.length===0)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let e=0;e<n.length;e++){const s=n[e];s<t&&(t=s)}return t}function ar(n){if(n.length===0)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let e=0;e<n.length;e++){const s=n[e];s>t&&(t=s)}return t}function ts(n,t){if(t<n)throw new N(`end (${t}) < begin (${n}) is forbidden.`);const e=[];for(let s=n;s<t;++s)e.push(s);return e}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let Ph;function be(){return Ph==null&&(Ph=I$().epsilon()),Ph}function es(){return"channelsLast"}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function gs(n,t){return rt(n,t)}function pl(n,t=-1){const e=n.shape.slice();return t<0&&(t=e.length+t+1),e.splice(t,0,1),A(n,e)}function KF(n,t){return M(()=>{if(n.shape.length!==2)throw new N(`repeat() expects a rank-2 tensor, but received a rank-${n.shape.length} tensor.`);const e=pl(n,1);return _d(e,[1,t,1])})}function YF(n){const t=[rr(n.shape)];return A(n,t)}function JF(n){if(n.rank<=1)throw new N(`batchFlatten requires a minimum rank of 2. Got rank: ${n.rank}.`);const t=[n.shape[0],rr(n.shape,1)];return A(n,t)}function Wr(n,t,e){return M(()=>{switch(n.rank){case 1:return pf(n,t,e);case 2:return Q0(n,[t,0],[e,n.shape[1]]);case 3:return ff(n,[t,0,0],[e,n.shape[1],n.shape[2]]);case 4:return yc(n,[t,0,0,0],[e,n.shape[1],n.shape[2],n.shape[3]]);case 5:return qt(n,[t,0,0,0,0],[e,n.shape[1],n.shape[2],n.shape[3],n.shape[4]]);case 6:return qt(n,[t,0,0,0,0,0],[e,n.shape[1],n.shape[2],n.shape[3],n.shape[4],n.shape[5]]);default:throw new N(`sliceAlongFirstAxis() received an unsupported tensor rank: ${n.rank}`)}})}function Oh(n,t,e){return M(()=>{switch(n.rank){case 1:return pf(n,t,e);case 2:return Q0(n,[0,t],[n.shape[0],e]);case 3:return ff(n,[0,0,t],[n.shape[0],n.shape[1],e]);case 4:return yc(n,[0,0,0,t],[n.shape[0],n.shape[1],n.shape[2],e]);default:throw new N(`sliceAlongLastAxis() received an unsupported tensor rank: ${n.rank}`)}})}function Ol(n,t,e,s){return M(()=>{switch(n.rank){case 1:return pf(n,t,e);case 2:switch(s){case 1:return Wr(n,t,e);case 2:return Oh(n,t,e);default:throw new N(`The axis is not within the rank of the tensor ${s}`)}case 3:switch(s){case 1:return Wr(n,t,e);case 2:return ff(n,[0,t,0],[n.shape[0],e,n.shape[2]]);case 3:return Oh(n,t,e);default:throw new N(`The axis is not within the rank of the tensor ${s}`)}case 4:switch(s){case 1:return Wr(n,t,e);case 2:return yc(n,[0,t,0,0],[n.shape[0],e,n.shape[2],n.shape[3]]);case 3:return yc(n,[0,0,t,0],[n.shape[0],n.shape[1],e,n.shape[3]]);case 4:return Oh(n,t,e);default:throw new N(`The axis is not within the rank of the tensor ${s}`)}default:throw new N(`sliceAlongLastAxis() received an unsupported tensor rank: ${n.rank}`)}})}function eg(n,t=-1){let e;return t<0&&(e=n[0].rank,e!==0?t=e:t=0),t===n[0].rank&&(t=-1),Qe(n,t)}function zx(n,t){switch(n.rank){case 1:return rN([n,t]);case 2:return oN([n,t],0);case 3:return lN([n,t],0);case 4:return uN([n,t],0);default:throw new N(`concatAlongFirstAxis() received an unsupported tensor rank: ${n.rank}`)}}function _d(n,t){if(Array.isArray(t)||(t=[t]),n.rank!==t.length)throw new N(`The length of input n (${t.length}) does not match the number of dimensions in input x (${n.rank})`);return Yn(n,t)}function nh(n,t=0,e=1,s,r){return b2(n,t,e,s,r)}function ms(n,t,e,s){if(n.rank<2||t.rank<2)throw new _t(`dot requires both inputs to be rank >= 2 but got x shape = ${n.shape} and y shape = ${t.shape}`);if(t.rank>=3){const r=n.shape.slice(-1)[0],i=t.shape.slice(-2)[0];if(r!==i)throw new _t(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${n.shape} and  y shape = ${t.shape}`)}if(n.rank===2&&t.rank===2)return vx({a:n,b:t,transposeA:!1,transposeB:!1,bias:s?Sd(n.rank,s,es()):null,activation:e});{const r=n.shape.slice(),i=r.pop();n=A(n,[-1,i]);const o=t.shape.slice(),a=o.pop(),l=o.pop(),c=[...o,a],u=Array.from({length:t.rank},(f,m)=>m===0?t.rank-2:m<=t.rank-2?m-1:m);t=A(Et(t,u),[l,-1]);const h=[...r,...c];return A(vx({a:n,b:t,transposeA:!1,transposeB:!1,bias:s?Sd(n.rank,s,es()):null,activation:e}),h)}}function r1(n,t,e){return M(()=>(Array.isArray(t)?t=ln(t,"int32"):t=rt(t,"int32"),Yp(n,t,e)))}function fl(n){return E(n,n)}function Sd(n,t,e){const s=t.shape;if(t.rank!==1&&t.rank!==n)throw new N(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${n}`);if(n===5){if(e==="channelsFirst")return s.length===1?A(t,[1,s[0],1,1,1]):A(t,[1,s[3],s[0],s[1],s[2]]);if(e==="channelsLast")return s.length===1?A(t,[1,1,1,1,s[0]]):A(t,[1].concat(s))}else if(n===4){if(e==="channelsFirst")return s.length===1?A(t,[1,s[0],1,1]):A(t,[1,s[2],s[0],s[1]]);if(e==="channelsLast")return s.length===1?A(t,[1,1,1,s[0]]):A(t,[1].concat(s))}else if(n===3){if(e==="channelsFirst")return s.length===1?A(t,[1,s[0],1]):A(t,[1,s[1],s[0]]);if(e==="channelsLast")return s.length===1?A(t,[1,1,s[0]]):A(t,[1].concat(s))}else if(n<3)return t;throw new N(`Unsupported input rank by biasAdd: ${t.rank}`)}function rs(n,t,e){return M(()=>(e==null&&(e=es()),de(e),Y(n,Sd(n.rank,t,e))))}function ZF(n,t=1){if(t!==1)throw new _t(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return qu(n)}function QF(n){return M(()=>gt(n,Y(We(n),1)))}function i1(n,t,e,s){return M(()=>fR(n,t,e,s))}function tM(n){return M(()=>{const t=Y(.5,E(.2,n));return wn(t,0,1)})}function gl(n,t,e=!1){return e?n():t()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const eM=["fanIn","fanOut","fanAvg"],nM=["normal","uniform","truncatedNormal"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function sM(n){di(eM,"FanMode",n)}function rM(n){di(nM,"Distribution",n)}class On extends lo{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class o1 extends On{apply(t,e){return $e(t,e)}}o1.className="Zeros";j(o1);class ng extends On{apply(t,e){return yr(t,e)}}ng.className="Ones";j(ng);class a1 extends On{constructor(t){if(super(),typeof t!="object")throw new N(`Expected argument of type ConstantConfig but got ${t}`);if(t.value===void 0)throw new N(`config must have value set but got ${t}`);this.value=t.value}apply(t,e){return M(()=>E(Mt(this.value),yr(t,e)))}getConfig(){return{value:this.value}}}a1.className="Constant";j(a1);class l1 extends On{constructor(t){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=t.minval||this.DEFAULT_MINVAL,this.maxval=t.maxval||this.DEFAULT_MAXVAL,this.seed=t.seed}apply(t,e){return ol(t,this.minval,this.maxval,e,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}l1.className="RandomUniform";j(l1);class c1 extends On{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if(e=e||"float32",e!=="float32"&&e!=="int32")throw new _t(`randomNormal does not support dType ${e}.`);return nh(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}c1.className="RandomNormal";j(c1);class u1 extends On{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if(e=e||"float32",e!=="float32"&&e!=="int32")throw new _t(`truncatedNormal does not support dType ${e}.`);return nw(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}u1.className="TruncatedNormal";j(u1);class h1 extends On{constructor(t){super(),this.gain=t.gain!=null?t.gain:1}apply(t,e){return M(()=>{if(t.length!==2||t[0]!==t[1])throw new N("Identity matrix initializer can only be used for 2D square matrices.");return E(this.gain,B0(t[0]))})}getConfig(){return{gain:this.gain}}}h1.className="Identity";j(h1);function iM(n,t="channelsLast"){let e,s;if(de(t),n.length===2)e=n[0],s=n[1];else if([3,4,5].indexOf(n.length)!==-1){if(t==="channelsFirst"){const r=rr(n,2);e=n[1]*r,s=n[0]*r}else if(t==="channelsLast"){const r=rr(n,0,n.length-2);e=n[n.length-2]*r,s=n[n.length-1]*r}}else{const r=rr(n);e=Math.sqrt(r),s=Math.sqrt(r)}return[e,s]}class un extends On{constructor(t){if(super(),t.scale<0)throw new N(`scale must be a positive float. Got: ${t.scale}`);this.scale=t.scale==null?1:t.scale,this.mode=t.mode==null?"fanIn":t.mode,sM(this.mode),this.distribution=t.distribution==null?"normal":t.distribution,rM(this.distribution),this.seed=t.seed}apply(t,e){const s=iM(t),r=s[0],i=s[1];let o=this.scale;if(this.mode==="fanIn"?o/=Math.max(1,r):this.mode==="fanOut"?o/=Math.max(1,i):o/=Math.max(1,(r+i)/2),this.distribution==="normal"){const a=Math.sqrt(o);if(e=e||"float32",e!=="float32"&&e!=="int32")throw new _t(`${this.getClassName()} does not support dType ${e}.`);return nw(t,0,a,e,this.seed)}else{const a=Math.sqrt(3*o);return ol(t,-a,a,e,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}un.className="VarianceScaling";j(un);class sg extends un{constructor(t){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return un.className}}sg.className="GlorotUniform";j(sg);class rg extends un{constructor(t){super({scale:1,mode:"fanAvg",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return un.className}}rg.className="GlorotNormal";j(rg);class ig extends un{constructor(t){super({scale:2,mode:"fanIn",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return un.className}}ig.className="HeNormal";j(ig);class og extends un{constructor(t){super({scale:2,mode:"fanIn",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return un.className}}og.className="HeUniform";j(og);class ag extends un{constructor(t){super({scale:1,mode:"fanIn",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return un.className}}ag.className="LeCunNormal";j(ag);class lg extends un{constructor(t){super({scale:1,mode:"fanIn",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return un.className}}lg.className="LeCunUniform";j(lg);class d1 extends On{constructor(t){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=t.gain==null?this.DEFAULT_GAIN:t.gain,this.seed=t.seed}apply(t,e){return M(()=>{if(t.length<2)throw new _t("Shape must be at least 2D.");if(e!=="int32"&&e!=="float32"&&e!==void 0)throw new TypeError(`Unsupported data type ${e}.`);e=e;const s=W(t.slice(0,-1)),r=t[t.length-1],i=s*r;i>this.ELEMENTS_WARN_SLOW&&console.warn(`Orthogonal initializer is being called on a matrix with more than ${this.ELEMENTS_WARN_SLOW} (${i}) elements: Slowness may result.`);const o=[Math.max(r,s),Math.min(r,s)],a=nh(o,0,1,e,this.seed),l=uD.qr(a,!1);let c=l[0];const h=l[1].flatten().stridedSlice([0],[Math.min(r,s)*Math.min(r,s)],[Math.min(r,s)+1]);return c=E(c,h.sign()),s<r&&(c=c.transpose()),E(Mt(this.gain),c.reshape(t))})}getConfig(){return{gain:this.gain,seed:this.seed}}}d1.className="Orthogonal";j(d1);const Ux={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function Wx(n,t={}){return dl(n,$n.getMap().classNameMap,t,"initializer")}function ie(n){return Qf(n)}function ne(n){if(typeof n=="string"){const t=n in Ux?Ux[n]:n;if(t==="GlorotNormal")return new rg;if(t==="GlorotUniform")return new sg;if(t==="HeNormal")return new ig;if(t==="HeUniform")return new og;if(t==="LeCunNormal")return new ag;if(t==="LeCunUniform")return new lg;{const e={};return e.className=t,e.config={},Wx(e)}}else return n instanceof On?n:Wx(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Id(n){return Array.isArray(n)&&Array.isArray(n[0])}function bc(n){return n.length===0?[]:Array.isArray(n[0])?n:[n]}function bt(n){let t;if(Array.isArray(n)){if(n.length!==1)throw new N(`Expected Tensor length to be 1; got ${n.length}`);t=n[0]}else t=n;return t}function At(n){if(Array.isArray(n)&&Array.isArray(n[0])){if(n.length===1)return n=n,n[0];throw new N(`Expected exactly 1 Shape; got ${n.length}`)}else return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function wc(n){let t=0;for(const e of n)e.shape.length===0?t+=1:t+=e.shape.reduce((s,r)=>s*r);return t}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const Gx="Variable";class oM{constructor(t,e="float32",s=Gx,r=!0,i=null){this.dtype=e??"float32",this.shape=t.shape,this.id=Qw(),s=s??Gx,this.originalName=e1(s),this.name=n1(this.originalName),this.trainable_=r,this.constraint=i,this.val=uR(t,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(t){return this.assertNotDisposed(),aM(this.val,t),this.val.id!==t.id&&(this.val.assign(t),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(t){this.trainable_=t,this.val.trainable=t}}function aM(n,t){if(n.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(n.shape)+" vs. "+JSON.stringify(t.shape))}function vd(n){return n.map(t=>t.read())}function cg(n){n.forEach(t=>{t[0].write(t[1])})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class we{constructor(t){this.dtype=t.dtype,this.shape=t.shape,t.shape!=null?this.ndim=t.shape.length:this.ndim=t.ndim,this.maxNDim=t.maxNDim,this.minNDim=t.minNDim,this.axes=t.axes||{}}}class Cs{constructor(t,e,s,r,i,o,a){this.dtype=t,this.shape=e,this.sourceLayer=s,this.inputs=r,this.callArgs=i,this.outputTensorIndex=a,this.id=Qw(),o!=null&&(this.originalName=e1(o),this.name=n1(this.originalName)),this.rank=e.length}}let lM=0;class sh{constructor(t,e){this.callArgs=e,this.id=lM++,this.outboundLayer=t.outboundLayer,this.inboundLayers=t.inboundLayers,this.nodeIndices=t.nodeIndices,this.tensorIndices=t.tensorIndices,this.inputTensors=t.inputTensors,this.outputTensors=t.outputTensors,this.inputMasks=t.inputMasks,this.outputMasks=t.outputMasks,this.inputShapes=t.inputShapes,this.outputShapes=t.outputShapes;for(const s of t.inboundLayers)s!=null&&s.outboundNodes.push(this);t.outboundLayer.inboundNodes.push(this)}getConfig(){const t=[];for(const e of this.inboundLayers)e!=null?t.push(e.name):t.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:t,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let cM=0;class Tt extends lo{constructor(t={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=cM++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let e=t.name;if(!e){const s=this.getClassName();e=$s(s)+"_"+eh(s)}if(this.name=e,this.trainable_=t.trainable==null?!0:t.trainable,t.inputShape!=null||t.batchInputShape!=null){let s;if(t.batchInputShape!=null)s=t.batchInputShape;else if(t.inputShape!=null){let i=null;t.batchSize!=null&&(i=t.batchSize),s=[i].concat(t.inputShape)}this.batchInputShape=s;let r=t.dtype;r==null&&(r=t.inputDType),r==null&&(r="float32"),this.dtype=r}t.weights!=null?this.initialWeights=t.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(t,e){return t.name+"_ib-"+e.toString()}getNodeAtIndex(t,e){if(this.inboundNodes.length===0)throw new Rn(`The layer has never been called and thus has no defined ${e}.`);if(this.inboundNodes.length<=t)throw new N(`Asked to get ${e} at node ${t}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[t]}getInputAt(t){return Ze(this.getNodeAtIndex(t,"input").inputTensors)}getOutputAt(t){return Ze(this.getNodeAtIndex(t,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new ls(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new ls(`Layer ${this.name} is not connected, no input to return.`);return Ze(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new ls(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new ls(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return Ze(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(t=>t())}get updates(){return this._updates}get built(){return this._built}set built(t){this._built=t}get trainable(){return this.trainable_}set trainable(t){this._trainableWeights.forEach(e=>e.trainable=t),this.trainable_=t}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(t=>t.trainable):[]}set trainableWeights(t){this._trainableWeights=t}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(t=>!t.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(t){this._nonTrainableWeights=t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(t){const e=Bt(t);if(this.inputSpec==null||this.inputSpec.length===0)return;const s=Bt(this.inputSpec);if(e.length!==s.length)throw new N(`Layer ${this.name} expects ${s.length} inputs, but it received ${e.length} input tensors. Input received: ${t}`);for(let r=0;r<e.length;r++){const i=e[r],o=s[r];if(o==null)continue;const a=i.rank;if(o.ndim!=null&&a!==o.ndim)throw new N(`Input ${r} is incompatible with layer ${this.name}: expected ndim=${o.ndim}, found ndim=${a}`);if(o.maxNDim!=null&&a>o.maxNDim)throw new N(`Input ${r} is incompatible with layer ${this.name}: expected max_ndim=${o.maxNDim}, found ndim=${a}`);if(o.minNDim!=null&&a<o.minNDim)throw new N(`Input ${r} is incompatible with layer ${this.name}: expected min_ndim=${o.minNDim}, found ndim=${a}.`);if(o.dtype!=null&&i.dtype!==o.dtype)throw new N(`Input ${r} is incompatible with layer ${this.name} : expected dtype=${o.dtype}, found dtype=${i.dtype}.`);if(o.axes){const l=i.shape;for(const c in o.axes){const u=Number(c),h=o.axes[c],d=u>=0?l[u]:l[l.length+u];if(h!=null&&[h,null].indexOf(d)===-1)throw new N(`Input ${r} is incompatible with layer ${this.name}: expected axis ${u} of input shape to have value ${h} but got shape ${l}.`)}}if(o.shape!=null)for(let l=0;l<o.shape.length;++l){const c=o.shape[l],u=i.shape[l];if(c!=null&&u!=null&&c!==u)throw new N(`Input ${r} is incompatible with layer ${this.name}: expected shape=${o.shape}, found shape=${i.shape}.`)}}}call(t,e){return t}invokeCallHook(t,e){this._callHook!=null&&this._callHook(t,e)}setCallHook(t){this._callHook=t}clearCallHook(){this._callHook=null}apply(t,e){e=e||{},this.assertNotDisposed();const s=Bt(t),r=dM(t),i=pM(t);if(r===i)throw new N("Arguments to apply() must be all SymbolicTensors or all Tensors");return Ur(this.name,()=>{if(!this.built){this.assertInputCompatibility(t);const o=[];for(const a of Bt(t))o.push(a.shape);this.build(Ze(o)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&i&&(this._refCount=1)}if(this.assertInputCompatibility(t),i){let o=this.call(t,e);this.supportsMasking&&this.setMaskMetadata(t,o);const a=Bt(o),l=[];for(let c of a)s.indexOf(c)!==-1&&(c=c.clone()),l.push(c);if(o=Ze(l),this.activityRegularizer!=null)throw new _t("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return o}else{const o=uM(t),a=this.computeOutputShape(o);let l;const c=hM(t);if(this.warnOnIncompatibleInputShape(Array.isArray(t)?o[0]:o),a!=null&&a.length>0&&Array.isArray(a[0])?l=a.map((u,h)=>new Cs(c,u,this,Bt(t),e,this.name,h)):l=new Cs(c,a,this,Bt(t),e,this.name),this.addInboundNode(t,l,null,null,o,a,e),this._refCount++,this.activityRegularizer!=null)throw new _t("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return l}})}warnOnIncompatibleInputShape(t){if(this.batchInputShape!=null)if(t.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(t)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let e=!1;this.batchInputShape.forEach((s,r)=>{s!=null&&t[r]!=null&&t[r]!==s&&(e=!0)}),e&&console.warn(`The shape of the input tensor (${JSON.stringify(t)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new ls(`The layer ${this.name} has never been called and thus has no defined output shape.`);const t=[];for(const e of this.inboundNodes){const s=JSON.stringify(e.outputShapes);t.indexOf(s)===-1&&t.push(s)}if(t.length===1){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&e.length===1?e[0]:e}else throw new ls(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new Rn(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return wc(this.weights)}build(t){this.built=!0}getWeights(t=!1){return vd(t?this.trainableWeights:this.weights)}setWeights(t){M(()=>{const e=this.weights;if(e.length!==t.length)throw new N(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${t.length}, but the layer was expecting ${e.length} weights. Provided weights: ${t}...`);if(e.length===0)return;const s=[],r=vd(e);for(let i=0;i<r.length;++i){const o=r[i],a=e[i],l=t[i];if(!Pt(o.shape,l.shape))throw new N(`Layer weight shape ${o.shape} not compatible with provided weight shape ${l.shape}`);s.push([a,l])}cg(s)})}addWeight(t,e,s,r,i,o,a,l){if(this._addedWeightNames.indexOf(t)!==-1)throw new N(`Duplicate weight name ${t} for layer ${this.name}`);this._addedWeightNames.push(t),s==null&&(s="float32"),this.fastWeightInitDuringBuild&&(r=l!=null?l():ne("zeros"));const c=r.apply(e,s),u=new oM(c,s,t,o,a);return c.dispose(),i!=null&&this.addLoss(()=>i.apply(u.read())),o==null&&(o=!0),o?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(t){this.fastWeightInitDuringBuild=t}addLoss(t){t==null||Array.isArray(t)&&t.length===0||(t=Bt(t),this._losses!==void 0&&this._losses!==null&&this.losses.push(...t))}computeOutputShape(t){return t}computeMask(t,e){if(!this.supportsMasking){if(e!=null)if(Array.isArray(e))e.forEach(s=>{if(s!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return e}setMaskMetadata(t,e,s){if(!this.supportsMasking)return;const r=this.computeMask(t,s),i=Bt(e),o=Bt(r);if(i.length!==o.length)throw new Error(`${this.name} outputs ${i.length} tensors but ${i.length} masks for those tensors`);for(let a=0;a<i.length;a++)i[a].kerasMask=o[a]}addInboundNode(t,e,s,r,i,o,a=null){const l=Bt(t);e=Bt(e),s=Bt(s),r=Bt(r),i=bc(i),o=bc(o);const c=[],u=[],h=[];for(const d of l)c.push(d.sourceLayer),u.push(d.nodeIndex),h.push(d.tensorIndex);new sh({outboundLayer:this,inboundLayers:c,nodeIndices:u,tensorIndices:h,inputTensors:l,outputTensors:e,inputMasks:s,outputMasks:r,inputShapes:i,outputShapes:o},a);for(let d=0;d<e.length;d++)e[d].sourceLayer=this,e[d].nodeIndex=this.inboundNodes.length-1,e[d].tensorIndex=d}getConfig(){const t={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(t.batchInputShape=this.batchInputShape),this.dtype!=null&&(t.dtype=this.dtype),t}disposeWeights(){return this.weights.forEach(t=>t.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let t=0;return--this._refCount===0&&(t=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:t}}}function uM(n){n=Bt(n);const t=[];for(const e of n)t.push(e.shape);return Ze(t)}function hM(n){return"float32"}function p1(n,t,e){if((t==null||e!=null&&e>0)&&(t=n.sourceLayer,e=n.nodeIndex),t.inboundNodes.length===0)return[n];{const s=t.inboundNodes[e];if(s.inboundLayers.length===0)return s.inputTensors;{const r=[];for(let i=0;i<s.inboundLayers.length;i++){const o=s.inputTensors[i],a=s.inboundLayers[i],l=s.nodeIndices[i],c=p1(o,a,l);for(const u of c)r.indexOf(u)===-1&&r.push(u)}return r}}}function dM(n){let t=!0;for(const e of Bt(n))if(!(e instanceof Cs)){t=!1;break}return t}function pM(n){let t=!0;for(const e of Bt(n))if(e instanceof Cs){t=!1;break}return t}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class ml extends Tt{constructor(t){if(super({dtype:t.dtype,name:t.name!=null?t.name:eh("input").toString()}),t.batchSize==null&&(t.batchSize=null),t.sparse==null&&(t.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=t.sparse,t.inputShape!=null&&t.batchInputShape!=null)throw new N("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let e=t.batchInputShape;if(e==null){if(t.inputShape==null)throw new N("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");e=[t.batchSize].concat(t.inputShape)}else if(t.batchSize!=null)throw new N("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const s=t.dtype||"float32";this.batchInputShape=e,this.dtype=s,this.inputSpec=[{shape:e}];const r=new Cs(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new sh({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[e],outputShapes:[e]})}apply(t,e){throw new N(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}ml.className="InputLayer";j(ml);function fM(n){if(n.batchShape==null&&n.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(n.batchShape!=null&&n.shape!=null)throw new N("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=n.batchShape;n.shape!=null&&t==null&&(t=[null].concat(n.shape));let e=n.dtype;return e==null&&(e="float32"),new ml({batchInputShape:t,name:n.name,dtype:e,sparse:n.sparse}).inboundNodes[0].outputTensors[0]}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function gM(n,t){if(n.dtype==null||n.dtype===t.dtype)return t;try{return rt(t,n.dtype)}catch{throw new N(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${n.name}' (${n.dtype}).`)}}class Zs{constructor(t){if(this.id2Value={},this.id2Mask={},this.name2Id={},t instanceof Zs)for(const e in t.id2Value)this.id2Value[e]=t.id2Value[e],e in t.id2Mask&&(this.id2Mask[e]=t.id2Mask[e]);else{if(t==null)return;for(const e of t)this.add(e.key,e.value)}}add(t,e,s){if(this.id2Value[t.id]==null)this.id2Value[t.id]=gM(t,e),this.name2Id[t.name]=t.id,s!=null&&(this.id2Mask[t.id]=s);else throw new N(`Duplicate key: name=${t.name}, id=${t.id}`);return this}addFeed(t){this.add(t.key,t.value)}hasKey(t){return this.id2Value[t.id]!=null}names(){return Object.keys(this.name2Id)}getValue(t){if(t instanceof Cs){if(this.id2Value[t.id]==null)throw new N(`Nonexistent key: ${t.name}`);return this.id2Value[t.id]}else{const e=this.name2Id[t];if(e==null)throw new N(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Value[e]}}getMask(t){if(t instanceof Cs){if(this.id2Value[t.id]==null)throw new N(`Nonexistent key: ${t.name}`);return this.id2Mask[t.id]}else{const e=this.name2Id[t];if(e==null)throw new N(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Mask[e]}}disposeMasks(){this.id2Mask!=null&&vt(this.id2Mask)}}const Cc=new Yw,_c=new Yw;function mM(n){Cc!=null&&Cc.setMaxEntries(n),_c!=null&&_c.setMaxEntries(n)}function Eo(n,t,e,s){const r=e==null?!1:e.training,i=Array.isArray(n),o=i?n:[n],a=o.map(f=>f.name),l=[],c=t.names();for(const f of a)c.indexOf(f)!==-1?l.push(t.getValue(f)):l.push(null);s!=null&&(s.maxNumTensors=-1/0,s.minNumTensors=1/0);const u=a.join(",")+"|"+t.names().sort().join(",");let h=Cc.get(u),d;if(h==null){const f=xM(o,t);h=f.sorted,d=f.recipientCounts,Cc.put(u,h),_c.put(u,d)}d={},r||Object.assign(d,_c.get(u));const p=new Zs(t);for(let f=0;f<h.length;++f){if(s!=null){const k=hd().numTensors;k>s.maxNumTensors&&(s.maxNumTensors=k),k<s.minNumTensors&&(s.minNumTensors=k)}const m=h[f],g=m.sourceLayer;if(g instanceof ml)continue;const x=[],y=[],w=[];let b=!1;for(const k of m.inputs){const T=p.getValue(k),D=p.getMask(k);x.push(T),y.push(D),D!=null&&(b=!0),r||(d[k.name]--,d[k.name]===0&&!t.hasKey(k)&&a.indexOf(k.name)===-1&&!T.isDisposed&&k.sourceLayer.stateful!==!0&&w.push(T))}b&&(e=e||{},e.mask=y[0]);const C=Bt(g.apply(x,e));let _=null;g.supportsMasking&&(_=g.computeMask(x,y));const I=bM(m),v=Array.isArray(I)?I:[I];for(let k=0;k<v.length;++k){p.hasKey(v[k])||p.add(v[k],C[k],Array.isArray(_)?_[0]:_);const T=a.indexOf(v[k].name);T!==-1&&(l[T]=C[k])}r||vt(w)}return p.disposeMasks(),i?l:l[0]}function xM(n,t){S(n!=null&&n.length>0,()=>"Expected at least one fetch, got none");let e=[],s={};if(n.length===1){const r=Hx(n[0],t);e=r.sorted,s=r.recipientMap}else{const r=new Set;for(const i of n){const{sorted:o,recipientMap:a}=Hx(i,t);for(const l of o)r.has(l.name)||(e.push(l),r.add(l.name));for(const l in a)s[l]==null&&(s[l]=new Set),a[l].forEach(c=>s[l].add(c))}}return{sorted:e,recipientCounts:yM(s)}}function yM(n){const t={};for(const e in n)t[e]=n[e].size;return t}function Hx(n,t){const e=new Set,s=[],r={};for(const a of t.names())e.add(a);const i=[],o=[];for(i.push(n);i.length>0;){const a=i[i.length-1];if(e.has(a.name)){i.pop();continue}const l=o[o.length-1]===i.length-1;if(a.inputs.length===0||l)i.pop(),s.push(a),e.add(a.name),l&&o.pop();else{o.push(i.length-1);for(const c of a.inputs)r[c.name]==null&&(r[c.name]=new Set),r[c.name].add(a.name),!e.has(c.name)&&i.push(c)}}return{sorted:s,recipientMap:r}}function bM(n){let t;if(n.sourceLayer.inboundNodes.length===1)t=n.sourceLayer.output;else{let e=null;for(let s=0;s<n.sourceLayer.inboundNodes.length;++s)for(const r of n.sourceLayer.inboundNodes[s].outputTensors)if(r.id===n.id){e=s;break}t=n.sourceLayer.getOutputAt(e)}return t}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wM=O();wM.registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,mM);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function ug(n,t){return M(()=>Le(pt(E(n,n),t,!0)))}class xl extends lo{getConfig(){return{}}}class f1 extends xl{constructor(t){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=t.maxValue!=null?t.maxValue:this.defaultMaxValue,this.axis=t.axis!=null?t.axis:this.defaultAxis}apply(t){return M(()=>{const e=ug(t,this.axis),s=wn(e,0,this.maxValue);return E(t,gt(s,Y(be(),e)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}f1.className="MaxNorm";j(f1);class g1 extends xl{constructor(t){super(),this.defaultAxis=0,this.axis=t.axis!=null?t.axis:this.defaultAxis}apply(t){return M(()=>gt(t,Y(be(),ug(t,this.axis))))}getConfig(){return{axis:this.axis}}}g1.className="UnitNorm";j(g1);class m1 extends xl{apply(t){return ui(t)}}m1.className="NonNeg";j(m1);class x1 extends xl{constructor(t){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=t.minValue!=null?t.minValue:this.defaultMinValue,this.maxValue=t.maxValue!=null?t.maxValue:this.defaultMaxValue,this.rate=t.rate!=null?t.rate:this.defaultRate,this.axis=t.axis!=null?t.axis:this.defaultAxis}apply(t){return M(()=>{const e=ug(t,this.axis),s=Y(E(this.rate,wn(e,this.minValue,this.maxValue)),E(1-this.rate,e));return E(t,gt(s,Y(be(),e)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}x1.className="MinMaxNorm";j(x1);const Xx={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Ce(n){return Qf(n)}function jx(n,t={}){return dl(n,$n.getMap().classNameMap,t,"constraint")}function _e(n){if(n==null)return null;if(typeof n=="string"){const e={className:n in Xx?Xx[n]:n,config:{}};return jx(e)}else return n instanceof xl?n:jx(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */async function $r(n){if(n==null)return;const t=[],e=[],s=[];for(const r in n){const i=n[r];if(typeof i!="number"){const o=i;t.push(o.data()),e.push(r),s.push(o)}}if(t.length>0){const r=await Promise.all(t);for(let i=0;i<r.length;++i)n[e[i]]=r[i][0];vt(s)}}function y1(n){if(n!=null)for(const t in n){const e=n[t];typeof e!="number"&&e.dispose()}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var qx;(function(n){n[n.SILENT=0]="SILENT",n[n.VERBOSE=1]="VERBOSE"})(qx||(qx={}));const CM=125;class Zo{constructor(){this.validationData=null}setParams(t){this.params=t}async onEpochBegin(t,e){}async onEpochEnd(t,e){}async onBatchBegin(t,e){}async onBatchEnd(t,e){}async onTrainBegin(t){}async onTrainEnd(t){}setModel(t){}}class _M{constructor(t,e=10){t==null&&(t=[]),this.callbacks=t,this.queueLength=e}append(t){this.callbacks.push(t)}setParams(t){for(const e of this.callbacks)e.setParams(t)}setModel(t){for(const e of this.callbacks)e.setModel(t)}async onEpochBegin(t,e){e==null&&(e={});for(const s of this.callbacks)await s.onEpochBegin(t,e)}async onEpochEnd(t,e){e==null&&(e={});for(const s of this.callbacks)await s.onEpochEnd(t,e)}async onBatchBegin(t,e){e==null&&(e={});for(const s of this.callbacks)await s.onBatchBegin(t,e)}async onBatchEnd(t,e){e==null&&(e={});for(const s of this.callbacks)await s.onBatchEnd(t,e)}async onTrainBegin(t){t==null&&(t={});for(const e of this.callbacks)await e.onTrainBegin(t)}async onTrainEnd(t){t==null&&(t={});for(const e of this.callbacks)await e.onTrainEnd(t)}}class SM extends Zo{constructor(){super()}async onEpochBegin(t){this.seen=0,this.totals={}}async onBatchEnd(t,e){e==null&&(e={});const s=e.size==null?0:e.size;this.seen+=s;for(const r in e){const i=e[r];if(typeof i=="number")this.totals.hasOwnProperty(r)||(this.totals[r]=0),this.totals[r]=this.totals[r]+i*s;else{let o;r in this.totals?o=this.totals[r]:this.totals[r]=0;const a=M(()=>Y(this.totals[r],E(i,s)));this.totals[r]=a,o!=null&&o.dispose()}}}async onEpochEnd(t,e){if(e!=null)for(const s of this.params.metrics)this.totals[s]!=null&&(typeof this.totals[s]=="number"?e[s]=this.totals[s]/this.seen:M(()=>{const r=E(gt(1,this.seen),this.totals[s]);e[s]=r,this.totals[s].dispose(),ps(e[s])}))}}class IM extends Zo{async onTrainBegin(t){this.epoch=[],this.history={}}async onEpochEnd(t,e){e==null&&(e={}),this.epoch.push(t);for(const s in e)this.history[s]==null&&(this.history[s]=[]),this.history[s].push(e[s])}async syncData(){const t=[],e=[],s=[];for(const i in this.history){const o=this.history[i];for(let a=0;a<o.length;++a)if(typeof o[a]!="number"){const l=o[a];t.push(l.data()),e.push(i),s.push(a)}}const r=await Promise.all(t);for(let i=0;i<r.length;++i)this.history[e[i]][s[i]].dispose(),this.history[e[i]][s[i]]=r[i][0]}}class vM extends Zo{constructor(t,e){if(super(),this.currentEpoch=0,this.nowFunc=t.nowFunc,this.nextFrameFunc=t.nextFrameFunc||Sw,this.yieldEvery=e||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=CM),this.yieldEvery==="never"&&t.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");Qh(this.yieldEvery)&&(this.maybeWait=BF(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=t.onTrainBegin,this.trainEnd=t.onTrainEnd,this.epochBegin=t.onEpochBegin,this.epochEnd=t.onEpochEnd,this.batchBegin=t.onBatchBegin,this.batchEnd=t.onBatchEnd,this.yield=t.onYield}async maybeWait(t,e,s){const r=[];this.yield!=null&&(await $r(s),r.push(this.yield(t,e,s))),r.push(this.nextFrameFunc()),await Promise.all(r)}async onEpochBegin(t,e){this.currentEpoch=t,this.epochBegin!=null&&(await $r(e),await this.epochBegin(t,e))}async onEpochEnd(t,e){const s=[];this.epochEnd!=null&&(await $r(e),s.push(this.epochEnd(t,e))),this.yieldEvery==="epoch"&&s.push(this.nextFrameFunc()),await Promise.all(s)}async onBatchBegin(t,e){this.batchBegin!=null&&(await $r(e),await this.batchBegin(t,e))}async onBatchEnd(t,e){const s=[];this.batchEnd!=null&&(await $r(e),s.push(this.batchEnd(t,e))),this.yieldEvery==="batch"?s.push(this.nextFrameFunc()):Qh(this.yieldEvery)&&s.push(this.maybeWait(this.currentEpoch,t,e)),await Promise.all(s)}async onTrainBegin(t){this.trainBegin!=null&&(await $r(t),await this.trainBegin(t))}async onTrainEnd(t){this.trainEnd!=null&&(await $r(t),await this.trainEnd(t))}}function b1(n,t){return n==null&&(n={}),n instanceof Zo?[n]:Array.isArray(n)&&n[0]instanceof Zo?n:Bt(n).map(s=>new vM(s,t))}class vn{constructor(){}static registerCallbackConstructor(t,e){S(t>=0&&Number.isInteger(t),()=>`Verbosity level is expected to be an integer >= 0, but got ${t}`),vn.checkForDuplicate(e),vn.constructors[t]==null&&(vn.constructors[t]=[]),vn.constructors[t].push(e)}static checkForDuplicate(t){for(const e in vn.constructors)vn.constructors[+e].forEach(r=>{if(r===t)throw new N("Duplicate callback constructor.")})}static clear(){vn.constructors={}}static createCallbacks(t){const e=[];for(const s in vn.constructors){const r=+s;t>=r&&e.push(...vn.constructors[r])}return e.map(s=>new s)}}vn.constructors={};function w1(n,t,e,s,r,i,o,a,l){const c=new IM,u=[new SM,...vn.createCallbacks(t)];n!=null&&u.push(...n),u.push(c);const h=new _M(u);return h.setParams({epochs:e,initialEpoch:s,samples:r,steps:i,batchSize:o,verbose:t,doValidation:a,metrics:l}),{callbackList:h,history:c}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function xs(n,t={},e=!1){return dl(n,$n.getMap().classNameMap,t,"layer",e)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Sc(n,t){return M(()=>{n.dtype!=="float32"&&(n=rt(n,"float32"));const e=pt(fl(n),t,!0),s=ju(e.shape,be()),r=Le(xr(e,s));return gt(n,r)})}function rh(n,t){return M(()=>me(fl(yt(t,n)),-1))}function hg(n,t){return M(()=>me(We(yt(t,n)),-1))}function dg(n,t){return M(()=>{const e=yt(n,t),s=wn(We(n),be(),Number.MAX_VALUE),r=We(gt(e,s));return E(100,me(r,-1))})}function kM(n,t){return M(()=>{const e=wn(t,be(),Number.MAX_VALUE),s=ws(Y(1,e)),r=wn(n,be(),Number.MAX_VALUE),i=ws(Y(1,r));return me(fl(yt(s,i)),-1)})}function $M(n,t){return M(()=>{const e=xr(0,yt(1,E(n,t)));return me(fl(e),-1)})}function TM(n,t){return M(()=>{const e=xr(0,yt(1,E(n,t)));return me(e,-1)})}function NM(n,t){return M(()=>{const e=pt(E(n,t),-1),s=Zn(E(yt(1,n),t),-1);return xr(0,Y(1,yt(s,e)))})}function EM(n,t){return M(()=>{const e=Math.log(2),s=yt(t,n),r=yt(Y(s,il(E(-2,s))),e);return me(r,-1)})}function Qo(n,t,e=!1){return M(()=>{if(e)t=gf(t);else{const s=pt(t,t.shape.length-1,!0);t=gt(t,s)}return t=wn(t,be(),1-be()),ce(pt(E(rt(n,"float32"),ws(t)),t.shape.length-1))})}function Ic(n,t,e=!1){return M(()=>{const s=rt(Yu(YF(n)),"int32");t=wn(t,be(),1-be());const r=t.shape,i=A(W0(s,r[r.length-1]),r);return Qo(i,t,e)})}function RM(n,t){if(!Pt(n.shape,t.shape))throw new N(`logits and labels must have the same shape, but got shapes ${JSON.stringify(n.shape)} and ${JSON.stringify(t.shape)}`);return M(()=>{const e=ui(t),s=ce(We(t));return Y(yt(e,E(t,n)),L0(bs(s)))})}function ih(n,t){return M(()=>{let e;return e=wn(t,be(),1-be()),e=ws(gt(e,yt(1,e))),me(RM(n,e),-1)})}function DM(n,t){return M(()=>{const e=wn(n,be(),1),s=wn(t,be(),1);return pt(E(n,ws(gt(e,s))),-1)})}function AM(n,t){return M(()=>{const e=ws(Y(be(),t));return me(yt(t,E(n,e)),-1)})}function C1(n,t){return M(()=>{const e=Sc(n,-1),s=Sc(t,-1),r=E(e,s);return ce(pt(r,-1))})}const vc={meanSquaredError:rh,meanAbsoluteError:hg,meanAbsolutePercentageError:dg,meanSquaredLogarithmicError:kM,squaredHinge:$M,hinge:TM,categoricalHinge:NM,logcosh:EM,categoricalCrossentropy:Qo,sparseCategoricalCrossentropy:Ic,binaryCrossentropy:ih,kullbackLeiblerDivergence:DM,poisson:AM,cosineProximity:C1};function Bh(n){if(typeof n=="string"){if(n in vc)return vc[n];let t=`Unknown loss ${n}`;throw n.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${n}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new N(t)}else return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function _1(n,t){return M(()=>{const e=E(.5,Mn(t)),s=gs(Cn(t,e),n.dtype);return me(ys(n,s),-1)})}function S1(n,t){return M(()=>gs(ys(jo(n,-1),jo(t,-1)),"float32"))}function FM(n,t){return M(()=>rt(pt(Rs(ys(n,1),ys(t,1))),"float32"))}function MM(n,t){return M(()=>rt(pt(Rs(ys(n,0),ys(t,1))),"float32"))}function PM(n,t){return M(()=>{const e=FM(n,t),s=MM(n,t),r=Y(e,s);return rt(je(Cn(r,0),gt(e,r),0),"float32")})}function OM(n,t){return ih(n,t)}function BM(n,t){return n.rank===t.rank&&(n=al(n,[n.rank-1])),t=jo(t,-1),t.dtype!==n.dtype&&(t=rt(t,n.dtype)),rt(ys(n,t),"float32")}const LM=rh,VM=rh,zM=hg,UM=hg,WM=dg,GM=dg,I1=Qo,HM=C1,v1=Ic,kc={binaryAccuracy:_1,categoricalAccuracy:S1,precision:PM,categoricalCrossentropy:I1,sparseCategoricalCrossentropy:v1,mse:LM,MSE:VM,mae:zM,MAE:UM,mape:WM,MAPE:GM,cosine:HM};function XM(n){if(typeof n=="string"&&n in kc)return kc[n];if(typeof n!="string"&&n!=null)return n;throw new N(`Unknown metric ${n}`)}function Bl(n){if(cs(n!==null,`Unknown LossOrMetricFn ${n}`),typeof n=="string")return n;{let t;for(const e of Object.keys(vc))if(vc[e]===n){t=e;break}if(t!==void 0)return t;for(const e of Object.keys(kc))if(kc[e]===n){t=e;break}return t!==void 0?t:n.name}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function jM(n){const t={Adagrad:()=>Si.adagrad(.01),Adadelta:()=>Si.adadelta(1,.95,be()),Adam:()=>Si.adam(.001,.9,.999,be()),Adamax:()=>Si.adamax(.002,.9,.999,be(),0),RMSProp:()=>Si.rmsprop(.001,.9,0,be()),SGD:()=>Si.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,n in t)return t[n]();throw new N(`Unknown Optimizer ${n}`)}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const Kx=1*1024*1024;function Yx(n,t,e=!1){if(n==null||typeof n!="object"||Object.getPrototypeOf(n)!==Object.prototype||!kd(n))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(e){const s=JSON.stringify(n);s.length>Kx&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${s.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${Kx}.`)}}function kd(n){if(n===null)return!0;if(typeof n=="object")if(Object.getPrototypeOf(n)===Object.prototype){const t=Object.keys(n);for(const e of t)if(typeof e!="string"||!kd(n[e]))return!1;return!0}else if(Array.isArray(n)){for(const t of n)if(!kd(t))return!1;return!0}else return!1;else{const t=typeof n;return t==="string"||t==="number"||t==="boolean"}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function qM(n,t,e,s=console.log){const r=YM(n),i=["Layer (type)","Input Shape","Output shape","Param #"];r?(t=t||90,e=e||[.32,.61,.89,1]):(t=t||115,e=e||[.24,.48,.7,.8,1]),e[e.length-1]<=1&&(e=e.map(u=>Math.floor(t*u)));let o;if(!r){i.push("Receives inputs"),o=[];for(const u in n.nodesByDepth)o.push(...n.nodesByDepth[u])}s("_".repeat(t)),$c(i,e,s),s("=".repeat(t));const a=n.layers;for(let u=0;u<a.length;++u)r?JM(a[u],e,s):ZM(a[u],e,o,s),s((u===a.length-1?"=":"_").repeat(t));n.checkTrainableWeightsConsistency();const l=KM(n),c=wc(n.nonTrainableWeights);s(`Total params: ${l+c}`),s(`Trainable params: ${l}`),s(`Non-trainable params: ${c}`),s("_".repeat(t))}function KM(n){let t;return n.collectedTrainableWeights!=null?t=wc(n.collectedTrainableWeights):t=wc(n.trainableWeights),t}function YM(n){let t=!0;const e=[],s=[];for(const r in n.nodesByDepth)e.push(n.nodesByDepth[r]);for(const r of e){if(r.length>1||r.length===1&&r[0].inboundLayers.length>1){t=!1;break}s.push(...r)}if(t)for(const r of n.layers){let i=!1;for(const o of r.inboundNodes)if(s.indexOf(o)!==-1)if(i){t=!1;break}else i=!0;if(!t)break}return t}function $c(n,t,e=console.log){let s="";for(let r=0;r<n.length;++r)r>0&&(s=s.slice(0,s.length-1)+" "),s+=n[r],s=s.slice(0,t[r]),s+=" ".repeat(t[r]-s.length);e(s)}function JM(n,t,e){let s,r;try{r=n.inboundNodes.map(l=>JSON.stringify(l.inputShapes)).join(",")}catch{r="multiple"}try{s=JSON.stringify(n.outputShape)}catch{s="multiple"}const i=n.name,o=n.getClassName(),a=[`${i} (${o})`,r,s,n.countParams().toString()];$c(a,t,e)}function ZM(n,t,e,s){let r,i;try{i=n.inboundNodes.map(h=>JSON.stringify(h.inputShapes)).join(",")}catch{i="multiple"}try{r=JSON.stringify(n.outputShape)}catch{r="multiple"}const o=[];for(const h of n.inboundNodes)if(!(e!=null&&e.length>0&&e.indexOf(h)===-1))for(let d=0;d<h.inboundLayers.length;++d){const p=h.inboundLayers[d].name,f=h.nodeIndices[d],m=h.tensorIndices[d];o.push(`${p}[${f}][${m}]`)}const a=n.name,l=n.getClassName(),c=o.length===0?"":o[0],u=[`${a} (${l})`,i,r,n.countParams().toString(),c];$c(u,t,s);for(let h=1;h<o.length;++h)$c(["","","","",o[h]],t,s)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function k1(n,t,e){return(n==="inboundNodes"||n==="outputLayers"||n==="inputLayers")&&t===0&&typeof e=="string"}function Tc(n,t){if(n===null)return null;if(typeof n=="string")return Dr(n);if(typeof n=="number"||typeof n=="boolean")return n;if(n instanceof Array){const e=[],s=n.length;for(let r=0;r<s;++r){const i=n[r];k1(t,r,i)?e.push(i):e.push(Tc(i,t))}return e}else{const e={};for(const s of Object.keys(n)){const r=n[s];if(s==="name"&&typeof r=="string")e[s]=r;else{const i=Dr(s);e[i]=Tc(r,i)}}return e}}function $d(n,t){if(n==null)return null;if(typeof n=="string")return $s(n);if(typeof n=="number"||typeof n=="boolean")return n;if(n instanceof Array){const e=[],s=n.length;for(let r=0;r<s;++r){const i=n[r];k1(t,r,i)?e.push(i):e.push($d(i,t))}return e}else{const e={};for(const s of Object.keys(n)){const r=n[s],i=$s(s);(s==="name"||s==="className")&&typeof r=="string"?e[i]=r:e[i]=$d(r,s)}return e}}/** @license See the LICENSE file. */const $1="4.22.0";/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const QM=n=>{const t=Object.keys(n);if(t.length===0)return!1;const e=t[0].split("/");return!isNaN(parseInt(e[e.length-1],10))};class Wn extends Tt{constructor(t){if(super({}),this.containerNodes=new Set,this.name=t.name,this.name==null){const y=this.getClassName().toLowerCase();this.name=eh(y)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(t.inputs)?this.inputs=t.inputs.slice():this.inputs=[t.inputs],Array.isArray(t.outputs)?this.outputs=t.outputs.slice():this.outputs=[t.outputs],sr(this.inputs).length!==this.inputs.length)throw new N(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(y=>y.name)}`);sr(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(y=>y.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const y of this.outputs){const w=y.sourceLayer,b=y.nodeIndex,C=y.tensorIndex;this.outputLayers.push(w),this.outputLayersNodeIndices.push(b),this.outputLayersTensorIndices.push(C)}for(const y of this.inputs){const w=y.sourceLayer,b=y.nodeIndex,C=y.tensorIndex;cs(b===0,"input layer has >1 nodes"),cs(C===0,"input layer has >1 tensors"),this.inputLayers.push(w),this.inputLayersNodeIndices.push(b),this.inputLayersTensorIndices.push(C)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let y=0;y<this.inputLayers.length;y++){const w=this.inputLayers[y];if(!(w instanceof ml))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${t.inputs}. Input ${y} (0-based) originates from layer type ${w.getClassName()}.`);this.inputNames.push(w.name),this.feedInputShapes.push(w.batchInputShape),this.feedInputNames.push(w.name)}for(const y of this.outputLayers)this.outputNames.push(y.name);this.internalInputShapes=this.inputs.map(y=>y.shape),this.internalOutputShapes=this.outputs.map(y=>y.shape);const e={},s={},r={},i={},o={},a=[],l=(y,w,b,C,_,I)=>{(C==null||_==null||I==null)&&(C=y.sourceLayer,_=y.nodeIndex,I=y.tensorIndex);const v=C.inboundNodes[_];if(b.indexOf(v)!==-1)throw new Rn(`The tensor ${y.name} at layer "${C.name}" is part of a cycle.`);if(w.indexOf(v)!==-1)return;this.containerNodes.add(Wn.nodeKey(C,_)),C.id in o||(o[C.id]=Object.keys(o).length),b.indexOf(v)===-1&&b.push(v);const k=v.inboundLayers.length;for(let T=0;T<k;T++){const D=v.inputTensors[T],P=v.inboundLayers[T],B=v.nodeIndices[T],V=v.tensorIndices[T];l(D,w,b,P,B,V)}for(w.push(v);b.indexOf(v)>=0;)b.splice(b.indexOf(v),1);a.push(v)},c=[],u=[];for(const y of this.outputs)l(y,c,u);const h=a.slice().reverse();for(const y of h){s[y.id]=y,y.id in e||(e[y.id]=0);let w=e[y.id];const b=r[y.outboundLayer.id]==null?0:r[y.outboundLayer.id];w=Math.max(w,b),r[y.outboundLayer.id]=w,i[y.outboundLayer.id]=y.outboundLayer,e[y.id]=w;for(let C=0;C<y.inboundLayers.length;C++){const _=y.inboundLayers[C],I=y.nodeIndices[C],v=_.inboundNodes[I],k=e[v.id]==null?0:e[v.id];e[v.id]=Math.max(w+1,k),s[v.id]=v}}const d={};for(const y in e){const w=e[y];w in d||(d[w]=[]),d[w].push(s[y])}const p={};for(const y in r){const w=r[y];w in p||(p[w]=[]),p[w].push(i[y])}let f=Object.keys(p).map(y=>parseInt(y,10)).sort(Ml);this.layers=[];for(const y of f){const w=p[y];w.sort((b,C)=>{const _=o[b.id],I=o[C.id];return _<I?-1:_>I?1:0});for(const b of w)b instanceof Wn&&this.internalContainerRefs.push(b),this.layers.push(b)}this.layersByDepth=p,f=Object.keys(d).map(y=>parseInt(y,10)).sort(Ml);const m=this.inputs.slice(),g=[];for(const y of f)for(const w of d[y]){const b=w.outboundLayer;if(b!=null){for(const C of w.inputTensors)if(m.indexOf(C)===-1)throw new Rn(`Graph disconnected: cannot obtain value for tensor ${C} at layer "${b.name}". The following previous layers were accessed without issue: ${g}`);for(const C of w.outputTensors)m.push(C);g.push(b.name)}}this.nodesByDepth=d;const x=this.layers.map(y=>y.name);for(const y of x){const w=x.filter(b=>b===y).length;if(w!==1)throw new Rn(`The name "${y}" is used ${w} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(x))}this.outboundNodes=[],this.inboundNodes=[],new sh({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(y=>null),outputMasks:this.outputs.map(y=>null),inputShapes:this.inputs.map(y=>y.shape),outputShapes:this.outputs.map(y=>y.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const t={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount===0){for(const e of this.layers)t.numDisposedVariables+=e.dispose().numDisposedVariables;for(const e of this.internalContainerRefs)t.numDisposedVariables+=e.dispose().numDisposedVariables}return t.refCountAfterDispose=this._refCount,t}get trainable(){return this.trainable_}set trainable(t){this.layers.forEach(e=>{e._trainableWeights.forEach(s=>s.trainable=t)}),this.trainable_=t}get trainableWeights(){if(this._trainableWeights.length>0)throw new N("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let t=[];for(const e of this.layers)t=t.concat(e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.layers)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const s of this.layers)e.push(...s.trainableWeights);return e.concat(t)}return t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(t,e=!0){const s={};let r=0;const i=QM(t);i&&this.parseWeights(t);for(const a of this.layers)for(const[l,c]of a.weights.entries()){const u=i?`${c.name.split("/").slice(0,-1).join("/")+"/"}${l}`:c.originalName;if(s[u]!=null)throw new N(`Duplicate weight name: ${u}`);s[u]=c,r++}const o=[];for(const a in t){let l=a;if(s[a]==null){const c=a.split("/");l=c.slice(0,-2).concat([c[c.length-1]]).join("/")}if(s[l]!=null)o.push([s[l],t[a]]);else if(e)throw new N(`Provided weight data has no target variable: ${a}`);delete s[l]}if(e){const a=[];for(const l in s)a.push(l);if(a.length>0)throw new N(`${a.length} of ${r} weights are not set: ${a}`)}cg(o)}parseWeights(t){for(const e in Object.keys(t)){const s=e.split("/"),r=["vars","layer_checkpoint_dependencies"],i=s.map(o=>o.startsWith("_")?o.slice(1):o).filter(o=>!r.includes(o)).join("/");i!==e&&(t[i]=t[e],delete t[e])}}updatedConfig(){const t=this.getConfig(),e={};return e.className=this.getClassName(),e.config=t,e.kerasVersion=`tfjs-layers ${$1}`,e.backend="TensorFlow.js",e}toJSON(t,e=!0){const s=$d(this.updatedConfig());return e?JSON.stringify(s):s}call(t,e){return M(()=>{t=Bt(t);const s=new Zs;for(let r=0;r<this.inputs.length;++r)s.add(this.inputs[r],t[r]);return Eo(this.outputs,s,e)})}computeMask(t,e){return M(()=>{t=Bt(t);let s;return e==null?s=ei(null,t.length):s=Bt(e),this.runInternalGraph(t,s)[1]})}computeOutputShape(t){const e=bc(t);if(e.length!==this.inputLayers.length)throw new N(`Invalid inputShape argument ${t}: model has ${this.inputLayers.length} tensor inputs.`);const s={};for(let a=0;a<e.length;a++){const l=this.inputLayers[a],c=e[a],u=l.name+"_0_0";s[u]=c}const r=Object.keys(this.nodesByDepth).map(a=>parseInt(a,10)).sort(Ml);if(r.length>1)for(const a of r){const l=this.nodesByDepth[a];for(const c of l){const u=c.outboundLayer;if(this.inputLayers.map(m=>m.id).indexOf(u.id)!==-1)continue;const h=[];for(let m=0;m<c.inboundLayers.length;m++){const g=c.inboundLayers[m],x=c.nodeIndices[m],y=c.tensorIndices[m],w=`${g.name}_${x}_${y}`,b=s[w];h.push(b)}const d=u.computeOutputShape(Ze(h)),p=bc(d),f=u.inboundNodes.indexOf(c);for(let m=0;m<p.length;m++){const g=`${u.name}_${f}_${m}`;s[g]=p[m]}}}const i=[],o=[];for(let a=0;a<this.outputLayers.length;a++){const l=this.outputLayers[a],c=this.outputLayersNodeIndices[a],u=this.outputLayersTensorIndices[a],h=`${l.name}_${c}_${u}`;o.push(h)}for(let a=0;a<o.length;a++){const l=o[a];cs(l in s),i.push(s[l])}return Ze(i)}runInternalGraph(t,e){e==null&&(e=ei(null,t.length));const s={};for(let l=0;l<this.inputs.length;++l){const c=this.inputs[l],u=t[l],h=e[l];s[c.id]=[u,h]}const r=Object.keys(this.nodesByDepth).map(l=>parseInt(l,10)).sort(Ml);for(const l of r){const c=this.nodesByDepth[l];for(const u of c){const h=u.outboundLayer,d=u.inputTensors,p=u.outputTensors,f=new Array;for(const m of d)m.id in s&&f.push(s[m.id]);if(f.length===d.length){let m={},g,x,y,w;if(u.callArgs!=null&&(m=u.callArgs),f.length===1){const[b,C]=f[0];m.mask==null&&(m.mask=C),y=Bt(h.call(b,m)),w=Bt(h.computeMask(b,C)),g=[b],x=[C]}else g=f.map(b=>b[0]),x=f.map(b=>b[1]),m.mask==null&&(m.mask=x),y=Bt(h.call(g,m)),w=Bt(h.computeMask(g,x));if(h.activityRegularizer)throw new _t("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let b=0;b<p.length;++b){const C=p[b],_=y[b],I=w[b];s[C.id]=[_,I]}}}}const i=[],o=[],a=[];for(const l of this.outputs){cs(l.id in s,`Could not compute output ${l.name} : ${l.id}`);const[c,u]=s[l.id];a.push(c.shape),i.push(c),o.push(u)}return[i,o,a]}buildNodeConversionMap(t){const e={};let s;for(const r of this.layers){s=r instanceof Wn?1:0;for(let i=0;i<r.inboundNodes.length;i++){const o=Wn.nodeKey(r,i);this.containerNodes.has(o)&&(e[o]=s,s+=1)}}return e}getLayer(t,e){if(e!=null)return this.findLayer(e);if(t==null)throw new N("Provide either a layer name or layer index");if(typeof t=="number")return this.findLayer(t);for(const s of this.layers)if(s.name===t)return s;throw new N(`No such layer: ${t}`)}findLayer(t){if(this.layers.length<=t)throw new N(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}calculateLosses(){return M(()=>{const t=[];for(const e of this.layers)for(let s=0;s<e.inboundNodes.length;++s){const r=Wn.nodeKey(e,s);this.containerNodes.has(r)&&t.push(...e.calculateLosses())}return t})}getConfig(){const t={name:this.name},e=this.buildNodeConversionMap(this.layers),s=[];for(const o of this.layers){const a=o.getClassName(),l=o.getConfig(),c=[];for(let h=0;h<o.inboundNodes.length;h++){const d=o.inboundNodes[h],p=Wn.nodeKey(o,h);let f={};if(this.containerNodes.has(p)){if(d.callArgs)try{JSON.stringify(d.callArgs),f=d.callArgs}catch{console.warn(`Layer ${o.name} was passed non-serializable keyword arguments: ${d.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),f={}}if(d.inboundLayers.length>0){const m=[];for(let g=0;g<d.inboundLayers.length;g++){const x=d.inboundLayers[g],y=d.nodeIndices[g],w=d.tensorIndices[g],b=Wn.nodeKey(x,y);let C=e[b];C==null&&(C=0),m.push([x.name,C,w,f])}c.push(m)}}}const u={};u.name=o.name,u.className=a,u.config=l,u.inboundNodes=c,s.push(u)}t.layers=s;const r=[];for(let o=0;o<this.inputLayers.length;o++){const a=this.inputLayers[o],l=this.inputLayersNodeIndices[o],c=Wn.nodeKey(a,l);if(!this.containerNodes.has(c))continue;let u=e[c];u==null&&(u=0);const h=this.inputLayersTensorIndices[o];r.push([a.name,u,h])}t.inputLayers=r;const i=[];for(let o=0;o<this.outputLayers.length;o++){const a=this.outputLayers[o],l=this.outputLayersNodeIndices[o],c=Wn.nodeKey(a,l);if(!this.containerNodes.has(c))continue;let u=e[c];u==null&&(u=0);const h=this.outputLayersTensorIndices[o];i.push([a.name,u,h])}return t.outputLayers=i,t}static fromConfig(t,e,s={},r=!1){const i={},o={};function a(g,x){g.name in o?o[g.name].push(x):o[g.name]=[x]}function l(g,x){const y=[];let w;for(const b of x){const C=b[0],_=b[1],I=b[2];if(w=b[3]==null?{}:b[3],!(C in i)){a(g,x);return}const v=i[C];if(v.inboundNodes.length<=_){a(g,x);return}const k=v.inboundNodes[_];y.push(k.outputTensors[I])}y.length>0&&g.apply(Ze(y),w)}function c(g){const x=g.name,y=xs(g,e.customObjects!=null?e.customObjects:{});y.setFastWeightInitDuringBuild(r),i[x]=y,g.inboundNodes.forEach(b=>{if(!(b instanceof Array))throw new N(`Corrupted configuration, expected array for nodeData: ${b}`);a(y,b)})}const u=e.name,h=e.layers;for(const g of h)c(g);for(;!OF(o);)for(const g of h){const x=i[g.name];if(x.name in o){const y=o[x.name];delete o[x.name];for(const w of y)l(x,w)}}const d=[],p=[],f=e.inputLayers;for(const g of f){const x=g[0],y=g[1],w=g[2];cs(x in i);const C=i[x].inboundNodes[y].outputTensors;d.push(C[w])}const m=e.outputLayers;for(const g of m){const x=g[0],y=g[1],w=g[2];cs(x in i);const C=i[x].inboundNodes[y].outputTensors;p.push(C[w])}return new t({inputs:d,outputs:p,name:u})}get stateful(){if(this._stateful)throw new N("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const t of this.layers)if(t.stateful)return!0;return!1}resetStates(){M(()=>{this.layers.forEach(t=>{t.stateful&&t.resetStates()})})}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function tP(n,t,e){const s=t.length;if(n==null||Array.isArray(n)&&n.length===0)return t.map(r=>null);if(s===1)return Array.isArray(n)&&n.length===1?n:typeof n=="object"&&t[0]in n?[n[t[0]]]:[n];if(Array.isArray(n)){if(n.length!==s)throw new Error(`Provided ${e} is an array of ${n.length} element(s), but the model has ${s} outputs. Make sure a set of weights is provided for each model output.`);return n}else if(typeof n=="object"&&Object.keys(n).length>0&&typeof n[Object.keys(n)[0]]=="object"){const r=[];return t.forEach(i=>{i in n?r.push(n[i]):r.push(null)}),r}else throw new Error(`The model has multiple (${s}) outputs, so ${e} must be either an array with ${s} elements or an object with ${t} keys. Provided ${e} not understood: ${JSON.stringify(n)}`)}function T1(n,t){return tP(n,t,"classWeight")}async function N1(n,t,e,s){if(t!=null||s!=null)throw new Error("Support sampleWeight is not implemented yet");if(e!=null){const r=M(()=>{if(n.shape.length===1)return zr(n);if(n.shape.length===2){if(n.shape[1]>1)return jo(n,1);if(n.shape[1]===1)return A(n,[n.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${n.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${n.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),i=Array.from(await r.data());vt(r);const o=[];return i.forEach(a=>{if(e[a]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${a} exists in the data but not in classWeight`);o.push(e[a])}),ln(o,"float32")}else return null}function eP(n,t){return E(n,t)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const nP=32;function E1(n,t){let e,s;const r=t;e=r.xs,s=r.ys,S(e!=null&&s!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`);const i=Jx("input",n.inputNames,e),o=Jx("output",n.outputNames,s),a=i[0].shape[0];S(i.length===n.inputs.length,()=>`LayersModel has ${n.inputs.length} inputs, but the dataset provides ${i.length} inputs.  (Expected input keys: ${JSON.stringify(n.inputNames)})`),S(o.length===n.outputs.length,()=>`LayersModel has ${n.outputs.length} outputs, but the dataset provides ${o.length} outputs.  (Expected output keys: ${JSON.stringify(n.outputNames)})`);for(let l=0;l<i.length;l++)S(i[l].shape[0]===a,()=>`Batch size mismatch: input ${n.inputNames[l]} has ${i[l].shape[0]}; expected  ${a} based on input ${n.inputNames[0]}.`);for(let l=0;l<o.length;l++)S(o[l].shape[0]===a,()=>`Batch size mismatch: output ${n.outputNames[l]} has ${o[l].shape[0]}; expected  ${a} based on input ${n.inputNames[0]}.`);return{xs:i,ys:o}}function Jx(n,t,e){if(e instanceof ye)return[e];if(Array.isArray(e))return S(e.length===t.length,()=>`Received an array of ${e.length} Tensors, but expected ${t.length} to match the ${n} keys ${t}.`),e;{const s=[];for(const r of t){if(e[r]==null)throw new N(`The feature data generated by the dataset lacks the required ${n} key '${r}'.`);s.push(e[r])}return s}}function sP(n){if(n.length===3)throw new _t("Validation with sample weights is not implemented yet.");return{xs:n[0],ys:n[1]}}async function rP(n,t,e){const s=e.batchesPerEpoch!=null;if(S(n.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),S(e!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),S(e.epochs!=null&&e.epochs>0&&Number.isInteger(e.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${e.epochs}`),S(!s||e.batchesPerEpoch>0&&Number.isInteger(e.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${e.batchesPerEpoch}`),S(e.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),n.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");n.isTraining=!0;try{const r=e.validationData!=null;let i,o;if(r)if(Zx(e.validationData))S(e.validationBatches==null||e.validationBatches>0&&Number.isInteger(e.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${e.validationBatches}`);else{const g=sP(e.validationData);i=g.xs,o=g.ys}const a=n.makeTrainFunction(),l=n.getDedupedMetricsNames();let c;r?c=l.slice().concat(l.map(g=>"val_"+g)):c=l.slice();const u=b1(e.callbacks,e.yieldEvery),h=e.verbose==null?1:e.verbose,{callbackList:d,history:p}=w1(u,h,e.epochs,null,null,iP(t,e),null,r,c);d.setModel(n),n.history=p,await d.onTrainBegin(),n.stopTraining_=!1;let f=e.initialEpoch==null?0:e.initialEpoch,m=await t.iterator();for(;f<e.epochs;){const g={};await d.onEpochBegin(f);let x=0,y=0;for(s||(m=await t.iterator());!s||x<e.batchesPerEpoch;){const w=await m.next();if(s&&w.done){console.warn(`You provided \`batchesPerEpoch\` as ${e.batchesPerEpoch}, but your dataset iterator ran out of data after ${x} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${e.batchesPerEpoch*e.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(w.value!=null){const{xs:b,ys:C}=E1(n,w.value),_={};_.batch=y,_.size=b[0].shape[0],await d.onBatchBegin(y,_);const I=[];if(e.classWeight!=null){const T=T1(e.classWeight,n.outputNames);for(let D=0;D<T.length;++D)I.push(await N1(C[D],null,T[D]))}const v=b.concat(C).concat(I),k=a(v);vt(v);for(let T=0;T<l.length;++T){const D=l[T],P=k[T];_[D]=P,ps(P)}await d.onBatchEnd(y,_),y1(_),y++,x++}if(s?x>=e.batchesPerEpoch:w.done){if(r){let b;Zx(e.validationData)?b=Bt(await n.evaluateDataset(e.validationData,{batches:e.validationBatches})):b=Bt(n.evaluate(i,o,{batchSize:e.validationBatchSize==null?nP:e.validationBatchSize,verbose:0}));for(let C=0;C<n.metricsNames.length;++C)g[`val_${n.metricsNames[C]}`]=b[C]}break}if(n.stopTraining_)break}if(await d.onEpochEnd(f,g),f++,n.stopTraining_)break}return await d.onTrainEnd(),await n.history.syncData(),n.history}finally{n.isTraining=!1}}function iP(n,t){let e=null;return t.batchesPerEpoch!=null?e=t.batchesPerEpoch:Number.isFinite(n.size)&&(e=n.size),e}function Zx(n){return typeof n.iterator=="function"}function oP(n){return typeof n.next=="function"}async function aP(n,t,e){e=e||{};const s=e.batches!=null,r=n.testFunction;let i=[];if(e.verbose>0)throw new _t("Verbose mode is not implemented yet.");S(!s||e.batches>0&&Number.isInteger(e.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(e.batches)}`);const o=oP(t)?t:await t.iterator();let a=0,l=0;for(;!s||l<e.batches;){const c=await o.next();if(i=M(()=>{if(c.value){const{xs:u,ys:h}=E1(n,c.value),d=u.concat(h),p=M(()=>r(d));if(vt(d),l===0)for(let m=0;m<p.length;++m)i.push(Mt(0));const f=d[0].shape[0];for(let m=0;m<p.length;++m){const g=p[m],x=i[m];i[m]=M(()=>Y(i[m],E(f,g))),l>0&&vt(x)}vt(p),a+=f,++l}return i}),c.done){s&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${e.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let c=0;c<i.length;++c){const u=i[c];i[c]=gt(i[c],a),vt(u)}return Ze(i)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Lh(n){S(n>0&&Number.isInteger(n),()=>`batchSize is required to be a positive integer, but got ${n}`)}function vo(n,t,e){return n==null?[null]:Array.isArray(n)?n.map(s=>Wr(s,t,e-t)):Wr(n,t,e-t)}function Td(n,t){return M(()=>n==null?null:Array.isArray(n)?n.map(e=>Td(e,t)):r1(n,t.dtype==="int32"?t:rt(t,"int32")))}function Vh(n,t){const e=[];let s=0,r=null;for(;s<n;)r=s+t,r>=n&&(r=n),e.push([s,r]),s=r;return e}function R1(n){const t=[];n instanceof ye&&(n=[n]);for(let e=0;e<n.length;++e){const s=n[e];if(s.rank===1)t.push(pl(s,1));else{if(s.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(s)}}return t}function zn(n,t){if(n==null)return;const e=[];if(t instanceof ye)e.push(t.id);else if(Array.isArray(t))t.forEach(r=>e.push(r.id));else if(t!=null)for(const r in t){const i=t[r];e.push(i.id)}const s=[];if(n instanceof ye)e.indexOf(n.id)===-1&&s.push(n);else if(Array.isArray(n))n.forEach(r=>{e.indexOf(r.id)===-1&&s.push(r)});else if(n!=null)for(const r in n){const i=n[r];e.indexOf(i.id)===-1&&s.push(i)}s.forEach(r=>{r.isDisposed||r.dispose()})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function lP(n){return n instanceof ye}function Nd(n){return Array.isArray(n)}function Qx(n){return!lP(n)&&!Nd(n)}function ty(n,t,e,s=!0,r=""){if(t==null||t.length===0){if(n!=null){let o=!1;if(Nd(n)&&n.length>0)o=!0;else if(Qx(n)){for(const a in n)if(n.hasOwnProperty(a)){o=!0;break}}else o=!0;if(o)throw new N(`Error when checking model ${r} expected no data, but got ${n}`)}return[]}if(n==null)return t.map(o=>null);let i;if(Qx(n)){n=n,i=[];for(const o of t){if(n[o]==null)throw new N(`No data provided for "${o}". Need data for each key in: ${t}`);i.push(n[o])}}else if(Nd(n)){if(n=n,n.length!==t.length)throw new N(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${n}`);i=n}else{if(n=n,t.length>1)throw new N(`The model ${r} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${n.shape}`);i=[n]}if(i=R1(i),e!=null)for(let o=0;o<t.length;++o){if(e[o]==null)continue;const a=i[o];if(a.shape.length!==e[o].length)throw new N(`Error when checking ${r}: expected ${t[o]} to have ${e[o].length} dimension(s). but got array with shape ${a.shape}`);for(let l=0;l<e[o].length;++l){if(l===0&&!s)continue;const c=a.shape[l],u=e[o][l];if(u!=null&&u>=0&&c!==u)throw new N(`${r} expected a batch of elements where each example has shape [${e[o].slice(1,e[o].length)}] (i.e.,tensor shape [*,${e[o].slice(1,e[o].length)}]) but the ${r} received an input with ${a.shape[0]} examples, each with shape [${a.shape.slice(1,a.shape.length)}] (tensor shape [${a.shape}])`)}}return i}function cP(n,t,e){const s=sr(n.map(i=>i.shape[0]));s.sort();const r=sr(t.map(i=>i.shape[0]));if(r.sort(),s.length>1)throw new N(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(n.map(i=>i.shape))}`);if(r.length>1)throw new N(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map(i=>i.shape))}`);if(s.length>0&&r.length>0&&!Pt(s,r))throw new N(`Input Tensors should have the same number of samples as target Tensors. Found ${s[0]} input sample(s) and ${r[0]} target sample(s).`)}function uP(n,t,e){const s=[rh,ih,Qo];for(let r=0;r<n.length;++r){const i=n[r],o=t[r],a=e[r];if(o!=null){if(o===Qo&&i.shape[i.shape.length-1]===1)throw new N(`You are passing a target array of shape ${i.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(s.indexOf(o)!==-1){const l=i.shape.slice(1),c=a.slice(1);for(let u=0;u<l.length;++u){const h=l[u],d=c[u];if(d!=null&&h!==d)throw new N(`A target Tensor with shape ${i.shape} was passed for an output of shape ${a}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function ey(n,t,e,s=!0,r=""){let i;if(Array.isArray(n)){if(n.length!==t.length)throw new N(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${n.length} Tensors(s).`);i=n}else{if(t.length>1)throw new N(`The model expects ${t.length} ${r} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(n.shape)}.`);i=[n]}if(e!=null)for(let o=0;o<t.length;++o){if(e[o]==null)continue;const a=i[o];if(a.shape.length!==e[o].length)throw new N(`Error when checking ${r}: expected ${t[o]} to have ${e[o].length} dimension(s), but got array with shape ${JSON.stringify(a.shape)}`);for(let l=0;l<e[o].length;++l){if(l===0&&!s)continue;const c=a.shape[l],u=e[o][l];if(u!=null&&u!==c)throw new N(`Error when checking ${r}: expected ${t[o]} to have shape ${JSON.stringify(e[o])} but got array with shape ${JSON.stringify(a.shape)}.`)}}}function hP(n,t){if(n==null||Array.isArray(n)&&n.length===0)return t.map(s=>[]);let e;if(typeof n=="string"||typeof n=="function")e=[n];else if(Array.isArray(n)||typeof n=="object")e=n;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${n}`);if(Array.isArray(e))return t.map(s=>e);{const s=[];for(const r of t){let i=e.hasOwnProperty(r)?e[r]:[];Array.isArray(i)||(i=[i]),s.push(i)}return s}}const dP="layers-model";class Vi extends Wn{constructor(t){super(t),this.isTraining=!1}summary(t,e,s=console.log){if(!this.built)throw new N("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");qM(this,t,e,s)}compile(t){if(t.loss==null&&(t.loss=[]),this.loss=t.loss,typeof t.optimizer=="string")this.optimizer_=jM(t.optimizer),this.isOptimizerOwned=!0;else{if(!(t.optimizer instanceof br))throw new N("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=t.optimizer,this.isOptimizerOwned=!1}let e=[];if(!Array.isArray(t.loss)&&typeof t.loss!="string"&&typeof t.loss!="function"){t.loss=t.loss;for(const o in t.loss)if(this.outputNames.indexOf(o)===-1)throw new N(`Unknown entry in loss dictionary: "${o}". Only expected the following keys: ${this.outputNames}`);for(const o of this.outputNames)t.loss[o]==null&&console.warn(`Output "${o}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${o} during training`),e.push(Bh(t.loss[o]))}else if(Array.isArray(t.loss)){if(t.loss.length!==this.outputs.length)throw new N(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${t.loss}.`);e=t.loss.map(a=>Bh(a))}else{const o=Bh(t.loss);this.outputs.forEach(a=>{e.push(o)})}this.lossFunctions=e,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let o=0;o<this.outputs.length;++o){const a=this.internalOutputShapes[o],l=this.outputNames[o];this.feedOutputNames.push(l),this.feedOutputShapes.push(a),this.feedLossFns.push(this.lossFunctions[o])}const s=[];this.metrics=t.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Ur("loss",()=>{for(let o=0;o<this.outputs.length;++o){if(s.indexOf(o)!==-1)continue;const a=this.lossFunctions[o];this.outputs.length>1&&(this.metricsTensors.push([a,o]),this.metricsNames.push(this.outputNames[o]+"_loss"))}});const r=hP(t.metrics,this.outputNames),i=(o,a,l)=>{this.outputNames.length>1&&(a=this.outputNames[o]+"_"+a),this.metricsNames.push(a),this.metricsTensors.push([l,o])};Ur("metric",()=>{for(let o=0;o<this.outputs.length;++o){if(s.indexOf(o)!==-1)continue;const a=r[o];(c=>{const u="";let h,d,p;for(const f of c){if(typeof f=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(f)!==-1){const g=this.internalOutputShapes[o];g[g.length-1]===1||this.lossFunctions[o]===ih?["accuracy","acc"].indexOf(f)!==-1?d=_1:["crossentropy","ce"].indexOf(f)!==-1&&(d=OM):this.lossFunctions[o]===Ic?["accuracy","acc"].indexOf(f)!==-1?d=BM:["crossentropy","ce"].indexOf(f)!==-1&&(d=v1):["accuracy","acc"].indexOf(f)!==-1?d=S1:["crossentropy","ce"].indexOf(f)!==-1&&(d=I1);let x;["accuracy","acc"].indexOf(f)!==-1?x="acc":["crossentropy","ce"].indexOf(f)!==-1&&(x="ce"),p=d,h=u+x}else p=XM(f),h=u+Bl(f);let m;Ur(h,()=>{m=p}),i(o,h,m)}})(a)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(t,e,s={}){const r=s.batchSize==null?32:s.batchSize;Lh(r);const o=this.standardizeUserDataXY(t,e,!0,r);try{const a=o[0].concat(o[1]);this.makeTestFunction();const l=this.testFunction,c=this.testLoop(l,a,r,s.verbose,s.steps);return Ze(c)}finally{zn(o[0],t),zn(o[1],e)}}async evaluateDataset(t,e){return this.makeTestFunction(),aP(this,t,e)}checkNumSamples(t,e,s,r="steps"){let i;if(s!=null){if(i=null,e!=null)throw new N(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${e}`)}else if(t!=null)Array.isArray(t)?i=t[0].shape[0]:i=t.shape[0];else throw new N(`Either the input data should have a defined shape, or ${r} shoud be specified.`);return i}execute(t,e){if(Array.isArray(e)&&e.length===0)throw new N("`outputs` is an empty Array, which is not allowed.");const s=Array.isArray(e),r=s?e:[e],i=this.retrieveSymbolicTensors(r),o=new Zs;if(t instanceof ye&&(t=[t]),Array.isArray(t)){if(t.length!==this.inputs.length)throw new N(`The number of inputs provided (${t.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let l=0;l<this.inputs.length;++l)o.add(this.inputs[l],t[l])}else for(const l of this.inputs){const c=t[l.name];if(c==null)throw new N(`No value is provided for the model's input ${l.name}`);o.add(l,c)}const a=Eo(i,o);return s?a:a[0]}retrieveSymbolicTensors(t){const e=ei(null,t.length);let s=t.length;for(const r of this.layers){const i=Array.isArray(r.output)?r.output:[r.output],o=i.map(a=>a.name);for(let a=0;a<t.length;++a){const l=o.indexOf(t[a]);if(l!==-1&&(e[a]=i[l],s--),s===0)break}if(s===0)break}if(s>0){const r=[];throw e.forEach((i,o)=>{i==null&&r.push(t[o])}),new N(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(r)}`)}return e}predictLoop(t,e=32,s=!1){return M(()=>{const r=this.checkNumSamples(t);if(s)throw new _t("Verbose predictLoop() is not implemented yet.");const i=Vh(r,e),o=this.outputs.map(a=>[]);for(let a=0;a<i.length;++a)M(()=>{const c=i[a][0],u=i[a][1],h=vo(t,c,u),d=[];if(Array.isArray(h))for(let f=0;f<h.length;++f)d.push({key:this.inputs[f],value:h[f]});else d.push({key:this.inputs[0],value:h});const p=new Zs(d);return Eo(this.outputs,p)}).forEach((c,u)=>o[u].push(c));return Ze(o.map(a=>Qe(a,0)))})}predict(t,e={}){const s=R1(t);ey(s,this.inputNames,this.feedInputShapes,!1);try{const r=e.batchSize==null?32:e.batchSize;return Lh(r),this.predictLoop(s,r)}finally{zn(s,t)}}predictOnBatch(t){ey(t,this.inputNames,this.feedInputShapes,!0);const e=(Array.isArray(t)?t[0]:t).shape[0];return this.predictLoop(t,e)}standardizeUserDataXY(t,e,s=!0,r){if(this.optimizer_==null)throw new Rn("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const i=[];for(let o=0;o<this.feedOutputShapes.length;++o){const a=this.feedOutputShapes[o];this.feedLossFns[o]===Ic?i.push(a.slice(0,a.length-1).concat([1])):i.push(a)}if(t=ty(t,this.feedInputNames,this.feedInputShapes,!1,"input"),e=ty(e,this.feedOutputNames,i,!1,"target"),cP(t,e),uP(e,this.feedLossFns,this.feedOutputShapes),this.stateful&&r!=null&&r>0&&t[0].shape[0]%r!==0)throw new N(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${t[0].shape[0]} sample(s).`);return[t,e]}async standardizeUserData(t,e,s,r,i=!0,o){const[a,l]=this.standardizeUserDataXY(t,e,i,o);if(s!=null)throw new Error("sample weight is not supported yet.");let c=null;if(r!=null){const u=T1(r,this.outputNames);c=[];for(let h=0;h<u.length;++h)c.push(await N1(l[h],null,u[h]))}return[a,l,c]}testLoop(t,e,s,r=0,i){return M(()=>{const o=this.checkNumSamples(e,s,i,"steps"),a=[];if(r>0)throw new _t("Verbose mode is not implemented yet.");if(i!=null)throw new _t("steps mode in testLoop() is not implemented yet");{const l=Vh(o,s),c=ln(ts(0,o));for(let u=0;u<l.length;++u){const h=l[u][0],d=l[u][1],p=Wr(c,h,d-h),f=Td(e,p),m=t(f);if(u===0)for(let g=0;g<m.length;++g)a.push(Mt(0));for(let g=0;g<m.length;++g){const x=m[g];a[g]=Y(a[g],E(d-h,x))}}for(let u=0;u<a.length;++u)a[u]=gt(a[u],o)}return a})}getDedupedMetricsNames(){const t=this.metricsNames,e=[];for(let s=0;s<t.length;++s){const r=t[s];let i=r;if(Lx(t,r)>1){const o=Lx(t.slice(0,s),r);i+=`_${o}`}e.push(i)}return e}makeTrainFunction(){return t=>{const e=[],s=t.slice(0,this.inputs.length),r=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),i=t.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),o=[],a=()=>{const h=[];for(let m=0;m<this.inputs.length;++m)h.push({key:this.inputs[m],value:s[m]});const d=new Zs(h),p=Eo(this.outputs,d,{training:!0});let f;for(let m=0;m<this.lossFunctions.length;++m){const g=this.lossFunctions[m];let x=g(r[m],p[m]);i[m]!=null&&(x=eP(x,i[m]));const y=me(x);e.push(y),m===0?f=x:f=Y(f,x)}for(let m=0;m<this.metricsTensors.length;++m){let g;if(this.outputs.length>1&&m<this.outputs.length)g=e[m];else{const x=this.metricsTensors[m][0],y=this.metricsTensors[m][1];g=me(x(r[y],p[y]))}ps(g),o.push(g)}return f=me(f),this.calculateLosses().forEach(m=>{f=Y(f,m)}),f},l=this.collectedTrainableWeights.map(h=>h.read());return[this.optimizer_.minimize(a,!0,l)].concat(o)}}makeTestFunction(){this.testFunction=t=>M(()=>{const e=[];let s;const r=t.slice(0,this.inputs.length),i=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),o=[];for(let c=0;c<this.inputs.length;++c)o.push({key:this.inputs[c],value:r[c]});const a=new Zs(o),l=Eo(this.outputs,a);for(let c=0;c<this.lossFunctions.length;++c){const u=this.lossFunctions[c],h=me(u(i[c],l[c]));c===0?s=h:s=Y(s,h),e.push(s)}for(let c=0;c<this.metricsTensors.length;++c){const u=this.metricsTensors[c][0],h=this.metricsTensors[c][1],d=me(u(i[h],l[h]));e.push(d)}return e})}async fit(t,e,s={}){if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");this.isTraining=!0;let r,i,o,a,l,c,u,h,d;try{const p=s.batchSize==null?32:s.batchSize;Lh(p);const m=await this.standardizeUserData(t,e,s.sampleWeight,s.classWeight,!1,p);r=m[0],i=m[1],d=m[2];let g=!1,x;if(s.validationData!=null&&s.validationData.length>0){if(g=!0,s.validationData.length===2)l=s.validationData[0],c=s.validationData[1];else throw s.validationData.length===3?new _t("validationData including sample weights is not supported yet."):new N(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${s.validationData} is invalid.`);const T=await this.standardizeUserData(l,c,null,null,!0,p);u=T[0],h=T[1],x=u.concat(h)}else if(s.validationSplit!=null&&s.validationSplit>0&&s.validationSplit<1){g=!0;const k=Math.floor(r[0].shape[0]*(1-s.validationSplit)),T=r[0].shape[0];u=vo(r,k,T),o=r,r=vo(r,0,k),h=vo(i,k,T),a=i,i=vo(i,0,k),x=u.concat(h)}else s.validationSteps!=null&&(g=!0);const y=r.concat(i).concat(d);this.checkTrainableWeightsConsistency();const w=this.makeTrainFunction(),b=this.getDedupedMetricsNames();let C,_;g?(this.makeTestFunction(),C=this.testFunction,_=b.slice().concat(b.map(k=>"val_"+k))):(C=null,x=[],_=b.slice());const I=b1(s.callbacks,s.yieldEvery);return await this.fitLoop(w,y,b,p,s.epochs,s.verbose,I,C,x,s.shuffle,_,s.initialEpoch,null,null)}finally{this.isTraining=!1,zn(r,t),zn(i,e),zn(o,t),zn(a,e),zn(u,l),zn(h,c),d!=null&&vt(d)}}async fitLoop(t,e,s,r,i,o,a,l,c,u,h,d,p,f){r==null&&(r=32),i==null&&(i=1),u==null&&(u=!0),d==null&&(d=0);let m=!1;if(l!=null&&c!=null&&(m=!0),f!=null&&(m=!0,p==null))throw new N("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const g=this.checkNumSamples(e,r,p,"steps_per_epoch");let x;g!=null&&(x=ts(0,g)),o==null&&(o=1);const{callbackList:y,history:w}=w1(a,o,i,d,g,p,r,m,h);y.setModel(this),this.history=w,await y.onTrainBegin(),this.stopTraining_=!1;for(let b=d;b<i;++b){await y.onEpochBegin(b);const C={};if(p!=null)throw new _t("stepsPerEpoch mode is not implemented yet.");{if(u==="batch")throw new _t("batch shuffling is not implemneted yet");u&&Ek(x);const _=ln(x),I=Vh(g,r);for(let v=0;v<I.length;++v){const k={};if(await y.onBatchBegin(v,k),M(()=>{const T=I[v][0],D=I[v][1],P=Wr(_,T,D-T);k.batch=v,k.size=D-T;const B=Td(e,P),V=t(B);for(let L=0;L<s.length;++L){const z=s[L],H=V[L];k[z]=H,ps(H)}if(v===I.length-1&&m){const L=this.testLoop(l,c,r);for(let z=0;z<s.length;++z){const H=s[z],G=L[z];ps(G),C["val_"+H]=G}}}),await y.onBatchEnd(v,k),y1(k),this.stopTraining_)break}_.dispose()}if(await y.onEpochEnd(b,C),this.stopTraining_)break}return await y.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(t,e){return rP(this,t,e)}async trainOnBatch(t,e){const s=await this.standardizeUserData(t,e),r=s[0],i=s[1],a=this.makeTrainFunction()(r.concat(i)),l=[];for(const c of a){const u=await c.data();l.push(u[0])}return vt(a),zn(s[0],t),zn(s[1],e),Ze(l)}getNamedWeights(t){const e=[],s=t!=null&&t.trainableOnly,r=s?this.trainableWeights:this.weights,i=this.getWeights(s);for(let o=0;o<r.length;++o)s&&!r[o].trainable||e.push({name:r[o].originalName,tensor:i[o]});return e}set stopTraining(t){this.stopTraining_=t}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(t){this.optimizer_!==t&&(this.optimizer_=t,this.isOptimizerOwned=!1)}dispose(){const t=super.dispose();if(t.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){const e=hd().numTensors;this.optimizer_.dispose(),t.numDisposedVariables+=e-hd().numTensors}return t}getLossIdentifiers(){let t;if(typeof this.loss=="string")t=$s(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if(typeof e!="string")throw new Error("Serialization of non-string loss is not supported.");t=this.loss.map(e=>$s(e))}else{const e=Object.keys(this.loss);t={};const s=this.loss;for(const r of e)if(typeof s[r]=="string")t[r]=$s(s[r]);else throw new Error("Serialization of non-string loss is not supported.")}return t}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[$s(Bl(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(t=>$s(Bl(t)));{const t={};for(const e in this.metrics)t[e]=$s(Bl(this.metrics[e]));return t}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(t){if(t.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(t.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(t.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");const e=Tc(t.optimizer_config),s=xs(e);let r;if(typeof t.loss=="string")r=Dr(t.loss);else if(Array.isArray(t.loss))r=t.loss.map(o=>Dr(o));else if(t.loss!=null){r={};for(const o in t.loss)r[o]=Dr(t.loss[o])}let i;if(Array.isArray(t.metrics))i=t.metrics.map(o=>Dr(o));else if(t.metrics!=null){i={};for(const o in t.metrics)i[o]=Dr(t.metrics[o])}this.compile({loss:r,metrics:i,optimizer:s})}async save(t,e){if(typeof t=="string"){const c=L$(t);if(c.length===0)throw new N(`Cannot find any save handlers for URL '${t}'`);if(c.length>1)throw new N(`Found more than one (${c.length}) save handlers for URL '${t}'`);t=c[0]}if(t.save==null)throw new N("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const s=await wx(this.getNamedWeights(e)),a={modelTopology:this.toJSON(null,!1),format:dP,generatedBy:`TensorFlow.js tfjs-layers v${$1}`,convertedBy:null};if((e==null?!1:e.includeOptimizer)&&this.optimizer!=null){a.trainingConfig=this.getTrainingConfig();const c="optimizer",{data:u,specs:h}=await wx(await this.optimizer.getWeights(),c);s.specs.push(...h),s.data=R$([s.data,u])}return this.userDefinedMetadata!=null&&(Yx(this.userDefinedMetadata,this.name,!0),a.userDefinedMetadata=this.userDefinedMetadata),a.weightData=s.data,a.weightSpecs=s.specs,t.save(a)}setUserDefinedMetadata(t){Yx(t,this.name),this.userDefinedMetadata=t}getUserDefinedMetadata(){return this.userDefinedMetadata}}Vi.className="Model";j(Vi);class D1 extends Vi{}D1.className="Functional";j(D1);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */async function pP(n,t){if(t==null&&(t={}),typeof n=="string"){const e=V$(n,t);if(e.length===0)e.push(wD(n,t));else if(e.length>1)throw new N(`Found more than one (${e.length}) load handlers for URL '${n}'`);n=e[0]}return fP(n,void 0,t)}async function fP(n,t,e){if(e==null&&(e={}),n.load==null)throw new N("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const s=await n.load();let r=s.modelTopology;r.model_config!=null&&(r=r.model_config);const i=e.strict==null?!0:e.strict,o=s.weightData!=null&&s.weightSpecs!=null&&i,a=xs(Tc(r),t,o),l=s.trainingConfig;if(l!=null&&a.loadTrainingConfig(l),s.userDefinedMetadata!=null&&a.setUserDefinedMetadata(s.userDefinedMetadata),s.weightData!=null){if(s.weightSpecs==null)throw new N("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");const{modelWeights:c,optimizerWeights:u}=gP(s.weightData,s.weightSpecs);a.loadWeights(c,i),a.optimizer!=null&&u.length>0&&await a.optimizer.setWeights(u),vt(c),vt(u.map(h=>h.tensor))}return a}function gP(n,t){const e=v$(n,t),s={},r=[];return t.forEach(i=>{i.group==="optimizer"?r.push({name:i.name,tensor:e[i.name]}):s[i.name]=e[i.name]}),{modelWeights:s,optimizerWeights:r}}class ta extends Vi{constructor(t){if(super({inputs:[],outputs:[]}),t=t||{},this.trainable=!0,this.built=!1,this.name=t.name!=null?t.name:eh("sequential_"),t.layers!=null)for(const e of t.layers)this.add(e)}checkShape(t){if(t.inboundNodes[0].outputTensors[0].shape.some(s=>s<0))throw new N(`Negative dimension size caused by adding layer ${t.name} with input shape [${t.inboundNodes[0].inputTensors[0].shape}]`)}add(t){const e=t instanceof ta||t instanceof Vi;let s;if(e){if(s=t,s.outputs.length!==1)throw new N("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(s.inputs.length!==1)throw new N("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(t.inboundNodes.length===0){if(t.batchInputShape==null)throw new N("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const r=fM({batchShape:t.batchInputShape,dtype:t.dtype,name:t.name+"_input"});t.apply(r)}if(e)this.outputs=s.outputs,this.inputs=s.inputs;else{if(t.inboundNodes.length!==1)throw new N(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${t.name} which has ${t.inboundNodes.length} pre-existing inbound connections.`);if(t.inboundNodes[0].outputTensors.length!==1)throw new N("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[t.inboundNodes[0].outputTensors[0]],this.inputs=p1(this.outputs[0])}this.inboundNodes=[],new sh({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:ei(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(r=>r.shape),outputShapes:this.outputs[0].shape})}else{const r=t.apply(this.outputs[0]);if(Array.isArray(r))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[r],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(t),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const t=this.layers.length-1;this.layers[t].outboundNodes=[],this.outputs=[this.layers[t].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(t,e){return this.model==null&&this.build(),this.model.call(t,e)}build(t){if(At(t),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Vi({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(t,e,s=console.log){this.built||this.build(),super.summary(t,e,s)}setWeights(t){this.model==null&&this.build(),this.model.setWeights(t)}evaluate(t,e,s={}){if(!this.built)throw new Rn("The model needs to be compiled before being used.");return this.model.evaluate(t,e,s)}async evaluateDataset(t,e){if(!this.built)throw new Rn("The model needs to be compiled before being used.");return this.model.evaluateDataset(t,e)}predict(t,e={}){return this.model==null&&this.build(),this.model.predict(t,e)}predictOnBatch(t){return this.model==null&&this.build(),this.model.predictOnBatch(t)}compile(t){this.build(),this.model.compile(t),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(t){this.model.optimizer=t}async fit(t,e,s={}){if(!this.built)throw new Rn("The model needs to be compiled before being used.");return this.model.fit(t,e,s)}async fitDataset(t,e){if(!this.built)throw new Rn("The model needs to be compiled before being used.");return this.model.fitDataset(t,e)}async trainOnBatch(t,e){return this.model.trainOnBatch(t,e)}static fromConfig(t,e,s={},r=!1){let i,o={};if(e instanceof Array){if(e[0].className==null||e[0].className==="Merge")throw new N("Legacy serialization format not supported yet.");i=e}else S(e.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),i=e.layers,delete e.layers,o=e;const a=new t(o);if(!(a instanceof ta))throw new _t(`Sequential.fromConfig called on non-Sequential input: ${a}`);for(const l of i){const u=xs(l,void 0,r);r&&u.setFastWeightInitDuringBuild(!0),a.add(u)}return a}set stopTraining(t){if(this.model==null)throw new N("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=t}get stopTraining(){if(this.model==null)throw new N("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const t=[];for(const e of this.layers){const s={};s.className=e.getClassName(),s.config=e.getConfig(),t.push(s)}return{name:this.name,layers:t}}}ta.className="Sequential";j(ta);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let ze=class extends lo{getConfig(){return{}}};class A1 extends ze{apply(t,e=1){return ZF(t,e)}}A1.className="elu";j(A1);class F1 extends ze{apply(t){return K0(t)}}F1.className="selu";j(F1);class M1 extends ze{apply(t){return ui(t)}}M1.className="relu";j(M1);class P1 extends ze{apply(t){return M(()=>Yo(6,ui(t)))}}P1.className="relu6";j(P1);class O1 extends ze{apply(t){return t}}O1.className="linear";j(O1);class B1 extends ze{apply(t){return io(t)}}B1.className="sigmoid";j(B1);class L1 extends ze{apply(t){return tM(t)}}L1.className="hardSigmoid";j(L1);class V1 extends ze{apply(t){return il(t)}}V1.className="softplus";j(V1);class z1 extends ze{apply(t){return QF(t)}}z1.className="softsign";j(z1);class U1 extends ze{apply(t){return Hu(t)}}U1.className="tanh";j(U1);let pg=class extends ze{apply(t,e=-1){return gf(t,e)}};pg.className="softmax";j(pg);class W1 extends ze{apply(t,e=-1){return V0(t,e)}}W1.className="logSoftmax";j(W1);class G1 extends ze{apply(t){return M(()=>M(()=>{const e=Math.sqrt(2),s=E(.5,Y(1,M0(gt(t,e))));return E(t,s)}))}}G1.className="gelu";j(G1);class H1 extends ze{apply(t){return M(()=>E(.5,E(t,Y(1,Hu(E(Le(gt(2,Math.PI)),Y(t,E(.044715,Zr(t,3)))))))))}}H1.className="gelu_new";j(H1);class X1 extends ze{apply(t){return M(()=>E(t,Hu(il(t))))}}X1.className="mish";j(X1);class j1 extends ze{apply(t,e=1){return M(()=>E(io(E(t,e)),t))}}j1.className="swish";j(j1);function lr(n){return n.getClassName()}function zh(n,t={}){return dl(n,$n.getMap().classNameMap,t,"activation")}function cr(n){if(n==null){const t={};return t.className="linear",t.config={},zh(t)}if(typeof n=="string"){const t={};return t.className=n,t.config={},zh(t)}else return n instanceof ze?n:zh(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function mP(n){if(n!=null&&typeof n!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${n}`)}class q1 extends lo{}class K1 extends q1{constructor(t){super(),mP(t),this.l1=t==null||t.l1==null?.01:t.l1,this.l2=t==null||t.l2==null?.01:t.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(t){return M(()=>{let e=$e([1]);return this.hasL1&&(e=Y(e,pt(E(this.l1,We(t))))),this.hasL2&&(e=Y(e,pt(E(this.l2,fl(t))))),A(e,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(t,e){return new t({l1:e.l1,l2:e.l2})}}K1.className="L1L2";j(K1);const ny={l1l2:"L1L2"};function Gt(n){return Qf(n)}function sy(n,t={}){return dl(n,$n.getMap().classNameMap,t,"regularizer")}function se(n){if(n==null)return null;if(typeof n=="string"){const e={className:n in ny?ny[n]:n,config:{}};return sy(e)}else return n instanceof q1?n:sy(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Y1 extends Tt{constructor(t){super(t??{}),this.supportsMasking=!0,t!=null&&(this.maxValue=t.maxValue)}call(t,e){t=bt(t);let s=ui(t);return this.maxValue!=null&&(s=wn(s,0,this.maxValue)),s}computeOutputShape(t){return t}getConfig(){const t={maxValue:this.maxValue},e=super.getConfig();return Object.assign(t,e),t}}Y1.className="ReLU";j(Y1);class J1 extends Tt{constructor(t){super(t??{}),this.DEFAULT_ALPHA=.3,t==null&&(t={}),this.alpha=t.alpha==null?this.DEFAULT_ALPHA:t.alpha}call(t,e){const s=bt(t);return Zp(s,this.alpha)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}J1.className="LeakyReLU";j(J1);class Z1 extends Tt{constructor(t){if(super(t??{}),this.DEFAULT_ALPHA_INITIALIZER="zeros",t==null&&(t={}),this.supportsMasking=!0,this.alphaInitializer=ne(t.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=se(t.alphaRegularizer),this.alphaConstraint=_e(t.alphaConstraint),t.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(t.sharedAxes))this.sharedAxes=t.sharedAxes;else if(typeof t.sharedAxes=="number")this.sharedAxes=[t.sharedAxes];else throw new N(`Expected sharedAxes to be a number or an array of numbers, but got ${t.sharedAxes}`)}build(t){t=At(t);const e=t.slice(1);if(this.sharedAxes!=null)for(const r of this.sharedAxes)e[r-1]=1;this.alpha=this.addWeight("alpha",e,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const s={};if(this.sharedAxes!=null)for(let r=1;r<t.length;++r)s[r]=t[r];this.inputSpec=[new we({ndim:t.length,axes:s})],this.built=!0}call(t,e){return t=bt(t),rf(t,this.alpha.read())}getConfig(){const t={alphaInitializer:ie(this.alphaInitializer),alphaRegularizer:Gt(this.alphaRegularizer),alphaConstraint:Ce(this.alphaConstraint),sharedAxes:this.sharedAxes},e=super.getConfig();return Object.assign(t,e),t}}Z1.className="PReLU";j(Z1);let Q1=class extends Tt{constructor(t){if(super(t??{}),this.DEFAULT_ALPHA=1,t==null&&(t={}),t.alpha!=null&&t.alpha!==this.DEFAULT_ALPHA)throw new _t(`Non-default alpha value (${t.alpha}) is not supported by the ELU layer yet.`);this.alpha=t.alpha==null?this.DEFAULT_ALPHA:t.alpha}call(t,e){const s=bt(t);return qu(s)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}};Q1.className="ELU";j(Q1);class tC extends Tt{constructor(t){super(t??{}),this.DEFAULT_THETA=1,t==null&&(t={}),this.theta=t.theta==null?this.DEFAULT_THETA:t.theta}call(t,e){const s=bt(t);return E(s,rt(Cn(s,this.theta),"float32"))}computeOutputShape(t){return t}getConfig(){const t={theta:this.theta},e=super.getConfig();return Object.assign(t,e),t}}tC.className="ThresholdedReLU";j(tC);class eC extends Tt{constructor(t){super(t??{}),this.DEFAULT_AXIS=1,t==null&&(t={}),this.softmax=new pg().apply,this.axis=t.axis==null?this.DEFAULT_AXIS:t.axis}call(t,e){return M(()=>{let s=bt(t);const r=e.mask;if(r!=null){const i=E(yt(yr(s.shape),rt(r,s.dtype)),Mt(-1e9));s=Y(s,i)}return this.axis instanceof Array?this.axis.length>1?bs(yt(s,z0(s,this.axis,!0))):this.softmax(s,this.axis[0]):this.softmax(s,this.axis)})}computeOutputShape(t){return t}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}eC.className="Softmax";j(eC);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function zi(n,t,e){if(typeof n=="number")return ei(n,t);if(n.length!==t)throw new N(`The ${e} argument must be an integer or tuple of ${t} integers. Received: ${n.length} elements.`);for(let s=0;s<t;++s){const r=n[s];if(!qF(r))throw new N(`The ${e} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(n)} including a non-integer number ${r}`)}return n}function Qn(n,t,e,s,r=1){if(n==null)return n;const i=t+(t-1)*(r-1);let o;return e==="same"?o=n:o=n-i+1,Math.floor((o+s-1)/s)}function us(n,t,e,s){if(n==null)return null;if(s==="valid")n=n*t+ar([e-t,0]);else if(s==="same")n=n*t;else throw new N(`Unsupport padding mode: ${s}.`);return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function fg(n,t){return M(()=>(de(t),t==="channelsFirst"?Et(n,[0,2,3,1]):n))}function nC(n,t){return M(()=>(de(t),t==="channelsFirst"?Et(n,[0,2,3,4,1]):n))}function xP(n,t,e,s=1,r="valid",i,o=1){return M(()=>{if(i==null&&(i=es()),de(i),n.shape.length!==3)throw new N(`The input of a conv1dWithBias operation should be 3, but is ${n.shape.length} instead.`);if(t.shape.length!==3)throw new N(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(e!=null&&e.shape.length!==1)throw new N(`The bias for a conv1dWithBias operation should be 1, but is ${e.shape.length} instead`);if(i==="channelsFirst"&&(n=Et(n,[0,2,1])),r==="causal")throw new _t("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let a=E0(n,t,s,r==="same"?"same":"valid","NWC",o);return e!=null&&(a=rs(a,e)),a})}function ry(n,t,e,s=[1,1],r="valid",i,o,a=null){return M(()=>{if(i==null&&(i=es()),de(i),n.rank!==3&&n.rank!==4)throw new N(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${n.rank}.`);if(t.rank!==3&&t.rank!==4)throw new N(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${n.rank}.`);let l=fg(n,i);if(r==="causal")throw new _t("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=xR({x:l,filter:t,strides:s,pad:r==="same"?"same":"valid",dilations:o,dataFormat:"NHWC",bias:e,activation:a}),i==="channelsFirst"&&(l=Et(l,[0,3,1,2])),l})}function yP(n,t,e,s=[1,1,1],r="valid",i,o){return M(()=>{if(i==null&&(i=es()),de(i),n.rank!==4&&n.rank!==5)throw new N(`conv3dWithBias expects input to be of rank 4 or 5, but received ${n.rank}.`);if(t.rank!==4&&t.rank!==5)throw new N(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${n.rank}.`);let a=nC(n,i);if(r==="causal")throw new _t("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return a=mN(a,t,s,r==="same"?"same":"valid","NDHWC",o),e!=null&&(a=rs(a,e)),i==="channelsFirst"&&(a=Et(a,[0,4,1,2,3])),a})}class oh extends Tt{constructor(t,e){if(super(e),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",oh.verifyArgs(e),this.rank=t,Te(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new _t(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=zi(e.kernelSize,t,"kernelSize"),this.strides=zi(e.strides==null?1:e.strides,t,"strides"),this.padding=e.padding==null?"valid":e.padding,_n(this.padding),this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,de(this.dataFormat),this.activation=cr(e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.biasInitializer=ne(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=_e(e.biasConstraint),this.biasRegularizer=se(e.biasRegularizer),this.activityRegularizer=se(e.activityRegularizer),this.dilationRate=zi(e.dilationRate==null?1:e.dilationRate,t,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new N(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new N(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new N(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(t){if(cs("kernelSize"in t,"required key 'kernelSize' not in config"),typeof t.kernelSize!="number"&&!tg(t.kernelSize,"number",1,3))throw new N(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(t.kernelSize)}.`)}getConfig(){const t={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:lr(this.activation),useBias:this.useBias,biasInitializer:ie(this.biasInitializer),biasRegularizer:Gt(this.biasRegularizer),activityRegularizer:Gt(this.activityRegularizer),biasConstraint:Ce(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}class co extends oh{constructor(t,e){super(t,e),this.kernel=null,co.verifyArgs(e),this.filters=e.filters,Te(this.filters,"filters"),this.kernelInitializer=ne(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=_e(e.kernelConstraint),this.kernelRegularizer=se(e.kernelRegularizer)}build(t){t=At(t);const e=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[e]==null)throw new N(`The channel dimension of the input should be defined. Found ${t[e]}`);const s=t[e],r=this.kernelSize.concat([s,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[e]:s}}],this.built=!0}call(t,e){return M(()=>{t=bt(t);let s;const r=this.bias==null?null:this.bias.read(),i=Zw(this.activation.getClassName());if(i!=null&&this.rank===2)s=ry(t,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate,i);else{if(this.rank===1)s=xP(t,this.kernel.read(),r,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)s=ry(t,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)s=yP(t,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new _t("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(s=this.activation.apply(s))}return s})}computeOutputShape(t){t=At(t);const e=[],s=this.dataFormat==="channelsLast"?t.slice(1,t.length-1):t.slice(2);for(let i=0;i<s.length;++i){const o=Qn(s[i],this.kernelSize[i],this.padding,this.strides[i],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[i]);e.push(o)}let r=[t[0]];return this.dataFormat==="channelsLast"?(r=r.concat(e),r.push(this.filters)):(r.push(this.filters),r=r.concat(e)),r}getConfig(){const t={filters:this.filters,kernelInitializer:ie(this.kernelInitializer),kernelRegularizer:Gt(this.kernelRegularizer),kernelConstraint:Ce(this.kernelConstraint)},e=super.getConfig();return Object.assign(t,e),t}static verifyArgs(t){if(!("filters"in t)||typeof t.filters!="number"||t.filters<1)throw new N(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(t.filters)}`)}}class yl extends co{constructor(t){super(2,t),yl.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!tg(t.kernelSize,"number",1,2))throw new N(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(t.kernelSize)}.`)}}yl.className="Conv2D";j(yl);class bl extends co{constructor(t){super(3,t),bl.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!(Array.isArray(t.kernelSize)&&(t.kernelSize.length===1||t.kernelSize.length===3)))throw new N(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(t.kernelSize)}.`)}}bl.className="Conv3D";j(bl);class sC extends yl{constructor(t){if(super(t),this.inputSpec=[new we({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new N(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if(t=At(t),t.length!==4)throw new N("Input should have rank 4; Received input shape: "+JSON.stringify(t));const e=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[e]==null)throw new N("The channel dimension of the inputs should be defined. Found `None`.");const s=t[e],r=this.kernelSize.concat([this.filters,s]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new we({ndim:4,axes:{[e]:s}})],this.built=!0}call(t,e){return M(()=>{let s=bt(t);if(s.shape.length!==4)throw new N(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${s.shape.length}`);const r=s.shape,i=r[0];let o,a;this.dataFormat==="channelsFirst"?(o=2,a=3):(o=1,a=2);const l=r[o],c=r[a],u=this.kernelSize[0],h=this.kernelSize[1],d=this.strides[0],p=this.strides[1],f=us(l,d,u,this.padding),m=us(c,p,h,this.padding),g=[i,f,m,this.filters];this.dataFormat!=="channelsLast"&&(s=Et(s,[0,2,3,1]));let x=R0(s,this.kernel.read(),g,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(x=Et(x,[0,3,1,2])),this.bias!=null&&(x=rs(x,this.bias.read(),this.dataFormat)),this.activation!=null&&(x=this.activation.apply(x)),x})}computeOutputShape(t){t=At(t);const e=t.slice();let s,r,i;this.dataFormat==="channelsFirst"?(s=1,r=2,i=3):(s=3,r=1,i=2);const o=this.kernelSize[0],a=this.kernelSize[1],l=this.strides[0],c=this.strides[1];return e[s]=this.filters,e[r]=us(e[r],l,o,this.padding),e[i]=us(e[i],c,a,this.padding),e}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}sC.className="Conv2DTranspose";j(sC);class rC extends bl{constructor(t){if(super(t),this.inputSpec=[new we({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new N(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if(t=At(t),t.length!==5)throw new N("Input should have rank 5; Received input shape: "+JSON.stringify(t));const e=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[e]==null)throw new N("The channel dimension of the inputs should be defined. Found `None`.");const s=t[e],r=this.kernelSize.concat([this.filters,s]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new we({ndim:5,axes:{[e]:s}})],this.built=!0}call(t,e){return M(()=>{let s=bt(t);if(s.shape.length!==5)throw new N(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${s.shape.length}`);const r=s.shape,i=r[0];let o,a,l;this.dataFormat==="channelsFirst"?(l=2,o=3,a=4):(l=1,o=2,a=3);const c=r[l],u=r[o],h=r[a],d=this.kernelSize[0],p=this.kernelSize[1],f=this.kernelSize[2],m=this.strides[0],g=this.strides[1],x=this.strides[2],y=us(c,m,d,this.padding),w=us(u,g,p,this.padding),b=us(h,x,f,this.padding),C=[i,y,w,b,this.filters];this.dataFormat!=="channelsLast"&&(s=Et(s,[0,2,3,4,1]));let _=bN(s,this.kernel.read(),C,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(_=Et(_,[0,4,1,2,3])),this.bias!==null&&(_=rs(_,this.bias.read(),this.dataFormat)),this.activation!==null&&(_=this.activation.apply(_)),_})}computeOutputShape(t){t=At(t);const e=t.slice();let s,r,i,o;this.dataFormat==="channelsFirst"?(s=1,r=2,i=3,o=4):(s=4,r=1,i=2,o=3);const a=this.kernelSize[0],l=this.kernelSize[1],c=this.kernelSize[2],u=this.strides[0],h=this.strides[1],d=this.strides[2];return e[s]=this.filters,e[r]=us(e[r],u,a,this.padding),e[i]=us(e[i],h,l,this.padding),e[o]=us(e[o],d,c,this.padding),e}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}rC.className="Conv3DTranspose";j(rC);class iC extends co{constructor(t,e){if(super(t,e),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,e.filters==null)throw new N("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(e.kernelInitializer!=null||e.kernelRegularizer!=null||e.kernelConstraint!=null)throw new N("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(e.padding!=null&&e.padding!=="same"&&e.padding!=="valid")throw new N(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(e.padding)}`);this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=ne(e.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=se(e.depthwiseRegularizer),this.depthwiseConstraint=_e(e.depthwiseConstraint),this.pointwiseInitializer=ne(e.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=se(e.pointwiseRegularizer),this.pointwiseConstraint=_e(e.pointwiseConstraint)}build(t){if(t=At(t),t.length<this.rank+2)throw new N(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(t)}`);const e=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[e]==null||t[e]<0)throw new N(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(t[e])}`);const s=t[e],r=this.kernelSize.concat([s,this.depthMultiplier]),i=[];for(let a=0;a<this.rank;++a)i.push(1);i.push(s*this.depthMultiplier,this.filters);const o=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,o,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",i,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,o,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,o,this.biasConstraint):this.bias=null,this.inputSpec=[new we({ndim:this.rank+2,axes:{[e]:s}})],this.built=!0}call(t,e){return M(()=>{t=bt(t);let s;if(this.rank===1)throw new _t("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(t=Et(t,[0,2,3,1])),s=Y0(t,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(s=rs(s,this.bias.read(),this.dataFormat)),this.activation!=null&&(s=this.activation.apply(s)),this.dataFormat==="channelsFirst"&&(s=Et(s,[0,3,1,2])),s})}getConfig(){const t=super.getConfig();return delete t.rank,delete t.kernelInitializer,delete t.kernelRegularizer,delete t.kernelConstraint,t.depthwiseInitializer=ie(this.depthwiseInitializer),t.pointwiseInitializer=ie(this.pointwiseInitializer),t.depthwiseRegularizer=Gt(this.depthwiseRegularizer),t.pointwiseRegularizer=Gt(this.pointwiseRegularizer),t.depthwiseConstraint=Ce(this.depthwiseConstraint),t.pointwiseConstraint=Ce(this.pointwiseConstraint),t}}iC.className="SeparableConv";class oC extends iC{constructor(t){super(2,t)}}oC.className="SeparableConv2D";j(oC);class ah extends co{constructor(t){super(1,t),ah.verifyArgs(t),this.inputSpec=[{ndim:3}]}getConfig(){const t=super.getConfig();return delete t.rank,delete t.dataFormat,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!tg(t.kernelSize,"number",1,1))throw new N(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(t.kernelSize)}.`)}}ah.className="Conv1D";j(ah);class aC extends Tt{constructor(t){super(t),typeof t.cropping=="number"?this.cropping=[[t.cropping,t.cropping],[t.cropping,t.cropping]]:typeof t.cropping[0]=="number"?this.cropping=[[t.cropping[0],t.cropping[0]],[t.cropping[1],t.cropping[1]]]:this.cropping=t.cropping,this.dataFormat=t.dataFormat===void 0?"channelsLast":t.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(t){return this.dataFormat==="channelsFirst"?[t[0],t[1],t[2]-this.cropping[0][0]-this.cropping[0][1],t[3]-this.cropping[1][0]-this.cropping[1][1]]:[t[0],t[1]-this.cropping[0][0]-this.cropping[0][1],t[2]-this.cropping[1][0]-this.cropping[1][1],t[3]]}call(t,e){return M(()=>{if(t=bt(t),this.dataFormat==="channelsLast"){const s=Ol(t,this.cropping[0][0],t.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Ol(s,this.cropping[1][0],t.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{const s=Ol(t,this.cropping[0][0],t.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Ol(s,this.cropping[1][0],t.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){const t={cropping:this.cropping,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}aC.className="Cropping2D";j(aC);class lC extends Tt{constructor(t){super(t),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=t.size==null?this.DEFAULT_SIZE:t.size,this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,de(this.dataFormat),this.interpolation=t.interpolation==null?"nearest":t.interpolation,HF(this.interpolation)}computeOutputShape(t){if(this.dataFormat==="channelsFirst"){const e=t[2]==null?null:this.size[0]*t[2],s=t[3]==null?null:this.size[1]*t[3];return[t[0],t[1],e,s]}else{const e=t[1]==null?null:this.size[0]*t[1],s=t[2]==null?null:this.size[1]*t[2];return[t[0],e,s,t[3]]}}call(t,e){return M(()=>{let s=bt(t);const r=s.shape;if(this.dataFormat==="channelsFirst"){s=Et(s,[0,2,3,1]);const i=this.size[0]*r[2],o=this.size[1]*r[3],a=this.interpolation==="nearest"?Es.resizeNearestNeighbor(s,[i,o]):Es.resizeBilinear(s,[i,o]);return Et(a,[0,3,1,2])}else{const i=this.size[0]*r[1],o=this.size[1]*r[2];return this.interpolation==="nearest"?Es.resizeNearestNeighbor(s,[i,o]):Es.resizeBilinear(s,[i,o])}})}getConfig(){const t={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},e=super.getConfig();return Object.assign(t,e),t}}lC.className="UpSampling2D";j(lC);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function bP(n,t,e=[1,1],s="valid",r,i){return M(()=>{r==null&&(r=es()),de(r);let o=fg(n,r);if(n.rank!==4)throw new N(`Input for depthwiseConv2d is required to be 4-D, but is instead ${n.rank}-D`);if(t.rank!==4)throw new N(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return o=qp(o,t,e,s==="same"?"same":"valid","NHWC",i),r==="channelsFirst"&&(o=Et(o,[0,3,1,2])),o})}class cC extends oh{constructor(t){super(2,t),this.depthwiseKernel=null,this.depthMultiplier=t.depthMultiplier==null?1:t.depthMultiplier,this.depthwiseInitializer=ne(t.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=_e(t.depthwiseConstraint),this.depthwiseRegularizer=se(t.depthwiseRegularizer)}build(t){if(t=At(t),t.length<4)throw new N(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(t)}.`);const e=this.dataFormat==="channelsFirst"?1:3;if(t[e]==null||t[e]<0)throw new N(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${t[e]}).`);const s=t[e],r=[this.kernelSize[0],this.kernelSize[1],s,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[s*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return M(()=>{t=bt(t);let s=bP(t,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(s=rs(s,this.bias.read(),this.dataFormat)),this.activation!=null&&(s=this.activation.apply(s)),s})}computeOutputShape(t){t=At(t);const e=this.dataFormat==="channelsFirst"?t[2]:t[1],s=this.dataFormat==="channelsFirst"?t[3]:t[2],r=this.dataFormat==="channelsFirst"?t[1]*this.depthMultiplier:t[3]*this.depthMultiplier,i=Qn(e,this.kernelSize[0],this.padding,this.strides[0]),o=Qn(s,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[t[0],r,i,o]:[t[0],i,o,r]}getConfig(){const t=super.getConfig();return t.depthMultiplier=this.depthMultiplier,t.depthwiseInitializer=ie(this.depthwiseInitializer),t.depthwiseRegularizer=Gt(this.depthwiseRegularizer),t.depthwiseConstraint=Ce(this.depthwiseRegularizer),t}}cC.className="DepthwiseConv2D";j(cC);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function uC(n,t,e,s){if(Array.isArray(n)){if(t!=null||e!=null)throw new N("When inputs is an array, neither initialState or constants should be provided");s!=null&&(e=n.slice(n.length-s,n.length),n=n.slice(0,n.length-s)),n.length>1&&(t=n.slice(1,n.length)),n=n[0]}function r(i){return i==null||Array.isArray(i)?i:[i]}return t=r(t),e=r(e),{inputs:n,initialState:t,constants:e}}function hC(n,t,e,s=!1,r,i,o=!1,a=!1){return M(()=>{const l=t.shape.length;if(l<3)throw new N(`Input should be at least 3D, but is ${l}D.`);const c=[1,0].concat(ts(2,l));if(t=Et(t,c),i!=null)throw new _t("The rnn() functoin of the deeplearn.js backend does not support constants yet.");o&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),r!=null&&(r=rt(rt(r,"bool"),"float32"),r.rank===l-1&&(r=Je(r,-1)),r=Et(r,c)),s&&(t=Qr(t,0),r!=null&&(r=Qr(r,0)));const u=[];let h,d=e;const p=t.shape[0],f=ti(t);let m;r!=null&&(m=ti(r));for(let x=0;x<p;++x){const y=f[x],w=M(()=>n(y,d));if(r==null)h=w[0],d=w[1];else{const b=M(()=>{const C=m[x],_=yt(Mn(C),C),I=Y(E(w[0],C),E(d[0],_)),v=d.map((k,T)=>Y(E(w[1][T],C),E(k,_)));return{output:I,newStates:v}});h=b.output,d=b.newStates}a&&u.push(h)}let g;return a&&(g=Ds(u,1)),[h,g,d]})}class wr extends Tt{constructor(t){super(t);let e;if(t.cell==null)throw new N("cell property is missing for the constructor of RNN.");if(Array.isArray(t.cell)?e=new xg({cells:t.cell}):e=t.cell,e.stateSize==null)throw new N("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=e,this.returnSequences=t.returnSequences==null?!1:t.returnSequences,this.returnState=t.returnState==null?!1:t.returnState,this.goBackwards=t.goBackwards==null?!1:t.goBackwards,this._stateful=t.stateful==null?!1:t.stateful,this.unroll=t.unroll==null?!1:t.unroll,this.supportsMasking=!0,this.inputSpec=[new we({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){const t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return ts(0,t).map(e=>null)}else return this.states_}setStates(t){this.states_=t}computeOutputShape(t){Id(t)&&(t=t[0]),t=t;let e=this.cell.stateSize;Array.isArray(e)||(e=[e]);const s=e[0];let r;if(this.returnSequences?r=[t[0],t[1],s]:r=[t[0],s],this.returnState){const i=[];for(const o of e)i.push([t[0],o]);return[r].concat(i)}else return r}computeMask(t,e){return M(()=>{Array.isArray(e)&&(e=e[0]);const s=this.returnSequences?e:null;if(this.returnState){const r=this.states.map(i=>null);return[s].concat(r)}else return s})}get states(){if(this.states_==null){const t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,e=[];for(let s=0;s<t;++s)e.push(null);return e}else return this.states_}set states(t){this.states_=t}build(t){if(this.numConstants!=null)throw new _t("Constants support is not implemented in RNN yet.");Id(t)&&(t=t[0]),t=t;const e=this.stateful?t[0]:null,s=t.slice(2);this.inputSpec[0]=new we({shape:[e,null,...s]});const r=[t[0]].concat(t.slice(2));this.cell.build(r);let i;if(Array.isArray(this.cell.stateSize)?i=this.cell.stateSize:i=[this.cell.stateSize],this.stateSpec!=null){if(!Pt(this.stateSpec.map(o=>o.shape[o.shape.length-1]),i))throw new N(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=i.map(o=>new we({shape:[null,o]}));this.stateful&&this.resetStates()}resetStates(t,e=!1){M(()=>{if(!this.stateful)throw new ls("Cannot call resetStates() on an RNN Layer that is not stateful.");const s=this.inputSpec[0].shape[0];if(s==null)throw new N("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(r=>$e([s,r])):this.states_=[$e([s,this.cell.stateSize])];else if(t==null)vt(this.states_),this.keptStates!=null&&(vt(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(r=>$e([s,r])):this.states_[0]=$e([s,this.cell.stateSize]);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new N(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);e===!0?this.keptStates.push(this.states_.slice()):vt(this.states_);for(let r=0;r<this.states_.length;++r){const i=t[r],o=Array.isArray(this.cell.stateSize)?this.cell.stateSize[r]:this.cell.stateSize,a=[s,o];if(!Pt(i.shape,a))throw new N(`State ${r} is incompatible with layer ${this.name}: expected shape=${a}, received shape=${i.shape}`);this.states_[r]=i}}this.states_=this.states_.map(r=>ps(r.clone()))})}apply(t,e){let s=e==null?null:e.initialState,r=e==null?null:e.constants;e==null&&(e={});const i=uC(t,s,r,this.numConstants);t=i.inputs,s=i.initialState,r=i.constants;let o=[],a=[];if(s!=null){e.initialState=s,o=o.concat(s),this.stateSpec=[];for(const c of s)this.stateSpec.push(new we({shape:c.shape}));a=a.concat(this.stateSpec)}if(r!=null&&(e.constants=r,o=o.concat(r),this.numConstants=r.length),o[0]instanceof Cs){const c=[t].concat(o),u=this.inputSpec.concat(a),h=this.inputSpec;this.inputSpec=u;const d=super.apply(c,e);return this.inputSpec=h,d}else return super.apply(t,e)}call(t,e){return M(()=>{const s=e==null?null:e.mask,r=e==null?null:e.training;let i=e==null?null:e.initialState;t=bt(t),i==null&&(this.stateful?i=this.states_:i=this.getInitialState(t));const o=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(i.length!==o)throw new N(`RNN Layer has ${o} state(s) but was passed ${i.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const a={training:r},c=hC((f,m)=>{const g=this.cell.call([f].concat(m),a);return[g[0],g.slice(1)]},t,i,this.goBackwards,s,null,this.unroll,this.returnSequences),u=c[0],h=c[1],d=c[2];this.stateful&&this.resetStates(d,r);const p=this.returnSequences?h:u;return this.returnState?[p].concat(d):p})}getInitialState(t){return M(()=>{let e=$e(t.shape);return e=pt(e,[1,2]),e=pl(e),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(s=>s>1?_d(e,[1,s]):e):this.cell.stateSize>1?[_d(e,[1,this.cell.stateSize])]:[e]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(t)}getConfig(){const t=super.getConfig(),e={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(e.numConstants=this.numConstants);const s=this.cell.getConfig();return this.getClassName()===wr.className&&(e.cell={className:this.cell.getClassName(),config:s}),Object.assign(Object.assign(Object.assign({},s),t),e)}static fromConfig(t,e,s={}){const r=e.cell,i=xs(r,s);return new t(Object.assign(e,{cell:i}))}}wr.className="RNN";j(wr);class lh extends Tt{}class gg extends lh{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,Te(this.units,"units"),this.activation=cr(t.activation==null?this.DEFAULT_ACTIVATION:t.activation),this.useBias=t.useBias==null?!0:t.useBias,this.kernelInitializer=ne(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=ne(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=ne(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=se(t.kernelRegularizer),this.recurrentRegularizer=se(t.recurrentRegularizer),this.biasRegularizer=se(t.biasRegularizer),this.kernelConstraint=_e(t.kernelConstraint),this.recurrentConstraint=_e(t.recurrentConstraint),this.biasConstraint=_e(t.biasConstraint),this.dropout=Yi([1,ar([0,t.dropout==null?0:t.dropout])]),this.recurrentDropout=Yi([1,ar([0,t.recurrentDropout==null?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=At(t),this.kernel=this.addWeight("kernel",[t[t.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return M(()=>{if(t=t,t.length!==2)throw new N(`SimpleRNNCell expects 2 input Tensors, got ${t.length}.`);let s=t[1];t=t[0];const r=e.training==null?!1:e.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=ur({ones:()=>Mn(t),rate:this.dropout,training:r,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=ur({ones:()=>Mn(s),rate:this.recurrentDropout,training:r,dropoutFunc:this.dropoutFunc}));let i;const o=this.dropoutMask,a=this.recurrentDropoutMask;o!=null?i=ms(E(t,o),this.kernel.read()):i=ms(t,this.kernel.read()),this.bias!=null&&(i=rs(i,this.bias.read())),a!=null&&(s=E(s,a));let l=Y(i,ms(s,this.recurrentKernel.read()));return this.activation!=null&&(l=this.activation.apply(l)),[l,l]})}getConfig(){const t=super.getConfig(),e={units:this.units,activation:lr(this.activation),useBias:this.useBias,kernelInitializer:ie(this.kernelInitializer),recurrentInitializer:ie(this.recurrentInitializer),biasInitializer:ie(this.biasInitializer),kernelRegularizer:Gt(this.kernelRegularizer),recurrentRegularizer:Gt(this.recurrentRegularizer),biasRegularizer:Gt(this.biasRegularizer),activityRegularizer:Gt(this.activityRegularizer),kernelConstraint:Ce(this.kernelConstraint),recurrentConstraint:Ce(this.recurrentConstraint),biasConstraint:Ce(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},t),e)}}gg.className="SimpleRNNCell";j(gg);class dC extends wr{constructor(t){t.cell=new gg(t),super(t)}call(t,e){return M(()=>{this.cell.dropoutMask!=null&&(vt(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(vt(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=e==null?null:e.mask,r=e==null?null:e.training,i=e==null?null:e.initialState;return super.call(t,{mask:s,training:r,initialState:i})})}static fromConfig(t,e){return new t(e)}}dC.className="SimpleRNN";j(dC);class mg extends lh{constructor(t){if(super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.resetAfter)throw new N("GRUCell does not support reset_after parameter set to true.");this.units=t.units,Te(this.units,"units"),this.activation=cr(t.activation===void 0?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=cr(t.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=t.useBias==null?!0:t.useBias,this.kernelInitializer=ne(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=ne(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=ne(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=se(t.kernelRegularizer),this.recurrentRegularizer=se(t.recurrentRegularizer),this.biasRegularizer=se(t.biasRegularizer),this.kernelConstraint=_e(t.kernelConstraint),this.recurrentConstraint=_e(t.recurrentConstraint),this.biasConstraint=_e(t.biasConstraint),this.dropout=Yi([1,ar([0,t.dropout==null?0:t.dropout])]),this.recurrentDropout=Yi([1,ar([0,t.recurrentDropout==null?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.implementation=t.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=At(t);const e=t[t.length-1];this.kernel=this.addWeight("kernel",[e,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return M(()=>{if(t=t,t.length!==2)throw new N(`GRUCell expects 2 input Tensors (inputs, h, c), got ${t.length}.`);const s=e.training==null?!1:e.training;let r=t[1];t=t[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=ur({ones:()=>Mn(t),rate:this.dropout,training:s,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=ur({ones:()=>Mn(r),rate:this.recurrentDropout,training:s,count:3,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,o=this.recurrentDropoutMask;let a,l,c;0<this.dropout&&this.dropout<1&&(t=E(t,i[0]));let u=ms(t,this.kernel.read());this.useBias&&(u=rs(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=E(r,o[0]));const h=this.recurrentKernel.read(),[d,p]=bn(h,[2*this.units,this.units],h.rank-1),f=ms(r,d),[m,g,x]=bn(u,3,u.rank-1),[y,w]=bn(f,2,f.rank-1);a=this.recurrentActivation.apply(Y(m,y)),l=this.recurrentActivation.apply(Y(g,w));const b=ms(E(l,r),p);c=this.activation.apply(Y(x,b));const C=Y(E(a,r),E(Y(1,ce(a)),c));return[C,C]})}getConfig(){const t=super.getConfig(),e={units:this.units,activation:lr(this.activation),recurrentActivation:lr(this.recurrentActivation),useBias:this.useBias,kernelInitializer:ie(this.kernelInitializer),recurrentInitializer:ie(this.recurrentInitializer),biasInitializer:ie(this.biasInitializer),kernelRegularizer:Gt(this.kernelRegularizer),recurrentRegularizer:Gt(this.recurrentRegularizer),biasRegularizer:Gt(this.biasRegularizer),activityRegularizer:Gt(this.activityRegularizer),kernelConstraint:Ce(this.kernelConstraint),recurrentConstraint:Ce(this.recurrentConstraint),biasConstraint:Ce(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},t),e)}}mg.className="GRUCell";j(mg);class pC extends wr{constructor(t){t.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new mg(t),super(t)}call(t,e){return M(()=>{this.cell.dropoutMask!=null&&(vt(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(vt(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=e==null?null:e.mask,r=e==null?null:e.training,i=e==null?null:e.initialState;return super.call(t,{mask:s,training:r,initialState:i})})}static fromConfig(t,e){return e.implmentation===0&&(e.implementation=1),new t(e)}}pC.className="GRU";j(pC);class ch extends lh{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,Te(this.units,"units"),this.activation=cr(t.activation===void 0?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=cr(t.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=t.useBias==null?!0:t.useBias,this.kernelInitializer=ne(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=ne(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=ne(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=t.unitForgetBias,this.kernelRegularizer=se(t.kernelRegularizer),this.recurrentRegularizer=se(t.recurrentRegularizer),this.biasRegularizer=se(t.biasRegularizer),this.kernelConstraint=_e(t.kernelConstraint),this.recurrentConstraint=_e(t.recurrentConstraint),this.biasConstraint=_e(t.biasConstraint),this.dropout=Yi([1,ar([0,t.dropout==null?0:t.dropout])]),this.recurrentDropout=Yi([1,ar([0,t.recurrentDropout==null?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.implementation=t.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){var e;t=At(t);const s=t[t.length-1];this.kernel=this.addWeight("kernel",[s,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let r;if(this.useBias){if(this.unitForgetBias){const i=this.biasInitializer,o=this.units;r=new(e=class extends On{apply(l,c){const u=i.apply([o]),h=new ng().apply([o]),d=i.apply([o*2]);return zx(zx(u,h),d)}},e.className="CustomInit",e)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(t,e){return M(()=>{const s=e.training==null?!1:e.training;if(t=t,t.length!==3)throw new N(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);let r=t[1];const i=t[2];t=t[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=ur({ones:()=>Mn(t),rate:this.dropout,training:s,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=ur({ones:()=>Mn(r),rate:this.recurrentDropout,training:s,count:4,dropoutFunc:this.dropoutFunc}));const o=this.dropoutMask,a=this.recurrentDropoutMask;let l,c,u,h;0<this.dropout&&this.dropout<1&&(t=E(t,o[0]));let d=ms(t,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=E(r,a[0])),d=Y(d,ms(r,this.recurrentKernel.read())),this.useBias&&(d=rs(d,this.bias.read()));const[p,f,m,g]=bn(d,4,d.rank-1);l=this.recurrentActivation.apply(p),c=this.recurrentActivation.apply(f),u=Y(E(c,i),E(l,this.activation.apply(m))),h=this.recurrentActivation.apply(g);const x=E(h,this.activation.apply(u));return[x,x,u]})}getConfig(){const t=super.getConfig(),e={units:this.units,activation:lr(this.activation),recurrentActivation:lr(this.recurrentActivation),useBias:this.useBias,kernelInitializer:ie(this.kernelInitializer),recurrentInitializer:ie(this.recurrentInitializer),biasInitializer:ie(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Gt(this.kernelRegularizer),recurrentRegularizer:Gt(this.recurrentRegularizer),biasRegularizer:Gt(this.biasRegularizer),activityRegularizer:Gt(this.activityRegularizer),kernelConstraint:Ce(this.kernelConstraint),recurrentConstraint:Ce(this.recurrentConstraint),biasConstraint:Ce(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},t),e)}}ch.className="LSTMCell";j(ch);class fC extends wr{constructor(t){t.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new ch(t),super(t)}call(t,e){return M(()=>{this.cell.dropoutMask!=null&&(vt(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(vt(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=e==null?null:e.mask,r=e==null?null:e.training,i=e==null?null:e.initialState;return super.call(t,{mask:s,training:r,initialState:i})})}static fromConfig(t,e){return e.implmentation===0&&(e.implementation=1),new t(e)}}fC.className="LSTM";j(fC);class xg extends lh{constructor(t){super(t),this.cells=t.cells}get stateSize(){const t=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?t.push(...e.stateSize):t.push(e.stateSize);return t}call(t,e){return M(()=>{t=t;let s=t.slice(1);const r=[];for(const a of this.cells.slice().reverse())Array.isArray(a.stateSize)?r.push(s.splice(0,a.stateSize.length)):r.push(s.splice(0,1));r.reverse();const i=[];let o;for(let a=0;a<this.cells.length;++a){const l=this.cells[a];s=r[a],a===0?o=[t[0]].concat(s):o=[o[0]].concat(s),o=l.call(o,e),i.push(o.slice(1))}s=[];for(const a of i.slice().reverse())s.push(...a);return[o[0]].concat(s)})}build(t){Id(t)&&(t=t[0]),t=t;let e;this.cells.forEach((s,r)=>{Ur(`RNNCell_${r}`,()=>{s.build(t),Array.isArray(s.stateSize)?e=s.stateSize[0]:e=s.stateSize,t=[t[0],e]})}),this.built=!0}getConfig(){const t=super.getConfig(),e=i=>({className:i.getClassName(),config:i.getConfig()}),r={cells:this.cells.map(e)};return Object.assign(Object.assign({},t),r)}static fromConfig(t,e,s={}){const r=[];for(const i of e.cells)r.push(xs(i,s));return new t({cells:r})}get trainableWeights(){if(!this.trainable)return[];const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.cells)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const s of this.cells)e.push(...s.trainableWeights);return e.concat(t)}return t}getWeights(){const t=[];for(const e of this.cells)t.push(...e.weights);return vd(t)}setWeights(t){const e=[];for(const s of this.cells){const r=s.weights.length,i=t.splice(r);for(let o=0;o<s.weights.length;++o)e.push([s.weights[o],i[o]])}cg(e)}}xg.className="StackedRNNCells";j(xg);function ur(n){const{ones:t,rate:e,training:s=!1,count:r=1,dropoutFunc:i}=n,o=()=>i!=null?i(t(),e):i1(t(),e),a=()=>gl(o,t,s);return!r||r<=1?ps(a().clone()):Array(r).fill(void 0).map(a).map(c=>ps(c.clone()))}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var wP=function(n,t){var e={};for(var s in n)Object.prototype.hasOwnProperty.call(n,s)&&t.indexOf(s)<0&&(e[s]=n[s]);if(n!=null&&typeof Object.getOwnPropertySymbols=="function")for(var r=0,s=Object.getOwnPropertySymbols(n);r<s.length;r++)t.indexOf(s[r])<0&&Object.prototype.propertyIsEnumerable.call(n,s[r])&&(e[s[r]]=n[s[r]]);return e};class gC extends wr{constructor(t){if(t.unroll)throw new _t("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(t.cell))throw new _t("It is not possible at the moment to stack convolutional cells.");super(t),this.inputSpec=[new we({ndim:5})]}call(t,e){return M(()=>{if(this.cell.dropoutMask!=null&&(vt(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(vt(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),e&&e.constants)throw new N("ConvRNN2D cell does not support constants");const s=e==null?null:e.mask,r=e==null?null:e.training,i=e==null?null:e.initialState;return super.call(t,{mask:s,training:r,initialState:i})})}computeOutputShape(t){let e=this.computeSingleOutputShape(t);return this.returnSequences||(e=[e[0],...e.slice(2)]),this.returnState&&(e=[e,...Array(2).fill([t[0],...e.slice(-3)])]),e}getInitialState(t){return M(()=>{const{stateSize:e}=this.cell,s=t.shape,r=this.computeSingleOutputShape(s),i=[r[0],...r.slice(2)],o=$e(i);return Array.isArray(e)?Array(e.length).fill(o):[o]})}resetStates(t,e=!1){M(()=>{if(!this.stateful)throw new ls("Cannot call resetStates() on an RNN Layer that is not stateful.");const s=this.inputSpec[0].shape,r=this.computeSingleOutputShape(s),i=[r[0],...r.slice(2)];if(s[0]==null)throw new N("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>$e(i)):this.states_=[$e(i)];else if(t==null)vt(this.states_),this.keptStates!=null&&(vt(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>$e(i)):this.states_[0]=$e(i);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new N(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);e?this.keptStates.push(this.states_.slice()):vt(this.states_);for(let a=0;a<this.states_.length;++a){const l=t[a],c=i;if(!Pt(l.shape,c))throw new N(`State ${a} is incompatible with layer ${this.name}: expected shape=${c}, received shape=${l.shape}`);this.states_[a]=l}}this.states_=this.states_.map(a=>ps(a.clone()))})}computeSingleOutputShape(t){const{dataFormat:e,filters:s,kernelSize:r,padding:i,strides:o,dilationRate:a}=this.cell,l=e==="channelsFirst",c=t[l?3:2],u=t[l?4:3],h=Qn(c,r[0],i,o[0],a[0]),d=Qn(u,r[1],i,o[1],a[1]);return[...t.slice(0,2),...l?[s,h,d]:[h,d,s]]}}gC.className="ConvRNN2D";class yg extends ch{constructor(t){const{filters:e,kernelSize:s,strides:r,padding:i,dataFormat:o,dilationRate:a}=t;super(Object.assign(Object.assign({},t),{units:e})),this.filters=e,Te(this.filters,"filters"),this.kernelSize=zi(s,2,"kernelSize"),this.kernelSize.forEach(l=>Te(l,"kernelSize")),this.strides=zi(r||1,2,"strides"),this.strides.forEach(l=>Te(l,"strides")),this.padding=i||"valid",_n(this.padding),this.dataFormat=o||"channelsLast",de(this.dataFormat),this.dilationRate=zi(a||1,2,"dilationRate"),this.dilationRate.forEach(l=>Te(l,"dilationRate"))}build(t){var e;t=At(t);const s=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[s]==null)throw new N(`The channel dimension of the input should be defined. Found ${t[s]}`);const r=t[s],i=4,o=this.kernelSize.concat([r,this.filters*i]);this.kernel=this.addWeight("kernel",o,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const a=this.kernelSize.concat([this.filters,this.filters*i]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",a,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let l;if(this.unitForgetBias){const c=this.biasInitializer,u=this.filters;l=new(e=class extends On{apply(d,p){const f=c.apply([u]),m=yr([u]),g=c.apply([u*2]);return eg([f,m,g])}},e.className="CustomInit",e)}else l=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*i],null,l,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(t,e){return M(()=>{if(t.length!==3)throw new N(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);const s=e.training||!1,r=t[0],i=t[1],o=t[2],a=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=ur({ones:()=>Mn(r),rate:this.dropout,training:s,count:a,dropoutFunc:this.dropoutFunc}));const l=this.dropoutMask,c=(q,K,Z)=>!K||!K[Z]?q:E(K[Z],q);let u=c(r,l,0),h=c(r,l,1),d=c(r,l,2),p=c(r,l,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=ur({ones:()=>Mn(i),rate:this.recurrentDropout,training:s,count:a,dropoutFunc:this.dropoutFunc}));const f=this.recurrentDropoutMask;let m=c(i,f,0),g=c(i,f,1),x=c(i,f,2),y=c(i,f,3);const w=3,[b,C,_,I]=bn(this.kernel.read(),a,w),[v,k,T,D]=this.useBias?bn(this.bias.read(),a):[null,null,null,null];u=this.inputConv(u,b,v,this.padding),h=this.inputConv(h,C,k,this.padding),d=this.inputConv(d,_,T,this.padding),p=this.inputConv(p,I,D,this.padding);const[P,B,V,L]=bn(this.recurrentKernel.read(),a,w);m=this.recurrentConv(m,P),g=this.recurrentConv(g,B),x=this.recurrentConv(x,V),y=this.recurrentConv(y,L);const z=this.recurrentActivation.apply(Y(u,m)),H=this.recurrentActivation.apply(Y(h,g)),G=Y(E(H,o),E(z,this.activation.apply(Y(d,x)))),X=E(this.recurrentActivation.apply(Y(p,y)),this.activation.apply(G));return[X,X,G]})}getConfig(){const t=super.getConfig(),e=wP(t,["units"]),s={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},e),s)}inputConv(t,e,s,r){const i=Jr(t,e,this.strides,r||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return s?rs(i,s,this.dataFormat):i}recurrentConv(t,e){return Jr(t,e,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}}yg.className="ConvLSTM2DCell";j(yg);class mC extends gC{constructor(t){const e=new yg(t);super(Object.assign(Object.assign({},t),{cell:e}))}static fromConfig(t,e){return new t(e)}}mC.className="ConvLSTM2D";j(mC);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class bg extends Tt{constructor(t){super(t),this.rate=Math.max(Math.min(t.rate,1),0),this.noiseShape=t.noiseShape,this.seed=t.seed,this.supportsMasking=!0}getNoiseShape(t){if(this.noiseShape==null)return this.noiseShape;const e=t.shape,s=[];for(let r=0;r<this.noiseShape.length;++r)s.push(this.noiseShape[r]==null?e[r]:this.noiseShape[r]);return s}call(t,e){return M(()=>{this.invokeCallHook(t,e);const s=bt(t);if(0<this.rate&&this.rate<1){const r=e.training==null?!1:e.training,i=this.getNoiseShape(s);return gl(()=>i1(s,this.rate,i,this.seed),()=>s,r)}return t})}getConfig(){const t={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},e=super.getConfig();return Object.assign(t,e),t}dispose(){return super.dispose()}}bg.className="Dropout";j(bg);class xC extends bg{constructor(t){super(t),this.inputSpec=[{ndim:3}]}getNoiseShape(t){const e=t.shape;return[e[0],1,e[2]]}}xC.className="SpatialDropout1D";j(xC);class yC extends Tt{constructor(t){if(super(t),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.batchInputShape==null&&t.inputShape==null&&t.inputDim!=null){let e=null;t.batchSize!=null&&(e=t.batchSize),this.batchInputShape=[e,t.inputDim]}this.units=t.units,Te(this.units,"units"),this.activation=cr(t.activation),t.useBias!=null&&(this.useBias=t.useBias),this.kernelInitializer=ne(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=ne(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=_e(t.kernelConstraint),this.biasConstraint=_e(t.biasConstraint),this.kernelRegularizer=se(t.kernelRegularizer),this.biasRegularizer=se(t.biasRegularizer),this.activityRegularizer=se(t.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(t){t=At(t);const e=t[t.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[e,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:e}}],this.built=!0}computeOutputShape(t){t=At(t);const e=t.slice();return e[e.length-1]=this.units,e}call(t,e){return M(()=>{this.invokeCallHook(t,e);const s=bt(t),r=Zw(this.activation.getClassName());let i;return r!=null?i=ms(s,this.kernel.read(),r,this.bias?this.bias.read():null):(i=ms(s,this.kernel.read()),this.bias!=null&&(i=rs(i,this.bias.read())),this.activation!=null&&(i=this.activation.apply(i))),i})}getConfig(){const t={units:this.units,activation:lr(this.activation),useBias:this.useBias,kernelInitializer:ie(this.kernelInitializer),biasInitializer:ie(this.biasInitializer),kernelRegularizer:Gt(this.kernelRegularizer),biasRegularizer:Gt(this.biasRegularizer),activityRegularizer:Gt(this.activityRegularizer),kernelConstraint:Ce(this.kernelConstraint),biasConstraint:Ce(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}yC.className="Dense";j(yC);class bC extends Tt{constructor(t){t=t||{},super(t),this.inputSpec=[{minNDim:3}],this.dataFormat=t.dataFormat}computeOutputShape(t){t=At(t);for(const e of t.slice(1))if(e==null)throw new N(`The shape of the input to "Flatten" is not fully defined (got ${t.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[t[0],rr(t,1)]}call(t,e){return M(()=>{this.invokeCallHook(t,e);let s=bt(t);if(this.dataFormat==="channelsFirst"&&s.rank>1){const r=[0];for(let i=2;i<s.rank;++i)r.push(i);r.push(1),s=Et(s,r)}return JF(s)})}getConfig(){const t={};this.dataFormat!=null&&(t.dataFormat=this.dataFormat);const e=super.getConfig();return Object.assign(t,e),t}}bC.className="Flatten";j(bC);class wC extends Tt{constructor(t){super(t),this.supportsMasking=!0,this.activation=cr(t.activation)}call(t,e){return M(()=>{this.invokeCallHook(t,e);const s=bt(t);return this.activation.apply(s)})}getConfig(){const t={activation:lr(this.activation)},e=super.getConfig();return Object.assign(t,e),t}}wC.className="Activation";j(wC);class CC extends Tt{constructor(t){super(t),this.n=t.n,this.inputSpec=[{ndim:2}]}computeOutputShape(t){return[t[0],this.n,t[1]]}call(t,e){return M(()=>(t=bt(t),KF(t,this.n)))}getConfig(){const t={n:this.n},e=super.getConfig();return Object.assign(t,e),t}}CC.className="RepeatVector";j(CC);class _C extends Tt{constructor(t){super(t),this.targetShape=t.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(t){return t<0||t==null}fixUnknownDimension(t,e){const s="Total size of new array must be unchanged.",r=e.slice();let i=1,o=null;for(let l=0;l<r.length;++l){const c=r[l];if(this.isUnknown(c))if(o===null)o=l;else throw new N("Can only specifiy one unknown dimension.");else i*=c}const a=rr(t);if(o!==null){if(i===0||a%i!==0)throw new N(s);r[o]=a/i}else if(a!==i)throw new N(s);return r}computeOutputShape(t){let e=!1;for(let s=0;s<t.length;++s)if(this.isUnknown(t[s])){e=!0;break}return e?t.slice(0,1).concat(this.targetShape):t.slice(0,1).concat(this.fixUnknownDimension(t.slice(1),this.targetShape))}call(t,e){return M(()=>{this.invokeCallHook(t,e);const s=bt(t),r=s.shape,i=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return A(s,i)})}getConfig(){const t={targetShape:this.targetShape},e=super.getConfig();return Object.assign(t,e),t}}_C.className="Reshape";j(_C);class SC extends Tt{constructor(t){if(super(t),t.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(t.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${t.dims} instead.`);const e=ts(1,t.dims.length+1);if(!Pt(t.dims.slice().sort(),e))throw new Error("Invalid permutation `dims`: "+JSON.stringify(t.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=t.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new we({ndim:this.dims.length+1})]}computeOutputShape(t){t=At(t);const e=t.slice();return this.dims.forEach((s,r)=>{e[r+1]=t[s]}),e}call(t,e){return Et(bt(t),this.dimsIncludingBatch)}getConfig(){const t={dims:this.dims},e=super.getConfig();return Object.assign(t,e),t}}SC.className="Permute";j(SC);class IC extends Tt{constructor(t){super(t??{}),this.supportsMasking=!0,t!=null?this.maskValue=t.maskValue==null?0:t.maskValue:this.maskValue=0}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={maskValue:this.maskValue};return Object.assign(e,t),e}computeMask(t,e){const s=bt(t);return gd(mc(s,this.maskValue),-1)}call(t,e){return M(()=>{this.invokeCallHook(t,e);const s=bt(t),o=gd(mc(s,this.maskValue),-1,!0);return E(s,rt(o,s.dtype))})}}IC.className="Masking";j(IC);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class vC extends Tt{constructor(t){if(super(t),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",t.batchInputShape==null&&t.inputShape==null){let e=null;t.batchSize!=null&&(e=t.batchSize),t.inputLength==null?this.batchInputShape=[e,null]:this.batchInputShape=[e].concat(Bt(t.inputLength))}this.inputDim=t.inputDim,Te(this.inputDim,"inputDim"),this.outputDim=t.outputDim,Te(this.outputDim,"outputDim"),this.embeddingsInitializer=ne(t.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=se(t.embeddingsRegularizer),this.activityRegularizer=se(t.activityRegularizer),this.embeddingsConstraint=_e(t.embeddingsConstraint),this.maskZero=t.maskZero,this.supportsMasking=t.maskZero,this.inputLength=t.inputLength}build(t){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(t){}computeMask(t,e){return M(()=>this.maskZero?(t=bt(t),mc(t,Rt(t))):null)}computeOutputShape(t){if(t=At(t),this.inputLength==null)return[...t,this.outputDim];const e=Bt(this.inputLength);if(e.length!==t.length-1)throw new N(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);{let s=0;for(let r=0;r<e.length;++r){const i=e[r],o=t[r+1];if(i!=null&&o!=null&&i!==o)throw new N(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);i==null&&(e[s]=o),s++}}return[t[0],...e,this.outputDim]}call(t,e){return M(()=>{this.invokeCallHook(t,e);let s=bt(t);s.dtype!=="int32"&&(s=gs(s,"int32"));const r=r1(this.embeddings.read(),A(s,[s.size]));return A(r,At(this.computeOutputShape(s.shape)))})}getConfig(){const t={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:ie(this.embeddingsInitializer),embeddingsRegularizer:Gt(this.embeddingsRegularizer),activityRegularizer:Gt(this.activityRegularizer),embeddingsConstraint:Ce(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},e=super.getConfig();return Object.assign(t,e),t}}vC.className="Embedding";j(vC);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class pi extends Tt{constructor(t){super(t||{}),this.supportsMasking=!0}mergeFunction(t){throw new _t}computeElementwiseOpOutputShape(t,e){if(t==null||e==null)return null;if(t.length<e.length)return this.computeElementwiseOpOutputShape(e,t);if(e.length===0)return t;const s=t.slice(0,t.length-e.length);for(let r=0;r<e.length;++r){const i=t[t.length-e.length+r],o=e[r];if(i==null||o==null||i<0||o<0)s.push(null);else if(i===1)s.push(o);else if(o===1)s.push(i);else{if(i!==o)throw new N("Operands could not be broadcast together with shapes "+JSON.stringify(t)+" "+JSON.stringify(e));s.push(i)}}return s}build(t){if(Array.isArray(t)&&!Array.isArray(t[0])&&(t=[At(t)]),t=t,t.length<2)throw new N(`A merge layer should be called on an Array of at least 2 inputs. Got ${t.length} input(s).`);let e=[];for(const i of t)i!=null&&i[0]!==null&&e.push(i[0]);if(e=sr(e),e.length>1)throw new N(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(t)}.`);let s=t[0]==null?null:t[0].slice(1);for(let i=1;i<t.length;++i){const o=t[i]==null?null:t[i].slice(1);s=this.computeElementwiseOpOutputShape(s,o)}const r=t.map(i=>i.length);t.indexOf(null)===-1&&sr(r).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(t,e){return M(()=>{if(t=t,this.reshapeRequired){const s=[],r=t.map(i=>i.rank);if(r.indexOf(null)===-1){const i=ar(r);for(let o of t){const a=o.rank;for(let l=0;l<i-a;++l)o=pl(o,1);s.push(o)}return this.mergeFunction(s)}else{let i=!1;for(const l of t){const c=l.rank;if(c==null){const u=l.shape,h=u[0],d=u.slice(1).concat([h]);let p=A(l,[h].concat(rr(u.slice(1))));p=Et(p,[1,0]),p=A(p,d),s.push(p),i=!0}else if(c>1){const u=ts(1,c).concat([0]);s.push(Et(l,u)),i=!0}else s.push(l)}let o=this.mergeFunction(s);const a=o.rank;if(i){if(a==null){const l=o.shape,c=l.length,u=l[c-1],h=[u].concat(l.slice(0,l.length-1));o=A(Et(A(o,[-1,u]),[1,0]),h)}else if(a>1){const l=[a-1].concat(ts(0,a-1));o=Et(o,l)}}return o}}else return this.mergeFunction(t)})}computeOutputShape(t){t=t;let e;t[0]==null?e=null:e=t[0].slice(1);for(let r=1;r<t.length;++r){const i=t[r]==null?null:t[r].slice(1);e=this.computeElementwiseOpOutputShape(e,i)}let s=[];for(const r of t)r!=null&&r[0]!==null&&s.push(r[0]);return s=sr(s),s.length===1?e=s.concat(e):e=[null].concat(e),e}computeMask(t,e){return M(()=>{if(e==null)return null;if(!Array.isArray(e))throw new N("`mask` should be an Array");if(!Array.isArray(t))throw new N("`inputs` should be an Array");if(e.length!==t.length)throw new N(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${t.length} vs ${e.length})`);if(e.every(r=>r==null))return null;e=e.map(r=>r==null?r:Je(r,0));let s=e[0];for(let r=1;r<e.length-1;++r)s=Rs(s,e[r]);return s})}}class kC extends pi{constructor(t){super(t)}mergeFunction(t){return M(()=>{let e=t[0].clone();for(let s=1;s<t.length;++s)e=Y(e,t[s]);return e})}}kC.className="Add";j(kC);class $C extends pi{constructor(t){super(t)}mergeFunction(t){return M(()=>{let e=t[0].clone();for(let s=1;s<t.length;++s)e=E(e,t[s]);return e})}}$C.className="Multiply";j($C);class TC extends pi{constructor(t){super(t)}mergeFunction(t){return M(()=>{let e=t[0].clone();for(let s=1;s<t.length;++s)e=Y(e,t[s]);return E(1/t.length,e)})}}TC.className="Average";j(TC);class NC extends pi{constructor(t){super(t)}mergeFunction(t){return M(()=>{let e=t[0];for(let s=1;s<t.length;++s)e=xr(e,t[s]);return e})}}NC.className="Maximum";j(NC);class EC extends pi{constructor(t){super(t)}mergeFunction(t){return M(()=>{let e=t[0];for(let s=1;s<t.length;++s)e=Yo(e,t[s]);return e})}}EC.className="Minimum";j(EC);class RC extends pi{constructor(t){super(t),this.DEFAULT_AXIS=-1,t==null&&(t={}),this.axis=t.axis==null?this.DEFAULT_AXIS:t.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){if(!(Array.isArray(t)&&Array.isArray(t[0]))||t.length===1)throw new N("A `Concatenate` layer should be called on a list of at least 2 inputs");t=t;let e=!0;for(const r of t)if(r!=null){e=!1;break}if(e)return;const s=[];for(let r=0;r<t.length;++r){const i=t[r].slice();i.splice(this.axis,1);let o=!1;for(const a of s)if(Pt(a,i)){o=!0;break}o||s.push(i)}if(s.length>1)throw new N("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(t))}mergeFunction(t){return M(()=>eg(t,this.axis))}computeOutputShape(t){if(!(Array.isArray(t)&&Array.isArray(t[0])))throw new N("A `Concatenate` layer should be called on a list of inputs.");const e=t,s=e[0].slice(),r=this.axis<0?s.length+this.axis:this.axis;for(const i of e.slice(1)){if(s[r]==null||i[r]==null){s[r]=null;break}s[r]+=i[r]}return s}computeMask(t,e){if(e==null)return null;if(!Array.isArray(e))throw new N("`mask` should be an array for Concatenate");if(!Array.isArray(t))throw new N("`inputs` should be an array for Concatenate");if(e.length!==t.length)throw new N(`Mismatch in the length of mask (${e.length}) and the legnth of inputs (${t.length})`);return M(()=>{let s=!0;if(e.forEach(o=>{if(o!=null){s=!1;return}}),s)return null;const r=[];for(let o=0;o<t.length;++o)e[o]==null?r.push(rt(Mn(t[o]),"bool")):e[o].rank<t[o].rank?r.push(Je(e[o],-1)):r.push(e[o]);const i=Qe(r,this.axis);return N0(i,-1,!1)})}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}RC.className="Concatenate";j(RC);function ko(n,t){for(;n<0;)n+=t;return n}function CP(n,t,e){if(n.shape.length>3||t.shape.length>3)throw new _t("batchDot is not implemented for tensors of 4D or higher rank yet");if(S(n.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${n.shape.length}`),S(n.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`),typeof e=="number"&&(e=[e,e]),n.dtype==="complex64"||t.dtype==="complex64")throw new _t("batchDot is not implemented for complex64-type Tensors yet.");const s=n.shape.length,r=t.shape.length;e==null&&(e=[s-1,r-2]);const i=e;return M(()=>{let o;if(s>r){o=s-r;const l=[];for(let c=0;c<o;++c)l.push(1);t=A(t,t.shape.concat(l))}else if(r>s){o=r-s;const l=[];for(let c=0;c<o;++c)l.push(1);n=A(n,n.shape.concat(l))}else o=0;let a;if(n.shape.length===2&&t.shape.length===2)i[0]===i[1]?a=pt(E(n,t),i[0]):a=pt(E(Et(n,[1,0]),t),i[1]);else{const l=i[0]!==n.shape.length-1,c=i[1]===t.shape.length-1;a=Ft(n,t,l,c)}if(o>0){let l;s>r?l=s+r-3:l=s-1;const c=[];for(let u=l;u<l+o;++u)c.push(u);a=al(a,c)}return a.shape.length===1&&(a=Je(a,1)),a})}class DC extends pi{constructor(t){super(t),this.axes=t.axes,this.normalize=t.normalize==null?!1:t.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){S(Array.isArray(t)&&t.length===2&&Array.isArray(t[0])&&Array.isArray(t[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const e=t[0],s=t[1];if(e.length>3||s.length>3)throw new _t("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(e,s);if(e[r[0]]!==s[r[1]])throw new N(`Dimension incompatibility: ${e[r[0]]} !== ${s[r[1]]}`)}mergeFunction(t){if(t.length!==2)throw new N(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${t.length} input(s).`);let e=t[0],s=t[1],r;return Array.isArray(this.axes)?r=this.axes.map((i,o)=>ko(i,t[o].shape.length)):r=[ko(this.axes,e.shape.length),ko(this.axes,s.shape.length)],this.normalize&&(e=Sc(e,r[0]),s=Sc(s,r[1])),CP(e,s,r)}interpretAxes(t,e){let s;return Array.isArray(this.axes)?s=this.axes:s=[ko(this.axes,t.length),ko(this.axes,e.length)],s}computeOutputShape(t){S(Array.isArray(t)&&t.length===2&&Array.isArray(t[0])&&Array.isArray(t[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const e=t[0].slice(),s=t[1].slice();if(e.length>3||s.length>3)throw new _t("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(e,s);e.splice(r[0],1),s.splice(r[1],1),s.splice(0,1);const i=e.concat(s);return i.length===1&&i.push(1),i}computeMask(t,e){return null}getConfig(){const t={axes:this.axes,normalize:this.normalize},e=super.getConfig();return Object.assign(t,e),t}}DC.className="Dot";j(DC);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class AC extends Tt{constructor(t){super(t),this.supportsMasking=!0,this.stddev=t.stddev}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={stddev:this.stddev};return Object.assign(e,t),e}call(t,e){return M(()=>{this.invokeCallHook(t,e);const s=bt(t);return gl(()=>Y(nh(s.shape,0,this.stddev),s),()=>s,e.training||!1)})}}AC.className="GaussianNoise";j(AC);class FC extends Tt{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return M(()=>{this.invokeCallHook(t,e);const s=bt(t);return this.rate>0&&this.rate<1?gl(()=>{const i=Math.sqrt(this.rate/(1-this.rate));return E(s,nh(s.shape,1,i))},()=>s,e.training||!1):s})}}FC.className="GaussianDropout";j(FC);class MC extends Tt{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate,this.noiseShape=t.noiseShape}_getNoiseShape(t){return this.noiseShape||bt(t).shape}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return M(()=>{if(this.rate<1&&this.rate>0){const s=this._getNoiseShape(t);return gl(()=>{const i=bt(t),l=-1.6732632423543772*1.0507009873554805;let c=li(ol(s),this.rate);c=gs(c,"float32");const u=((1-this.rate)*(1+this.rate*l**2))**-.5,h=-u*l*this.rate,d=Y(E(i,c),E(Y(c,-1),l));return Y(E(d,u),h)},()=>bt(t),e.training||!1)}return t})}}MC.className="AlphaDropout";j(MC);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function ea(n,t,e,s,r,i=.001){let o;if(n.rank===2)o=XT(n,t,e,s,r,i);else if(n.rank===3)o=qT(n,t,e,s,r,i);else if(n.rank===4)o=YT(n,t,e,s,r,i);else throw new _t(`batchNormalization is not implemented for array of rank ${n.rank} yet`);return o}function _P(n,t,e,s,r=.001){return M(()=>{const i=ef(n,s),o=i.mean,a=i.variance;return[ea(n,o,a,e,t,r),o,a]})}function SP(n,t,e,s,r=.001){return M(()=>{const i=ef(n,s),o=i.mean,a=i.variance,l=[];for(const f of ts(0,n.rank))s.indexOf(f)!==-1?l.push(1):l.push(n.shape[f]);const c=A(o,l),u=A(a,l),h=t==null?null:A(t,l),d=e==null?null:A(e,l);return[ea(n,c,u,d,h,r),o,a]})}function IP(n,t,e,s,r=.001){return Pt(s.slice().sort(),ts(0,n.rank-1))?_P(n,t,e,s,r):SP(n,t,e,s,r)}class PC extends Tt{constructor(t){t==null&&(t={}),super(t),this.supportsMasking=!0,this.axis=t.axis==null?-1:t.axis,this.momentum=t.momentum==null?.99:t.momentum,this.epsilon=t.epsilon==null?.001:t.epsilon,this.center=t.center==null?!0:t.center,this.scale=t.scale==null?!0:t.scale,this.betaInitializer=ne(t.betaInitializer||"zeros"),this.gammaInitializer=ne(t.gammaInitializer||"ones"),this.movingMeanInitializer=ne(t.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=ne(t.movingVarianceInitializer||"ones"),this.betaConstraint=_e(t.betaConstraint),this.gammaConstraint=_e(t.gammaConstraint),this.betaRegularizer=se(t.betaRegularizer),this.gammaRegularizer=se(t.gammaRegularizer)}build(t){t=At(t);const e=this.axis>=0?this.axis:this.axis+t.length,s=t[e];if(s==null)throw new N(`Axis ${e} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(t)}.`);this.inputSpec=[new we({ndim:t.length,axes:{[e]:s}})];const r=[s];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(t,e){return M(()=>{const s=e.training==null?!1:e.training,r=bt(t),i=r.shape,o=i.length,a=ts(0,o),l=this.axis>=0?this.axis:this.axis+o;a.splice(l,1);const c=ei(1,o);c[l]=i[l];const u=a.slice();u.sort();const h=!Pt(u,ts(0,o).slice(0,o-1)),d=()=>{if(h){const y=A(this.movingMean.read(),c),w=A(this.movingVariance.read(),c),b=this.center?A(this.beta.read(),c):null,C=this.scale?A(this.gamma.read(),c):null;return ea(r,y,w,b,C,this.epsilon)}else return ea(r,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!s)return d();const[p,f,m]=IP(r,this.gamma.read(),this.beta.read(),a,this.epsilon),g=(y,w,b)=>{M(()=>{const C=1-b,_=y.read(),I=E(yt(_,w),C);y.write(yt(_,I))})};return(()=>{g(this.movingMean,f,this.momentum),g(this.movingVariance,m,this.momentum)})(),p})}getConfig(){const t={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:ie(this.betaInitializer),gammaInitializer:ie(this.gammaInitializer),movingMeanInitializer:ie(this.movingMeanInitializer),movingVarianceInitializer:ie(this.movingVarianceInitializer),betaRegularizer:Gt(this.betaRegularizer),gammaRegularizer:Gt(this.gammaRegularizer),betaConstraint:Ce(this.betaConstraint),gammaConstraint:Ce(this.gammaConstraint)},e=super.getConfig();return Object.assign(t,e),t}}PC.className="BatchNormalization";j(PC);class OC extends Tt{constructor(t){if(t==null&&(t={}),super(t),this.axis=t.axis==null?-1:t.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=t.epsilon==null?.001:t.epsilon,this.center=t.center==null?!0:t.center,this.scale=t.scale==null?!0:t.scale,this.betaInitializer=ne(t.betaInitializer||"zeros"),this.gammaInitializer=ne(t.gammaInitializer||"ones"),this.betaRegularizer=se(t.betaRegularizer),this.gammaRegularizer=se(t.gammaRegularizer),this.supportsMasking=!0}build(t){t=At(t);const e=t.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let i=0;i<this.axis.length;++i)this.axis[i]<0&&(this.axis[i]+=e);for(const i of this.axis)if(i<0||i>=e)throw new Error(`Invalid axis: ${i}`);if(this.axis.length!==sr(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const s=this.axis.map(i=>t[i]),r=!0;this.scale?this.gamma=this.addWeight("gamma",s,"float32",this.gammaInitializer,this.gammaRegularizer,r):this.gamma=null,this.center?this.beta=this.addWeight("beta",s,"float32",this.betaInitializer,this.betaRegularizer,r):this.beta=null,this.built=!0}call(t,e){const s=bt(t),r=s.shape,i=r.length;return M(()=>{let{mean:a,variance:l}=ef(s,this.axis,!0);const c=ei(1,i);for(const m of this.axis)c[m]=r[m];const u=m=>m!=null&&m.shape.length!==i?A(m,c):m;let h=this.scale?u(this.gamma.read()):null,d=this.center?u(this.beta.read()):null;const p=[],f=[];for(let m=0;m<i;++m)this.axis.indexOf(m)!==-1?(p.push(r[m]),f.push(1)):(p.push(1),f.push(r[m]));return a=Yn(a,p),l=Yn(l,p),h!=null&&(h=Yn(h,f)),d!=null&&(d=Yn(d,f)),ea(s,a,l,d,h,this.epsilon)})}getConfig(){const t={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:ie(this.betaInitializer),gammaInitializer:ie(this.gammaInitializer),betaRegularizer:Gt(this.betaRegularizer),gammaRegularizer:Gt(this.gammaRegularizer)},e=super.getConfig();return Object.assign(t,e),t}}OC.className="LayerNormalization";j(OC);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function vP(n,t,e){return M(()=>{if(n.rank!==4)throw new N(`temporalPadding expects input tensor to be 4-D, but received a ${n.rank}-D tensor.`);if(t==null&&(t=[[1,1],[1,1]]),t.length!==2||t[0].length!==2||t[1].length!==2)throw new N("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(e==null&&(e=es()),e!=="channelsLast"&&e!=="channelsFirst")throw new N(`Unknown data format: ${e}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let s;return e==="channelsFirst"?s=[[0,0],[0,0],t[0],t[1]]:s=[[0,0],t[0],t[1],[0,0]],nf(n,s)})}class BC extends Tt{constructor(t){if(t==null&&(t={}),super(t),this.dataFormat=t.dataFormat==null?es():t.dataFormat,t.padding==null)this.padding=[[1,1],[1,1]];else if(typeof t.padding=="number")this.padding=[[t.padding,t.padding],[t.padding,t.padding]];else{if(t.padding=t.padding,t.padding.length!==2)throw new N(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${t.padding.length} array.`);let e,s;if(typeof t.padding[0]=="number")e=[t.padding[0],t.padding[0]],s=[t.padding[1],t.padding[1]];else{if(t.padding=t.padding,t.padding[0].length!==2)throw new N(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${t.padding[0].length} array.`);if(e=t.padding[0],t.padding[1].length!==2)throw new N(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${t.padding[1].length} array.`);s=t.padding[1]}this.padding=[e,s]}this.inputSpec=[new we({ndim:4})]}computeOutputShape(t){t=At(t);let e,s;return this.dataFormat==="channelsFirst"?(t[2]!=null&&t[2]>=0?e=t[2]+this.padding[0][0]+this.padding[0][1]:e=null,t[3]!=null&&t[3]>=0?s=t[3]+this.padding[1][0]+this.padding[1][1]:s=null,[t[0],t[1],e,s]):(t[1]!=null&&t[1]>=0?e=t[1]+this.padding[0][0]+this.padding[0][1]:e=null,t[2]!=null&&t[2]>=0?s=t[2]+this.padding[1][0]+this.padding[1][1]:s=null,[t[0],e,s,t[3]])}call(t,e){return M(()=>vP(bt(t),this.padding,this.dataFormat))}getConfig(){const t={padding:this.padding,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}BC.className="ZeroPadding2D";j(BC);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function uh(n,t,e,s,r,i){return M(()=>{de(r),t1(i),_n(s),e==null&&(e=[1,1]),s==null&&(s="valid"),r==null&&(r=es()),i==null&&(i="max"),n=fg(n,r);let o;const a=s==="same"?"same":"valid";return i==="max"?o=tf(n,t,e,a):o=Gp(n,t,e,a),r==="channelsFirst"&&(o=Et(o,[0,3,1,2])),o})}function LC(n,t,e,s,r,i){return M(()=>{de(r),t1(i),_n(s),e==null&&(e=[1,1,1]),s==null&&(s="valid"),r==null&&(r=es()),i==null&&(i="max"),n=nC(n,r);let o;const a=s==="same"?"same":"valid";return i==="max"?o=FE(n,t,e,a):o=PT(n,t,e,a),r==="channelsFirst"&&(o=Et(o,[0,4,1,2,3])),o})}class VC extends Tt{constructor(t){if(t.poolSize==null&&(t.poolSize=2),super(t),typeof t.poolSize=="number")this.poolSize=[t.poolSize];else if(Array.isArray(t.poolSize)&&t.poolSize.length===1&&typeof t.poolSize[0]=="number")this.poolSize=t.poolSize;else throw new N(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.poolSize)}`);if(Te(this.poolSize,"poolSize"),t.strides==null)this.strides=this.poolSize;else if(typeof t.strides=="number")this.strides=[t.strides];else if(Array.isArray(t.strides)&&t.strides.length===1&&typeof t.strides[0]=="number")this.strides=t.strides;else throw new N(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.strides)}`);Te(this.strides,"strides"),this.padding=t.padding==null?"valid":t.padding,_n(this.padding),this.inputSpec=[new we({ndim:3})]}computeOutputShape(t){t=At(t);const e=Qn(t[1],this.poolSize[0],this.padding,this.strides[0]);return[t[0],e,t[2]]}call(t,e){return M(()=>{this.invokeCallHook(t,e),t=pl(bt(t),2);const s=this.poolingFunction(bt(t),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return al(s,[2])})}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides},e=super.getConfig();return Object.assign(t,e),t}}class zC extends VC{constructor(t){super(t)}poolingFunction(t,e,s,r,i){return de(i),_n(r),uh(t,e,s,r,i,"max")}}zC.className="MaxPooling1D";j(zC);class UC extends VC{constructor(t){super(t)}poolingFunction(t,e,s,r,i){return de(i),_n(r),uh(t,e,s,r,i,"avg")}}UC.className="AveragePooling1D";j(UC);class WC extends Tt{constructor(t){if(t.poolSize==null&&(t.poolSize=[2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize],t.strides==null)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(t.strides.length!==2)throw new N(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides];Te(this.poolSize,"poolSize"),Te(this.strides,"strides"),this.padding=t.padding==null?"valid":t.padding,this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,de(this.dataFormat),_n(this.padding),this.inputSpec=[new we({ndim:4})]}computeOutputShape(t){t=At(t);let e=this.dataFormat==="channelsFirst"?t[2]:t[1],s=this.dataFormat==="channelsFirst"?t[3]:t[2];return e=Qn(e,this.poolSize[0],this.padding,this.strides[0]),s=Qn(s,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[t[0],t[1],e,s]:[t[0],e,s,t[3]]}call(t,e){return M(()=>(this.invokeCallHook(t,e),this.poolingFunction(bt(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class GC extends WC{constructor(t){super(t)}poolingFunction(t,e,s,r,i){return de(i),_n(r),uh(t,e,s,r,i,"max")}}GC.className="MaxPooling2D";j(GC);class HC extends WC{constructor(t){super(t)}poolingFunction(t,e,s,r,i){return de(i),_n(r),uh(t,e,s,r,i,"avg")}}HC.className="AveragePooling2D";j(HC);class XC extends Tt{constructor(t){if(t.poolSize==null&&(t.poolSize=[2,2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize,t.poolSize],t.strides==null)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(t.strides.length!==3)throw new N(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides,t.strides];Te(this.poolSize,"poolSize"),Te(this.strides,"strides"),this.padding=t.padding==null?"valid":t.padding,this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,de(this.dataFormat),_n(this.padding),this.inputSpec=[new we({ndim:5})]}computeOutputShape(t){t=At(t);let e=this.dataFormat==="channelsFirst"?t[2]:t[1],s=this.dataFormat==="channelsFirst"?t[3]:t[2],r=this.dataFormat==="channelsFirst"?t[4]:t[3];return e=Qn(e,this.poolSize[0],this.padding,this.strides[0]),s=Qn(s,this.poolSize[1],this.padding,this.strides[1]),r=Qn(r,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[t[0],t[1],e,s,r]:[t[0],e,s,r,t[4]]}call(t,e){return M(()=>(this.invokeCallHook(t,e),this.poolingFunction(bt(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class jC extends XC{constructor(t){super(t)}poolingFunction(t,e,s,r,i){return de(i),_n(r),LC(t,e,s,r,i,"max")}}jC.className="MaxPooling3D";j(jC);class qC extends XC{constructor(t){super(t)}poolingFunction(t,e,s,r,i){return de(i),_n(r),LC(t,e,s,r,i,"avg")}}qC.className="AveragePooling3D";j(qC);class KC extends Tt{constructor(t){super(t),this.inputSpec=[new we({ndim:3})]}computeOutputShape(t){return[t[0],t[2]]}call(t,e){throw new _t}}class YC extends KC{constructor(t){super(t||{})}call(t,e){return M(()=>{const s=bt(t);return me(s,1)})}}YC.className="GlobalAveragePooling1D";j(YC);class JC extends KC{constructor(t){super(t||{})}call(t,e){return M(()=>{const s=bt(t);return Zn(s,1)})}}JC.className="GlobalMaxPooling1D";j(JC);class ZC extends Tt{constructor(t){super(t),this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,de(this.dataFormat),this.inputSpec=[new we({ndim:4})]}computeOutputShape(t){return t=t,this.dataFormat==="channelsLast"?[t[0],t[3]]:[t[0],t[1]]}call(t,e){throw new _t}getConfig(){const t={dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class QC extends ZC{call(t,e){return M(()=>{const s=bt(t);return this.dataFormat==="channelsLast"?me(s,[1,2]):me(s,[2,3])})}}QC.className="GlobalAveragePooling2D";j(QC);class t_ extends ZC{call(t,e){return M(()=>{const s=bt(t);return this.dataFormat==="channelsLast"?Zn(s,[1,2]):Zn(s,[2,3])})}}t_.className="GlobalMaxPooling2D";j(t_);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class e_ extends Tt{constructor(t){super(t),this.layer=t.layer}build(t){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(t){this.layer!=null&&(this.layer.trainable=t)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(t){this.layer.setWeights(t)}getConfig(){const t={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},e=super.getConfig();return Object.assign(t,e),t}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(t)}static fromConfig(t,e,s={}){const r=e.layer,i=xs(r,s);delete e.layer;const o={layer:i};return Object.assign(o,e),new t(o)}}class n_ extends e_{constructor(t){super(t),this.supportsMasking=!0}build(t){if(t=At(t),t.length<3)throw new N(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(t)}`);this.inputSpec=[{shape:t}];const e=[t[0]].concat(t.slice(2));this.layer.built||(this.layer.build(e),this.layer.built=!0),super.build(t)}computeOutputShape(t){t=At(t);const e=[t[0]].concat(t.slice(2)),s=this.layer.computeOutputShape(e),r=t[1];return[s[0],r].concat(s.slice(1))}call(t,e){return M(()=>(t=bt(t),hC((o,a)=>[bt(this.layer.call(o,e)),[]],t,[],!1,null,null,!1,!0)[1]))}}n_.className="TimeDistributed";j(n_);function kP(n){di(GF,"BidirectionalMergeMode",n)}const $P="concat";class s_ extends e_{constructor(t){super(t);const e=t.layer.getConfig(),s={};s.className=t.layer.getClassName(),s.config=e,this.forwardLayer=xs(s),e.goBackwards=e.goBackwards!==!0;const r={};if(r.className=t.layer.getClassName(),r.config=e,this.backwardLayer=xs(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=t.mergeMode===void 0?$P:t.mergeMode,kP(this.mergeMode),t.weights)throw new _t("weights support is not implemented for Bidirectional layer yet.");this._stateful=t.layer.stateful,this.returnSequences=t.layer.returnSequences,this.returnState=t.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=t.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(t){this._trainable=t,this.forwardLayer!=null&&(this.forwardLayer.trainable=t),this.backwardLayer!=null&&(this.backwardLayer.trainable=t)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(t){const e=t.length,s=Math.floor(e/2);this.forwardLayer.setWeights(t.slice(0,s)),this.backwardLayer.setWeights(t.slice(s))}computeOutputShape(t){let e=this.forwardLayer.computeOutputShape(t);Array.isArray(e)&&Array.isArray(e[0])||(e=[e]),e=e;let s,r,i;return this.returnState&&(i=e.slice(1)),s=e[0],s=s,this.mergeMode==="concat"?(s[s.length-1]*=2,r=[s]):this.mergeMode==null?r=[s,s.slice()]:r=[s],this.returnState?this.mergeMode==null?r.concat(i).concat(i.slice()):[s].concat(i).concat(i.slice()):Ze(r)}apply(t,e){let s=e==null?null:e.initialState,r=e==null?null:e.constants;e==null&&(e={});const i=uC(t,s,r,this.numConstants);if(t=i.inputs,s=i.initialState,r=i.constants,Array.isArray(t)&&(s=t.slice(1),t=t[0]),(s==null||s.length===0)&&r==null)return super.apply(t,e);const o=[],a=[];if(s!=null){const c=s.length;if(c%2>0)throw new N("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");e.initialState=s,o.push(...s);const u=s.map(h=>new we({shape:h.shape}));this.forwardLayer.stateSpec=u.slice(0,c/2),this.backwardLayer.stateSpec=u.slice(c/2),a.push(...u)}if(r!=null)throw new _t("Support for constants in Bidirectional layers is not implemented yet.");const l=o[0]instanceof Cs;for(const c of o)if(c instanceof Cs!==l)throw new N("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(l){const c=[t].concat(o),u=this.inputSpec.concat(a),h=this.inputSpec;this.inputSpec=u;const d=super.apply(c,e);return this.inputSpec=h,d}else return super.apply(t,e)}call(t,e){return M(()=>{const s=e.initialState;let r,i;if(s==null)r=this.forwardLayer.call(t,e),i=this.backwardLayer.call(t,e);else{const l=s.slice(0,s.length/2),c=s.slice(s.length/2);r=this.forwardLayer.call(t,Object.assign(e,{initialState:l})),i=this.backwardLayer.call(t,Object.assign(e,{initialState:c}))}let o;this.returnState&&(Array.isArray(r)&&(o=r.slice(1).concat(i.slice(1))),r=r[0],i=i[0]),this.returnSequences&&(i=Qr(i,1));let a;return this.mergeMode==="concat"?a=eg([r,i]):this.mergeMode==="sum"?a=Y(r,i):this.mergeMode==="ave"?a=E(.5,Y(r,i)):this.mergeMode==="mul"?a=E(r,i):this.mergeMode==null&&(a=[r,i]),this.returnState?this.mergeMode==null?a.concat(o):[a].concat(o):a})}resetStates(t){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(t){Ur(this.forwardLayer.name,()=>{this.forwardLayer.build(t)}),Ur(this.backwardLayer.name,()=>{this.backwardLayer.build(t)}),this.built=!0}computeMask(t,e){Array.isArray(e)&&(e=e[0]);let s;if(this.returnSequences?this.mergeMode==null?s=[e,e]:s=e:this.mergeMode==null?s=[null,null]:s=null,this.returnState){const i=this.forwardLayer.states.map(o=>null);return Array.isArray(s)?s.concat(i).concat(i):[s].concat(i).concat(i)}else return s}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(t),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(t)}getConfig(){const t={mergeMode:this.mergeMode},e=super.getConfig();return Object.assign(t,e),t}static fromConfig(t,e){const s=xs(e.layer);if(delete e.layer,e.numConstants!=null)throw new _t("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=e;return r.layer=s,new t(r)}}s_.className="Bidirectional";j(s_);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class r_ extends Tt{constructor(t){super(t),this.scale=t.scale,t.offset?this.offset=t.offset:this.offset=0}getConfig(){const t={scale:this.scale,offset:this.offset},e=super.getConfig();return Object.assign(t,e),t}call(t,e){return M(()=>(t=bt(t),t.dtype!=="float32"&&(t=gs(t,"float32")),Y(E(t,this.scale),this.offset)))}}r_.className="Rescaling";j(r_);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const{resizeBilinear:TP,cropAndResize:NP}=Es;class i_ extends Tt{constructor(t){super(t),this.height=t.height,this.width=t.width}centerCrop(t,e,s,r,i,o,a,l){return M(()=>{let c,u=!1;const h=e/o,d=s/a,p=(r+e)/o,f=(i+s)/a,m=[h,d,p,f],g=[];t.rank===3?(u=!0,c=Ds([t])):c=t;for(let C=0;C<c.shape[0];C++)g.push(m);const x=Fo(g,[g.length,4]),y=Jo(0,g.length,1,"int32"),b=NP(c,x,y,[r,i],"nearest");return gs(u?bt(ti(b)):b,l)})}upsize(t,e,s,r){return M(()=>{const i=TP(t,[e,s]);return gs(i,r)})}call(t,e){return M(()=>{const s=bt(t),r=s.dtype,i=s.shape,o=i[i.length-3],a=i[i.length-2];let l=0;o!==this.height&&(l=Math.floor((o-this.height)/2));let c=0;return a!==this.width&&(c=Math.floor((a-this.width)/2),c===0&&(c=1)),l>=0&&c>=0?this.centerCrop(s,l,c,this.height,this.width,o,a,r):this.upsize(t,this.height,this.width,r)})}getConfig(){const t={height:this.height,width:this.width},e=super.getConfig();return Object.assign(t,e),t}computeOutputShape(t){t=At(t);const e=t.length-3,s=t.length-2;return t[e]=this.height,t[s]=this.width,t}}i_.className="CenterCrop";j(i_);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function EP(n,t,e,s){let r=bt(n);if(r.dtype!=="int32"&&(r=gs(r,"int32")),t==="int")return r;const i=r.shape;if(r.rank===0&&(r=Je(r,-1)),t==="oneHot"&&r.shape[r.shape.length-1]!==1&&(r=Je(r,-1)),r.rank>2)throw new N(`When outputMode is not int, maximum output rank is 2 Received outputMode ${t} and input shape ${i} which would result in output rank ${r.rank}.`);const o=["multiHot","oneHot"].includes(t),a=r;let l;if(typeof s<"u"&&t==="count"?l=Ix(a,s,e,o):l=Ix(a,[],e,o),t!=="tfIdf")return l;if(s)return E(l,s);throw new N("When outputMode is 'tfIdf', weights must be provided.")}/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class o_ extends Tt{constructor(t){super(t),this.numTokens=t.numTokens,t.outputMode?this.outputMode=t.outputMode:this.outputMode="multiHot"}getConfig(){const t={numTokens:this.numTokens,outputMode:this.outputMode},e=super.getConfig();return Object.assign(t,e),t}computeOutputShape(t){return t=At(t),t==null?[this.numTokens]:this.outputMode==="oneHot"&&t[t.length-1]!==1?(t.push(this.numTokens),t):(t[t.length-1]=this.numTokens,t)}call(t,e){return M(()=>{t=bt(t),t.dtype!=="int32"&&(t=gs(t,"int32"));let s;if(typeof e.countWeights<"u"){if(this.outputMode!=="count")throw new N(`countWeights is not used when outputMode !== count.
              Received countWeights=${e.countWeights}`);s=bt(e.countWeights)}const r=Zn(t),i=fc(t),o=Cn(this.numTokens,r).bufferSync().get(0),a=li(i,0).bufferSync().get(0);if(!(o&&a))throw new N(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return EP(t,this.outputMode,this.numTokens,s)})}}o_.className="CategoryEncoding";j(o_);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const RP=["bilinear","nearest"],iy=new Set(RP);class a_ extends Tt{constructor(t){if(super(t),this.height=t.height,this.width=t.width,t.interpolation)if(iy.has(t.interpolation))this.interpolation=t.interpolation;else throw new N(`Invalid interpolation parameter: ${t.interpolation} is not implemented`);else this.interpolation="bilinear";this.cropToAspectRatio=!!t.cropToAspectRatio}computeOutputShape(t){t=At(t);const e=t[2];return[this.height,this.width,e]}getConfig(){const t={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},e=super.getConfig();return Object.assign(t,e),t}call(t,e){return M(()=>{const s=[this.height,this.width];if(this.interpolation==="bilinear")return Es.resizeBilinear(t,s,!this.cropToAspectRatio);if(this.interpolation==="nearest")return Es.resizeNearestNeighbor(t,s,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...iy]} are supported`)})}}a_.className="Resizing";j(a_);/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class l_{constructor(t){this.seed=t}next(){if(this.seed!==void 0)return this.seed++}}l_.className="RandomSeed";/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class c_ extends Tt{constructor(t){super(t),this.randomGenerator=new l_(t.seed)}getConfig(){const t={seed:this.randomGenerator.seed},e=super.getConfig();return Object.assign(t,e),t}}c_.className="BaseRandomLayer";/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const DP=["bilinear","nearest"],oy=new Set(DP);class u_ extends c_{constructor(t){super(t);const{factor:e,interpolation:s="bilinear"}=t;if(this.factor=e,Array.isArray(this.factor)&&this.factor.length===2)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else if(!Array.isArray(this.factor)&&this.factor>0)this.widthLower=-this.factor,this.widthUpper=this.factor;else throw new N(`Invalid factor: ${this.factor}. Must be positive number or tuple of 2 numbers`);if(this.widthLower<-1||this.widthUpper<-1)throw new N(`factor must have values larger than -1. Got: ${this.factor}`);if(this.widthUpper<this.widthLower)throw new N(`factor cannot have upper bound less than lower bound.
        Got upper bound: ${this.widthUpper}.
        Got lower bound: ${this.widthLower}
      `);if(s)if(oy.has(s))this.interpolation=s;else throw new N(`Invalid interpolation parameter: ${s} is not implemented`)}getConfig(){const t={factor:this.factor,interpolation:this.interpolation},e=super.getConfig();return Object.assign(t,e),t}computeOutputShape(t){t=At(t);const e=t[2];return[this.imgHeight,-1,e]}call(t,e){return M(()=>{const s=bt(t);this.imgHeight=s.shape[s.shape.length-3];const r=s.shape[s.shape.length-2];this.widthFactor=ol([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let i=this.widthFactor.dataSync()[0]*r;i=Math.round(i);const o=[this.imgHeight,i];switch(this.interpolation){case"bilinear":return Es.resizeBilinear(t,o);case"nearest":return Es.resizeNearestNeighbor(t,o);default:throw new Error(`Interpolation is ${this.interpolation}
          but only ${[...oy]} are supported`)}})}}u_.className="RandomWidth";j(u_);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AP=O();AP.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,n=>{n&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var ay;(function(n){n[n.DT_INVALID=0]="DT_INVALID",n[n.DT_FLOAT=1]="DT_FLOAT",n[n.DT_DOUBLE=2]="DT_DOUBLE",n[n.DT_INT32=3]="DT_INT32",n[n.DT_UINT8=4]="DT_UINT8",n[n.DT_INT16=5]="DT_INT16",n[n.DT_INT8=6]="DT_INT8",n[n.DT_STRING=7]="DT_STRING",n[n.DT_COMPLEX64=8]="DT_COMPLEX64",n[n.DT_INT64=9]="DT_INT64",n[n.DT_BOOL=10]="DT_BOOL",n[n.DT_QINT8=11]="DT_QINT8",n[n.DT_QUINT8=12]="DT_QUINT8",n[n.DT_QINT32=13]="DT_QINT32",n[n.DT_BFLOAT16=14]="DT_BFLOAT16",n[n.DT_QINT16=15]="DT_QINT16",n[n.DT_QUINT16=16]="DT_QUINT16",n[n.DT_UINT16=17]="DT_UINT16",n[n.DT_COMPLEX128=18]="DT_COMPLEX128",n[n.DT_HALF=19]="DT_HALF",n[n.DT_RESOURCE=20]="DT_RESOURCE",n[n.DT_VARIANT=21]="DT_VARIANT",n[n.DT_UINT32=22]="DT_UINT32",n[n.DT_UINT64=23]="DT_UINT64",n[n.DT_FLOAT_REF=101]="DT_FLOAT_REF",n[n.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",n[n.DT_INT32_REF=103]="DT_INT32_REF",n[n.DT_UINT8_REF=104]="DT_UINT8_REF",n[n.DT_INT16_REF=105]="DT_INT16_REF",n[n.DT_INT8_REF=106]="DT_INT8_REF",n[n.DT_STRING_REF=107]="DT_STRING_REF",n[n.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",n[n.DT_INT64_REF=109]="DT_INT64_REF",n[n.DT_BOOL_REF=110]="DT_BOOL_REF",n[n.DT_QINT8_REF=111]="DT_QINT8_REF",n[n.DT_QUINT8_REF=112]="DT_QUINT8_REF",n[n.DT_QINT32_REF=113]="DT_QINT32_REF",n[n.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",n[n.DT_QINT16_REF=115]="DT_QINT16_REF",n[n.DT_QUINT16_REF=116]="DT_QUINT16_REF",n[n.DT_UINT16_REF=117]="DT_UINT16_REF",n[n.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",n[n.DT_HALF_REF=119]="DT_HALF_REF",n[n.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",n[n.DT_VARIANT_REF=121]="DT_VARIANT_REF",n[n.DT_UINT32_REF=122]="DT_UINT32_REF",n[n.DT_UINT64_REF=123]="DT_UINT64_REF"})(ay||(ay={}));var ly;(function(n){(function(t){t[t.LEGACY=0]="LEGACY",t[t.V1=1]="V1",t[t.V2=2]="V2"})(n.CheckpointFormatVersion||(n.CheckpointFormatVersion={}))})(ly||(ly={}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var cy;(function(n){n[n.FAIL=0]="FAIL",n[n.SHORTEST=1]="SHORTEST",n[n.LONGEST=2]="LONGEST"})(cy||(cy={}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function at(n,t){Array.isArray(n)||(n=[n]),n.forEach(e=>{e!=null&&S(e.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the CPU backend.`)})}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FP=rw;class hh extends Xd{nextDataId(){return hh.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new vb(this,os())}write(t,e,s){this.firstUse&&(this.firstUse=!1,O().get("IS_NODE")&&mn(`
============================
Hi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. 
============================`));const r={id:this.nextDataId()};return this.data.set(r,{values:t,dtype:s,refCount:1}),r}makeTensorInfo(t,e,s){let r;if(e==="string"&&s!=null&&s.length>0&&la(s[0])){const i=s.map(o=>nr(o));r=this.write(i,t,e)}else r=this.write(s,t,e);return{dataId:r,shape:t,dtype:e}}refCount(t){return this.data.has(t)?this.data.get(t).refCount:0}incRef(t){const e=this.data.get(t);e.refCount++}decRef(t){if(this.data.has(t)){const e=this.data.get(t);e.refCount--}}move(t,e,s,r,i){this.data.set(t,{values:e,dtype:r,refCount:i})}numDataIds(){return this.data.numDataIds()}async read(t){return this.readSync(t)}readSync(t){const{dtype:e,complexTensorInfos:s}=this.data.get(t);if(e==="complex64"){const r=this.readSync(s.real.dataId),i=this.readSync(s.imag.dataId);return As(r,i)}return Pk(this.data.get(t).values,e)}bufferSync(t){const e=this.readSync(t.dataId);if(t.dtype==="string")try{const s=e.map(r=>or(r));return kt(t.shape,t.dtype,s)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return kt(t.shape,t.dtype,e)}makeOutput(t,e,s){return os().makeTensorFromTensorInfo(this.makeTensorInfo(e,s,t),this)}disposeData(t,e=!1){if(this.data.has(t)){if(this.data.get(t).refCount--,!e&&this.data.get(t).refCount>0)return!1;const{complexTensorInfos:s}=this.data.get(t);s!=null&&(this.disposeData(s.real.dataId,!0),this.disposeData(s.imag.dataId,!0)),this.data.delete(t)}return!0}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}async time(t){const e=Ye();return t(),{kernelMs:Ye()-e}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(t){at([t],"where");const e=this.readSync(t.dataId);return FP(t.shape,e)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}hh.nextDataId=0;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h_(n){const t=new Float32Array(n.length);for(let e=0;e<n.length;++e)t[e]=Math.abs(n[e]);return t}const MP=n=>{const{x:t}=n.inputs,e=n.backend;at(t,"abs");let s=new Float32Array(W(t.shape));const r=e.data.get(t.dataId).values;return s=h_(r),e.makeOutput(s,t.shape,t.dtype)},PP={kernelName:Uc,backendName:"cpu",kernelFunc:MP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pe(n){return(t,e,s,r,i)=>{const o=Ct(t,e),a=o.length,l=ht(o),c=W(o),u=Oe(i,c),h=t.length,d=e.length,p=ht(t),f=ht(e),m=qi(t,o),g=qi(e,o);if(m.length+g.length===0)for(let x=0;x<u.length;++x)u[x]=n(s[x%s.length],r[x%r.length]);else for(let x=0;x<u.length;++x){const y=so(x,a,l),w=y.slice(-h);m.forEach(I=>w[I]=0);const b=ds(w,h,p),C=y.slice(-d);g.forEach(I=>C[I]=0);const _=ds(C,d,f);u[x]=n(s[b],r[_])}return[u,o]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function on(n){const{inputs:t,backend:e}=n,{real:s,imag:r}=t,i=e.data.get(s.dataId).values,o=e.data.get(r.dataId).values,a=e.makeTensorInfo(s.shape,"complex64"),l=e.data.get(a.dataId);return l.complexTensorInfos={real:e.makeTensorInfo(s.shape,"float32",i),imag:e.makeTensorInfo(r.shape,"float32",o)},a}const OP={kernelName:ip,backendName:"cpu",kernelFunc:on};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nc(n,t,e="float32"){if(e==="complex64"){const r=Nc(n,t,"float32"),i=Nc(n,t,"float32");return on({inputs:{real:r,imag:i},backend:n})}const s=Be(W(t),e);return n.makeTensorInfo(t,e,s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _s(n){const{inputs:t,backend:e}=n,{x:s}=t;return e.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const BP={kernelName:Na,backendName:"cpu",kernelFunc:_s};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ni(n){const{inputs:t,backend:e}=n,{input:s}=t,r=e.data.get(s.dataId).complexTensorInfos.real,i=e.data.get(r.dataId).values;return e.makeTensorInfo(r.shape,r.dtype,i)}const LP={kernelName:Np,backendName:"cpu",kernelFunc:ni};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d_(n,t,e,s){if(s==="int32"){const r=Int32Array.from(n);return[t,"int32",r]}if(s==="bool"){const r=ai([0],e),[i,o]=pe((a,l)=>a!==l?1:0)(t,[],n,r,"bool");return[o,"bool",i]}throw new Error(`Error in Cast: failed to cast ${e} to ${s}`)}function hr(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{dtype:i}=s;if(i==="complex64"){if(r.dtype==="complex64")return _s({inputs:{x:r},backend:e});const u=Nc(e,r.shape,r.dtype),h=hr({inputs:{x:r},backend:e,attrs:{dtype:"float32"}}),d=on({inputs:{real:h,imag:u},backend:e});return e.disposeIntermediateTensorInfo(u),e.disposeIntermediateTensorInfo(h),d}if(r.dtype==="complex64"){const u=ni({inputs:{input:r},backend:e}),h=hr({inputs:{x:u},backend:e,attrs:{dtype:i}});return e.disposeIntermediateTensorInfo(u),h}if(!Tb(r.dtype,i)){const u=_s({inputs:{x:r},backend:e});return{dataId:u.dataId,shape:u.shape,dtype:i}}const o=e.data.get(r.dataId).values,[a,l,c]=d_(o,r.shape,r.dtype,i);return e.makeTensorInfo(a,l,c)}const VP={kernelName:ma,backendName:"cpu",kernelFunc:hr};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ie(n,t,e,s){return e==null?({inputs:r,backend:i})=>{const{a:o,b:a}=r,l=i;at([o,a],n);const c=l.data.get(o.dataId).values,u=l.data.get(a.dataId).values,h=o.dtype==="string"?Fs(c):c,d=o.dtype==="string"?Fs(u):u,p=s||o.dtype,[f,m]=t(o.shape,a.shape,h,d,p);return l.makeTensorInfo(m,p,f)}:({inputs:r,backend:i})=>{const{a:o,b:a}=r,l=i;if(o.dtype==="complex64"||a.dtype==="complex64"){const c=hr({inputs:{x:o},backend:l,attrs:{dtype:"complex64"}}),u=l.data.get(c.dataId),h=u.complexTensorInfos.real,d=u.complexTensorInfos.imag,p=l.data.get(h.dataId).values,f=l.data.get(d.dataId).values,m=hr({inputs:{x:a},backend:l,attrs:{dtype:"complex64"}}),g=l.data.get(m.dataId),x=g.complexTensorInfos.real,y=g.complexTensorInfos.imag,w=l.data.get(x.dataId).values,b=l.data.get(y.dataId).values,[C,_,I]=e(o.shape,a.shape,p,f,w,b),v=l.makeTensorInfo(I,"float32",C),k=l.makeTensorInfo(I,"float32",_),T=on({inputs:{real:v,imag:k},backend:l});return l.disposeIntermediateTensorInfo(c),l.disposeIntermediateTensorInfo(m),l.disposeIntermediateTensorInfo(v),l.disposeIntermediateTensorInfo(k),T}else{const c=l.data.get(o.dataId).values,u=l.data.get(a.dataId).values,h=s||o.dtype,[d,p]=t(o.shape,a.shape,c,u,h);return l.makeTensorInfo(p,h,d)}}}function wg(n){return(t,e,s,r,i,o)=>{const a=Ct(t,e),l=W(a),c=a.length,u=ht(a),h=Oe("float32",l),d=Oe("float32",l),p=qi(t,a),f=qi(e,a),m=As(s,r),g=As(i,o),x=t.length,y=ht(t),w=e.length,b=ht(e);if(p.length+f.length===0)for(let C=0;C<h.length;C++){const _=C%m.length,I=C%g.length,v=n(m[_*2],m[_*2+1],g[I*2],g[I*2+1]);h[C]=v.real,d[C]=v.imag}else for(let C=0;C<h.length;C++){const _=so(C,c,u),I=_.slice(-x);p.forEach(P=>I[P]=0);const v=ds(I,x,y),k=_.slice(-w);f.forEach(P=>k[P]=0);const T=ds(k,w,b),D=n(m[v*2],m[v*2+1],g[T*2],g[T*2+1]);h[C]=D.real,d[C]=D.imag}return[h,d,a]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const p_=pe((n,t)=>n+t),zP=wg((n,t,e,s)=>({real:n+e,imag:t+s})),Ji=Ie(ro,p_,zP),UP={kernelName:ro,backendName:"cpu",kernelFunc:Ji};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cg(n,t,e,s,r){const i=W(s),o=Be(r,e);for(let a=0;a<n.length;a++){const l=n[a];if(l<0)throw new Error("Input x must be non-negative!");l>=r||(i>0?o[l]+=t[a]:o[l]+=1)}return o}function f_(n,t,e,s=!1){const r=n.shape[0],i=n.shape[1],o=kt([r,e],t.dtype);for(let a=0;a<r;a++)for(let l=0;l<i;l++){const c=n.get(a,l);if(c<0)throw new Error("Input x must be non-negative!");c>=e||(s?o.set(1,a,c):t.size>0?o.set(o.get(a,c)+t.get(a,l),a,c):o.set(o.get(a,c)+1,a,c))}return o}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const g_=pe((n,t)=>n&t),WP=Ie(rp,g_),GP={kernelName:rp,backendName:"cpu",kernelFunc:WP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ss(n){return(t,e,s)=>{const r=le(e,t.length);for(let i=0;i<t.length;++i)r[i]=n(t[i],s);return r}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vt(n,t,e){const s=Ss(t);return Cr(n,s,e)}function Cr(n,t,e){return({inputs:s,attrs:r,backend:i})=>{const{x:o}=s;at(o,n);const a=i,l=a.data.get(o.dataId).values;let c;if(o.dtype==="string"){if(!Array.isArray(l))throw new Error("String tensor's value was not an instance of Array");c=Fs(l)}else c=l;const u=e||o.dtype,h=t(c,u,r);return a.makeTensorInfo(o.shape,u,h)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const m_=Ss(n=>Math.ceil(n)),HP=Cr(xa,m_),XP={kernelName:xa,backendName:"cpu",kernelFunc:HP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x_(n,t,e,s){const r=le(e,W(t));if(s&&e!=="string"){let i=0;n.forEach(o=>{const a=W(o.shape);r.set(o.vals,i),i+=a})}else{let i=0;n.forEach(o=>{const a=e==="string"?Fs(o.vals):o.vals;let l=0;for(let c=0;c<o.shape[0];++c){const u=c*t[1]+i;for(let h=0;h<o.shape[1];++h)r[u+h]=a[l++]}i+=o.shape[1]})}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const y_=pe((n,t)=>n===t?1:0),b_=Ie(su,y_,null,"bool"),jP={kernelName:su,backendName:"cpu",kernelFunc:b_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const w_=Ss(n=>Math.exp(n)),C_=Cr(Ia,w_,"float32"),qP={kernelName:Ia,backendName:"cpu",kernelFunc:C_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const __=Ss(n=>Math.expm1(n)),KP=Cr(va,__),YP={kernelName:va,backendName:"cpu",kernelFunc:KP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const S_=Ss(n=>Math.floor(n)),JP=Cr(ka,S_),ZP={kernelName:ka,backendName:"cpu",kernelFunc:JP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const I_=pe((n,t)=>Math.floor(n/t)),QP=Ie($a,I_,null,"int32"),tO={kernelName:$a,backendName:"cpu",kernelFunc:QP};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v_(n,t,e,s,r,i,o,a,l){const c=kt([s,i],e);for(let u=0;u<s;u++){const h=[];let d=0;for(let p=0;p<r;p++){const f=n[u*r+p];d+=f*o[p],h.push(f)}if(d<0||d>=l/i)throw new Error(`Invalid indices: ${h} does not index into ${a}`);for(let p=0;p<i;p++)c.values[u*i+p]=t.get(...t.indexToLoc(d*i+p))}return c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k_(n,t,e){const s=kt(e,n.dtype);for(let r=0;r<s.size;++r){const o=s.indexToLoc(r).slice(),a=o[0],l=o[2],c=t.locToIndex([a,l]);o[2]=t.values[c];const u=n.locToIndex(o);0<=u&&u<n.values.length&&(s.values[r]=n.values[u])}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $_=pe((n,t)=>n>t?1:0),eO=Ie(au,$_,null,"bool"),nO={kernelName:au,backendName:"cpu",kernelFunc:eO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const T_=pe((n,t)=>n>=t?1:0),sO=Ie(Ta,T_,null,"bool"),rO={kernelName:Ta,backendName:"cpu",kernelFunc:sO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const N_=pe((n,t)=>n<t?1:0),iO=Ie(cu,N_,null,"bool"),oO={kernelName:cu,backendName:"cpu",kernelFunc:iO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const E_=pe((n,t)=>n<=t?1:0),aO=Ie(uu,E_,null,"bool"),lO={kernelName:uu,backendName:"cpu",kernelFunc:aO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R_(n,t,e){const s=(t-n)/(e-1),r=Be(e,"float32");r[0]=n;for(let i=1;i<r.length;i++)r[i]=r[i-1]+s;return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const D_=Ss(n=>Math.log(n)),cO=Cr(Aa,D_),uO={kernelName:Aa,backendName:"cpu",kernelFunc:cO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A_(n,t,e,s){const r=Oe(s,W(e));for(let i=0;i<r.length;++i){const o=i*t;let a=n[o];for(let l=0;l<t;++l){const c=n[o+l];(Number.isNaN(c)||c>a)&&(a=c)}r[i]=a}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const F_=pe((n,t)=>Math.max(n,t)),hO=Ie(Ma,F_),dO={kernelName:Ma,backendName:"cpu",kernelFunc:hO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const M_=pe((n,t)=>Math.min(n,t)),pO=Ie(Pa,M_),fO={kernelName:Pa,backendName:"cpu",kernelFunc:pO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _g=pe((n,t)=>n*t),gO=wg((n,t,e,s)=>({real:n*e-t*s,imag:n*s+t*e})),dh=Ie(Ba,_g,gO),mO={kernelName:Ba,backendName:"cpu",kernelFunc:dh};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P_(n,t,e){const s=pr(-1,e);return _g([],t,s,n,e)}function xO(n){const{inputs:t,backend:e}=n,{x:s}=t;at(s,"neg");const r=e.data.get(s.dataId).values,[i,o]=P_(r,s.shape,s.dtype);return e.makeTensorInfo(o,s.dtype,i)}const yO={kernelName:Cu,backendName:"cpu",kernelFunc:xO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const O_=pe((n,t)=>n!==t?1:0),bO=Ie(_u,O_,null,"bool"),wO={kernelName:_u,backendName:"cpu",kernelFunc:bO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sg(n,t,e,s,r){const i=t.length,o=W(t),a=ht(t),l=ht(r),c=Oe(e,W(r));for(let u=0;u<o;++u){const h=so(u,i,a),d=new Array(h.length);for(let f=0;f<d.length;f++)d[f]=h[s[f]];const p=ds(d,i,l);c[p]=n[u]}return c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function en(n){const{inputs:t,attrs:e,backend:s}=n,{x:r}=t,{perm:i}=e;at(r,"transpose");const o=r.shape.length,a=new Array(o);for(let h=0;h<a.length;h++)a[h]=r.shape[i[h]];const l=s.data.get(r.dataId).values,c=Sg(l,r.shape,r.dtype,i,a);return{dataId:s.write(c,a,r.dtype),shape:a,dtype:r.dtype}}const CO={kernelName:Bi,backendName:"cpu",kernelFunc:en};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B_(n,t,e,s){const[r,i]=Ne(n,s),o=cn(t,"int32"),a=Be(W(r),o),l=W(i);for(let c=0;c<a.length;++c){const u=c*l;let h=1;for(let d=0;d<l;++d)h*=e[u+d];a[c]=h}return{outVals:a,outShape:r,outDtype:o}}function _O(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:i,keepDims:o}=s;at(r,"prod");const a=r.shape.length,l=$t(i,r.shape),c=oe(l,a);let u=l,h=r;const d=[];c!=null&&(h=en({inputs:{x:r},backend:e,attrs:{perm:c}}),d.push(h),u=he(u.length,a));const p=e.data.get(h.dataId).values,{outVals:f,outShape:m,outDtype:g}=B_(h.shape,h.dtype,p,u);let x=m;return o&&(x=xe(m,l)),d.forEach(y=>e.disposeIntermediateTensorInfo(y)),e.makeTensorInfo(x,g,f)}const SO={kernelName:Tu,backendName:"cpu",kernelFunc:_O};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IO(n,t,e){n.forEach((s,r)=>{if(s<0||s>=e){const i=so(r,t.length,ht(t)).join(",");throw new Error(`indices[${i}] = ${s} is not in [0, ${e})`)}})}function vO(n,t){for(let e=0;e<n.length;++e){const s=n[e],r=e===n.length-1?t:n[e+1].length;if(s.length===0)throw new Error("Ragged splits may not be empty");if(s[0]<0)throw new Error("Ragged splits must be non-negative");if(s[s.length-1]>r)throw new Error("Ragged splits must not point past values");for(let i=1;i<s.length;++i)if(s[i-1]>s[i])throw new Error("Ragged splits must be sorted in ascending order")}}function kO(n,t,e,s){const r=[];let i=0;const o=t.length-1+e.length,a=new Array(o).fill(null).map(()=>[0]);vO(e,s);let l=1;for(let c=0;c<t.length-1;++c){l*=t[c];const u=t[c+1];for(let h=1;h<l+1;++h)a[c].push(h*u)}for(let c=0;c<n.length;++c){let u=n[c],h=n[c]+1;for(let d=0;d<e.length;++d){const p=e[d],f=d+t.length-1;if(f>=0){const m=a[f],g=m[m.length-1]-p[u];for(let x=u;x<h;++x)a[f].push(p[x+1]+g)}u=p[u],h=p[h]}h!==u&&(r.push([u,h]),i+=h-u)}return{outSplits:a,valueSlices:r,numValues:i}}function $O(n){const t=[];for(let e=0;e<n.length;++e){const s=n[e].length,r=le("int32",s);t.push(r),n[e].forEach((i,o)=>r[o]=i)}return t}function uy(n,t){const e=n.slice(0,t);for(;e.length<t;)e.push(1);for(let s=t;s<n.length;s++)e[t-1]*=n[s];return e}function TO(n,t,e,s,r,i){const o=uy(t,2)[1],a=uy(i,2)[1];let l=0;for(const c of e)for(let u=c[0];u<c[1];++u){for(let h=0;h<s;++h)r[l*a+h]=n[u*o+h];++l}}function NO(n,t,e,s,r){const i=t.slice();i[0]=r;const o=le(e,W(i)),a=n.length,l=a===0?0:a/t[0];return TO(n,t,s,l,o,i),[o,i]}function L_(n,t,e,s,r,i,o,a){if(n.length===0)throw new Error("paramsNestedSplits must be non empty");if(t[0].length===0)throw new Error("Split tensors must not be scalars");const l=t[0][0]-1;if(IO(i,o,l),s.length===0)throw new Error("params.rank must be nonzero");const c=s[0],{outSplits:u,valueSlices:h,numValues:d}=kO(i,o,n,c),p=$O(u),f=NO(e,s,r,h,d);return[p,f[0],f[1]]}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hy=2147483647;function V_(n,t,e,s,r,i,o){if(t.length>1)throw new Error("starts must be a scalar or vector");if(r.length>1)throw new Error("limits must be a scalar or vector");if(o.length>1)throw new Error("deltas must be a scalar or vector");const a=t.length===0,l=r.length===0,c=o.length===0,u=[];a||u.push(t[0]),l||u.push(r[0]),c||u.push(o[0]);for(let g=1;g<u.length;++g)if(u[g]!==u[g-1])throw new Error("starts, limits, and deltas must have the same shape");const h=u.length===0?1:u[0],d=le("int32",h+1);d[0]=0;for(let g=0;g<h;++g){const x=a?n[0]:n[g],y=l?s[0]:s[g],w=c?i[0]:i[g];if(w===0)throw new Error("Requires delta != 0");let b;if(w>0&&y<x||w<0&&y>x)b=0;else if(b=Math.ceil(Math.abs((y-x)/w)),b>hy)throw new Error(`Requires ((limit - start) / delta) <= ${hy}`);d[g+1]=d[g]+b}const p=d[h],f=le(e,p);let m=0;for(let g=0;g<h;++g){const x=d[g+1]-d[g];let y=a?n[0]:n[g];const w=c?i[0]:i[g];for(let b=0;b<x;++b)f[m++]=y,y+=w}return[d,f]}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var In=jn;class Ec{constructor(t,e,s,r,i,o,a,l,c,u){this.shape=t,this.shapeShape=e,this.values=s,this.valuesShape=r,this.valuesDType=i,this.defaultValue=o,this.defaultValueShape=a,this.rowPartitionValues=l,this.rowPartitionValuesShapes=c,this.rowPartitionTypes=vw(u),this.raggedRank=kw(this.rowPartitionTypes)}getRowPartitionTypeByDimension(t){return this.rowPartitionTypes[0]===In.FIRST_DIM_SIZE?this.rowPartitionTypes[t+1]:this.rowPartitionTypes[t]}getRowPartitionTensor(t){return this.rowPartitionTypes[0]===In.FIRST_DIM_SIZE?this.rowPartitionValues[t+1]:this.rowPartitionValues[t]}getMaxWidth(t){const e=this.getRowPartitionTensor(t-1);switch(this.getRowPartitionTypeByDimension(t-1)){case In.VALUE_ROWIDS:return Ec.getMaxWidthValueRowID(e);case In.ROW_SPLITS:return Ec.getMaxWidthRowSplit(e);default:throw new Error(`Cannot handle partition type ${In[this.getRowPartitionTypeByDimension(t-1)]}`)}}static getMaxWidthRowSplit(t){const e=t.length;if(e===0||e===1)return 0;let s=0;for(let r=0;r<e-1;++r){const i=t[r+1]-t[r];i>s&&(s=i)}return s}static getMaxWidthValueRowID(t){const e=t.length;if(e===0)return 0;let s=0,r=t[0],i=0;for(let o=1;o<e;++o){const a=t[o];a!==r&&(r=a,i=Math.max(o-s,i),s=o)}return Math.max(e-s,i)}tensorShapeFromTensor(t,e,s=!0){if(e.length===0){if(t[0]===-1)return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return py(t,s)}calculateOutputSize(t){const e=this.valuesShape,s=this.defaultValueShape;$w(s,e);const r=this.tensorShapeFromTensor(this.shape,this.shapeShape),o=Iw(this.raggedRank,r,e);o[0]<0&&(o[0]=t);for(let a=1;a<=this.raggedRank;++a)o[a]<0&&(o[a]=this.getMaxWidth(a));return o}calculateFirstParentOutputIndex(t,e,s){const r=Math.min(t,s),i=[];let o=0;for(let a=0;a<r;++a,o+=e)i.push(o);for(let a=r;a<t;++a)i.push(-1);return S(i.length===t,()=>"Final length of result must be equal to firstDimension."),i}calculateOutputIndexRowSplit(t,e,s,r){const i=t.length,o=[];for(let a=0;a<i-1;++a){const l=t[a+1]-t[a];let c=Math.min(r,l),u=e[a];u===-1&&(c=0);for(let h=0;h<c;++h)o.push(u),u+=s;for(let h=0;h<l-c;++h)o.push(-1)}if(i>0&&o.length!==t[i-1])throw new Error("Invalid row split size.");return o}calculateOutputIndexValueRowID(t,e,s,r){const i=t.length,o=[];if(i===0)return[];let a=0,l=t[0];if(l>=e.length)throw new Error(`Got currentValueRowId=${l}, which is not less than ${e.length}`);let c=e[l];o.push(c);for(let u=1;u<i;++u){const h=t[u];if(h===l)c>=0&&(++a,a<r?c+=s:c=-1);else{if(a=0,l=h,h>=e.length)throw new Error(`Got nextValueRowId=${h} which is not less than ${e.length}`);c=e[h]}o.push(c)}if(o.length!==t.length)throw new Error("Invalid row ids.");return o}calculateOutputIndex(t,e,s,r){const i=this.getRowPartitionTensor(t),o=this.getRowPartitionTypeByDimension(t);switch(o){case In.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(i,e,s,r);case In.ROW_SPLITS:if(i.length-1>e.length)throw new Error(`Row partition size is greater than output size: ${i.length-1} > ${e.length}`);return this.calculateOutputIndexRowSplit(i,e,s,r);default:throw new Error(`Unsupported partition type: ${In[o]}`)}}getFirstDimensionSize(){const t=this.rowPartitionValues[0];if(this.rowPartitionTypes.length===0)throw new Error("No row_partition_types given.");const e=this.rowPartitionTypes[0];switch(e){case In.FIRST_DIM_SIZE:return t[0];case In.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case In.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${In[e]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const e=this.getFirstDimensionSize(),s=this.calculateOutputSize(e),r=new Array(this.raggedRank+1);r[r.length-1]=1;for(let l=r.length-2;l>=0;--l)r[l]=r[l+1]*s[l+1];const i=py(s,!1),o=le(this.valuesDType,W(i));if(r[0]*s[0]>0){let l=this.calculateFirstParentOutputIndex(e,r[0],s[0]);for(let c=1;c<=this.raggedRank;++c)l=this.calculateOutputIndex(c-1,l,r[c],s[c]);this.setOutput(this.raggedRank,l,o,i)}return[i,o]}setOutput(t,e,s,r){if(s.length===0)return;const i=this.values,o=s;let a=r.slice();a=a.slice(t+1);const l=W(a),c=e.length;let u=this.defaultValue;if(u.length!==l&&u.length!==1){const f=this.defaultValueShape;M(()=>{const m=A(u,f);u=Mo(m,a).dataSync()})}let h=0,d=0,p=0;for(let f=0;f<=c;++f){let m=f<c?e[f]:-1;if(m===p){++p;continue}if(d<p){const g=i.subarray(h*l),x=o.subarray(d*l),y=(p-d)*l;dy(x,g,y)}if(f>=c){const g=s.length;m=Math.floor(g/l)}if(m>p)if(this.defaultValue.length===1)o.subarray(p*l,m*l).fill(this.defaultValue[0]),p=m;else for(;m>p;){const g=o.slice(p*l);dy(g,u,l),++p}m<0?(h=f+1,d=p):(h=f,d=p,p=d+1)}}}function dy(n,t,e){for(let s=0;s<e;s++)n[s]=t[s]}function py(n,t){const e=[];for(let s of n){if(s<0){if(!t)throw new Error(`Dimension ${s} must be >= 0`);if(s<-1)throw new Error(`Dimension ${s} must be >= -1`);s=-1}e.push(s)}return e}function z_(n,t,e,s,r,i,o,a,l,c){return new Ec(n,t,e,s,r,i,o,a,l,c).compute()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U_(n,t,e,s){const r=n===t,i=n<t&&e<0,o=t<n&&e>1;if(r||i||o)return Be(0,s);const a=Math.abs(Math.ceil((t-n)/e)),l=Be(a,s);t<n&&e===1&&(e=-1),l[0]=n;for(let c=1;c<l.length;c++)l[c]=l[c-1]+e;return l}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const W_=Ss(n=>1/Math.sqrt(n)),EO=Cr(Ga,W_),RO={kernelName:Ga,backendName:"cpu",kernelFunc:EO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Br(n,t,e,s,r,i,o,a,l,c){const u=[s/r,r],h=n.values,d=t.values;if(s===0)return kt(e,t.dtype);const p=l instanceof De?l:kt(u,t.dtype);typeof l=="string"||typeof l=="number"?p.values.fill(l):typeof l=="boolean"&&p.values.fill(+l);for(let f=0;f<i;f++){const m=[];let g=0;for(let x=0;x<o;x++){const y=h[f*o+x];m.push(y),g+=y*a[x]}if(g<0||g>=s/r)throw new Error(`Invalid indices: ${m} does not index into ${e}`);for(let x=0;x<r;x++)c?p.values[g*r+x]+=d[f*r+x]:p.values[g*r+x]=t.rank===0?d[0]:d[f*r+x]}return p}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DO=Ss(n=>1/(1+Math.exp(-n))),G_=Vt(Ka,n=>1/(1+Math.exp(-n))),AO={kernelName:Ka,backendName:"cpu",kernelFunc:G_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H_(n,t,e,s,r){const i=Ef(s,t,e),o=W(e),a=ht(s);if(i){const h=Rf(t,a);return r==="string"?n.slice(h,h+o):n.subarray(h,h+o)}const l=r==="string"?Fs(n):n,c=kt(s,r,l),u=kt(e,r);for(let h=0;h<u.size;++h){const d=u.indexToLoc(h),p=d.map((f,m)=>f+t[m]);u.set(c.get(...p),...d)}return r==="string"?jw(u.values):u.values}function si(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{begin:i,size:o}=s;at(r,"slice");const[a,l]=Ju(r,i,o);Tf(r,a,l);const c=e.data.get(r.dataId).values,u=H_(c,a,l,r.shape,r.dtype);return e.makeTensorInfo(l,r.dtype,u)}const FO={kernelName:Fu,backendName:"cpu",kernelFunc:si};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X_(n,t,e,s,r,i,o){const a=t[0],l=i[0],c=new Array(l),u=new Array(a),h=t[1];if(l===0){if(a!==0)throw new Error(Fw(a));const g=le(e,0),x=le(r,0);return[g,[0,h],x,c,u]}let d=!0,p=0;const f=new Array(l).fill(0);for(let g=0;g<a;++g){const x=n[g*h];if(x<0)throw new Error(Mw(g,x));if(x>=l)throw new Error(Pw(g,x,l));++f[x],d=d&&x>=p,p=x}let m=!0;for(let g=0;g<l;++g){const x=f[g]===0;c[g]=x,m=m&&!x,f[g]=Math.max(f[g],1),g>0&&(f[g]+=f[g-1])}if(m&&d){const g=n,x=s;for(let y=0;y<a;++y)u[y]=y;return[g,[a,h],x,c,u]}else{const g=f[l-1],x=le(e,g*h),y=le(r,g),w=new Array(l).fill(0);for(let b=0;b<a;++b){const C=n[b*h],_=w[C],I=(C===0?0:f[C-1])+_;w[C]++;for(let v=0;v<h;++v)x[I*h+v]=n[b*h+v];y[I]=s[b],u[b]=I}for(let b=0;b<l;++b)if(w[b]===0){const _=b===0?0:f[b-1];x[_*h+0]=b;for(let I=1;I<h;++I)x[_*h+I]=0;y[_]=o}return[x,[g,h],y,c,u]}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j_(n,t,e,s,r){const i=W(s),o=t[0],a=r.length,l=[];let c=1,u=-1;for(let g=0;g<a;++g){const x=r[g];if(x===-1){if(u!==-1)throw new Error(Ow(u,g));u=g,l.push(1)}else{if(x<0)throw new Error(Bw(g,x));c*=x,l.push(x)}}if(u!==-1){if(c<=0)throw new Error(Lw());const g=Math.trunc(i/c);if(c*g!==i)throw new Error(Vw(s,l));l[u]=g}if(W(l)!==i)throw new Error(zw(s,l));const d=s.length,p=[];if(d>0){p[d-1]=1;for(let g=d-2;g>=0;--g)p[g]=p[g+1]*s[g+1]}const f=[];if(a>0){f[a-1]=1;for(let g=a-2;g>=0;--g)f[g]=f[g+1]*l[g+1]}const m=le(e,o*a);for(let g=0;g<o;++g){let x=0;for(let y=0;y<d;++y)x+=n[g*d+y]*p[y];for(let y=0;y<a;++y)m[g*a+y]=Math.trunc(x/f[y]),x%=f[y]}return[m,[o,a],l]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ig(n,t,e,s,r,i=!1,o=0){const a=s.length,l=[t[0],n.length/t[0]],c=l[1],h=a>0?r[a-1]+1:0;if(h<0)throw new Error(wd());const d=t.slice();d[0]=h;const p=d.reduce((w,b)=>w*b,1),f=le(e,p);if(a===0)return h>0&&f.fill(o),[f,d];if(h<=0)throw new Error(wd());let m=0,g=1,x=0,y=r[m];for(;;){let w=0;if(g<a){if(w=r[g],y===w){++g;continue}if(y>=w)throw new Error(Uw())}if(y<0||y>=h)throw new Error(Ww(y,h));y>x&&f.fill(o,x*c,y*c);for(let b=m;b<g;++b){const C=s[b];if(C<0||C>=l[0])throw new Error(Gw(b,s[b],l[0]));for(let _=0;_<c;_++)f[y*c+_]+=n[C*c+_]}if(i)for(let b=0;b<c;b++)f[y*c+b]/=g-m;if(m=g,++g,x=y+1,y=w,g>a)break}return x<h&&f.fill(o,x*c,h*c),[f,d]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MO=Ss(n=>Math.sqrt(n)),PO=Vt(Ja,n=>Math.sqrt(n)),OO={kernelName:Ja,backendName:"cpu",kernelFunc:PO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const q_=pe((n,t)=>{const e=n-t;return e*e}),BO=Ie(Za,q_),LO={kernelName:Za,backendName:"cpu",kernelFunc:BO};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const K_=Ss((n,t)=>{const{pattern:e,replaceGlobal:s,rewrite:r}=t;return n.replace(new RegExp(e,s?"g":""),r)}),VO=Cr(Ap,K_),zO={kernelName:Ap,backendName:"cpu",kernelFunc:VO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y_(n,t,e,s){const r=kt(n,t.dtype);for(let i=0;i<r.size;i++){const o=r.indexToLoc(i),a=new Array(o.length);for(let l=0;l<a.length;l++)a[l]=o[l]*e[l]+s[l];r.set(t.get(...a),...o)}return r}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class UO{constructor(t,e,s,r,i,o){this.separator=nr(t),this.nGramWidths=e,this.leftPad=nr(s),this.rightPad=nr(r),this.padWidth=i,this.preserveShort=o}getPadWidth(t){return Math.min(this.padWidth<0?t-1:this.padWidth,t-1)}getNumNGrams(t,e){const s=this.getPadWidth(e);return Math.max(0,t+2*s-e+1)}createNGrams(t,e,s,r,i,o){for(let a=0;a<i;++a){const l=this.getPadWidth(o),c=Math.max(0,l-a),u=Math.max(0,l-(i-(a+1))),h=o-(c+u),d=e+(c>0?0:a-l);let p=0;p+=c*this.leftPad.length;for(let y=0;y<h;++y)p+=t[d+y].length;p+=u*this.rightPad.length;const f=c+u+h-1;p+=f*this.separator.length,s[r+a]=new Uint8Array(p);const m=s[r+a];let g=0;const x=y=>y.forEach(w=>m[g++]=w);for(let y=0;y<c;++y)x(this.leftPad),x(this.separator);for(let y=0;y<h-1;++y)x(t[d+y]),x(this.separator);if(h>0){x(t[d+h-1]);for(let y=0;y<u;++y)x(this.separator),x(this.rightPad)}else{for(let y=0;y<u-1;++y)x(this.rightPad),x(this.separator);x(this.rightPad)}}}compute(t,e){const s=t.length,r=e.length;if(r>0){let l=e[0];if(l!==0)throw new Error(`First split value must be 0, got ${l}`);for(let c=1;c<r;++c){let u=e[c]>=l;if(u=u&&e[c]<=s,!u)throw new Error(`Invalid split value ${e[c]}, must be in [${l}, ${s}]`);l=e[c]}if(l!==s)throw new Error(`Last split value must be data size. Expected ${s}, got ${l}`)}const i=r-1,o=le("int32",r);if(s===0||r===0){const l=new Array(s);for(let c=0;c<=i;++c)o[c]=0;return[l,o]}o[0]=0;for(let l=1;l<=i;++l){const c=e[l]-e[l-1];let u=0;this.nGramWidths.forEach(h=>{u+=this.getNumNGrams(c,h)}),this.preserveShort&&c>0&&u===0&&(u=1),o[l]=o[l-1]+u}const a=new Array(o[i]);for(let l=0;l<i;++l){const c=e[l];let u=o[l];if(this.nGramWidths.forEach(h=>{const d=e[l+1]-e[l],p=this.getNumNGrams(d,h);this.createNGrams(t,c,a,u,p,h),u+=p}),this.preserveShort&&u===o[l]){const h=e[l+1]-e[l];if(h===0)continue;const d=h+2*this.padWidth;this.createNGrams(t,c,a,u,1,d)}}return[a,o]}}function J_(n,t,e,s,r,i,o,a){return new UO(e,s,r,i,o,a).compute(n,t)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WO(n,t,e,s){if(!n.length)return;if(t.length===0){for(let i=0;i<n.length;++i)s.push(n.subarray(i,i+1));return}if(t.length===1){const i=t[0];let o=n.indexOf(i);for(;o!==-1;){const a=n.subarray(0,o);(!e||a.length!==0)&&s.push(a),n=n.subarray(o+1),o=n.indexOf(i)}(!e||n.length!==0)&&s.push(n);return}let r=0;for(let i=0;i<n.length+1;i++)if(i===n.length||t.indexOf(n[i])!==-1){const o=n.subarray(r,i);(!e||o.length!==0)&&s.push(o),r=i+1}}function Z_(n,t,e){const s=n.length,r=[];let i=0,o=0;const a=new Array(s);for(let d=0;d<s;++d){const p=r.length;WO(n[d],t,e,r);const f=r.length-p;a[d]=f,i+=f,o=Math.max(o,f)}const l=le("int32",i*2),c=new Array(i),u=[s,o];let h=0;for(let d=0;d<s;++d)for(let p=0;p<a[d];++p)l[h*2]=d,l[h*2+1]=p,c[h]=r[h],++h;return[l,c,u]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q_(n,t){const e=le("int32",n.length);for(let s=0;s<n.length;++s)e[s]=s$(n[s]).modulo(t).getLowBitsUnsigned();return e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tS=pe((n,t)=>n-t),GO=wg((n,t,e,s)=>({real:n-e,imag:t-s})),vg=Ie(Qa,tS,GO),HO={kernelName:Qa,backendName:"cpu",kernelFunc:vg};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eS(n,t){const e=new Array(n.rank);for(let r=0;r<e.length;r++)e[r]=n.shape[r]*t[r];const s=kt(e,n.dtype);for(let r=0;r<s.values.length;++r){const i=s.indexToLoc(r),o=new Array(n.rank);for(let l=0;l<o.length;l++)o[l]=i[l]%n.shape[l];const a=n.locToIndex(o);s.values[r]=n.values[a]}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ro=(n,t)=>{const e=t.value-n.value;return e===0?n.index-t.index:e};function nS(n,t,e=0,s=n.length-1){for(;s>e;){if(s-e>600){const a=s-e+1,l=t-e+1,c=Math.log(a),u=.5*Math.exp(2*c/3),h=.5*Math.sqrt(c*u*(a-u)/a)*Math.sign(l-a/2),d=Math.max(e,Math.floor(t-l*u/a+h)),p=Math.min(s,Math.floor(t+(a-l)*u/a+h));nS(n,t,d,p)}const r=n[t];let i=e,o=s;for(Ti(n,e,t),Ro(n[s],r)>0&&Ti(n,e,s);i<o;){for(Ti(n,i,o),i++,o--;Ro(n[i],r)<0;)i=i+1;for(;Ro(n[o],r)>0;)o=o-1}Ro(n[e],r)===0?Ti(n,e,o):(o=o+1,Ti(n,o,s)),o<=t&&(e=o+1),t<=o&&(s=o-1)}}function sS(n,t,e,s,r){const i=t[t.length-1],[o,a]=[n.length/i,i],l=Oe(e,o*s),c=Oe("int32",o*s);for(let h=0;h<o;h++){const d=h*a,p=n.subarray(d,d+a);let f=new Array(p.length);p.forEach((y,w)=>f[w]={value:y,index:w}),s<f.length&&(nS(f,s),f=f.slice(0,s)),r&&f.sort(Ro);const m=h*s,g=l.subarray(m,m+s),x=c.subarray(m,m+s);for(let y=0;y<s;y++)g[y]=f[y].value,x[y]=f[y].index}const u=t.slice();return u[u.length-1]=s,[kt(u,e,l),kt(u,"int32",c)]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rS(n,t,e,s){const r=$t(t,e)[0],i=[1,e[0],1];for(let f=0;f<r;f++)i[0]*=e[f];i[1]=e[r];for(let f=r+1;f<e.length;f++)i[2]*=e[f];const o=new Map,a=new Int32Array(e[r]),l=new De(i,s,n),c=[],u=i[0]===1&&i[2]===1;for(let f=0;f<e[r];f++){let m;if(u)m=n[f].toString();else{const x=[];for(let y=0;y<i[0];y++)for(let w=0;w<i[2];w++)x.push(l.get(y,f,w));m=x.join(",")}const g=o.get(m);if(g!=null)a[f]=g;else{const x=o.size;o.set(m,x),a[f]=x,c.push(f)}}const h=i.slice();h[1]=o.size;const d=new De(h,s);c.forEach((f,m)=>{for(let g=0;g<i[0];g++)for(let x=0;x<i[2];x++)d.set(l.get(g,f,x),g,m,x)});const p=e.slice();return p[r]=h[1],{outputValues:d.values,outputShape:p,indices:a}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XO=Object.freeze(Object.defineProperty({__proto__:null,addImpl:p_,bincountImpl:Cg,bincountReduceImpl:f_,bitwiseAndImpl:g_,castImpl:d_,ceilImpl:m_,concatImpl:x_,equalImpl:y_,expImpl:w_,expm1Impl:__,floorDivImpl:I_,floorImpl:S_,gatherNdImpl:v_,gatherV2Impl:k_,greaterEqualImpl:T_,greaterImpl:$_,lessEqualImpl:E_,lessImpl:N_,linSpaceImpl:R_,logImpl:D_,maxImpl:A_,maximumImpl:F_,minimumImpl:M_,multiplyImpl:_g,negImpl:P_,notEqualImpl:O_,prodImpl:B_,raggedGatherImpl:L_,raggedRangeImpl:V_,raggedTensorToTensorImpl:z_,rangeImpl:U_,rsqrtImpl:W_,scatterImpl:Br,sigmoidImpl:DO,simpleAbsImpl:h_,sliceImpl:H_,sparseFillEmptyRowsImpl:X_,sparseReshapeImpl:j_,sparseSegmentReductionImpl:Ig,sqrtImpl:MO,squaredDifferenceImpl:q_,staticRegexReplaceImpl:K_,stridedSliceImpl:Y_,stringNGramsImpl:J_,stringSplitImpl:Z_,stringToHashBucketFastImpl:Q_,subImpl:tS,tileImpl:eS,topKImpl:sS,transposeImpl:Sg,uniqueImpl:rS},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */C0("cpu",()=>new hh,1);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iS=Vt(_a,n=>n>=0?n:Math.exp(n)-1),jO={kernelName:_a,backendName:"cpu",kernelFunc:iS};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oS(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{alpha:i}=s;at([r],"leakyRelu");const o=W(r.shape),a=e.data.get(r.dataId).values,l=Oe("float32",o);for(let c=0;c<a.length;c++)l[c]=a[c]<0?i*a[c]:a[c];return e.makeTensorInfo(r.shape,"float32",l)}const qO={kernelName:lu,backendName:"cpu",kernelFunc:oS};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KO=pe((n,t)=>n<0?t*n:n);function aS(n){const{inputs:t,backend:e}=n,{x:s,alpha:r}=t;at([s,r],"prelu");const i=e.data.get(s.dataId).values,o=e.data.get(r.dataId).values,[a,l]=KO(s.shape,r.shape,i,o,"float32");return e.makeTensorInfo(l,"float32",a)}const YO={kernelName:$u,backendName:"cpu",kernelFunc:aS};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lS=Vt(za,n=>Math.max(0,n)),JO={kernelName:za,backendName:"cpu",kernelFunc:lS};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cS=Vt(Ua,n=>Math.min(Math.max(0,n),6)),ZO={kernelName:Ua,backendName:"cpu",kernelFunc:cS};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rc(n,t,e,s,r){if(e==="linear")return _s({inputs:{x:t},backend:n});if(e==="relu")return lS({inputs:{x:t},backend:n});if(e==="elu")return iS({inputs:{x:t},backend:n});if(e==="relu6")return cS({inputs:{x:t},backend:n});if(e==="prelu")return aS({inputs:{x:t,alpha:s},backend:n});if(e==="leakyrelu")return oS({inputs:{x:t},backend:n,attrs:{alpha:r}});if(e==="sigmoid")return G_({inputs:{x:t},backend:n});throw new Error(`Activation ${e} has not been implemented for the CPU backend.`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yt(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{shape:i}=s,o=W(r.shape),a=$b(i,o),l=W(a);S(o===l,()=>`The new shape (${a}) has ${l} elements and the old shape (${r.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`),e.incRef(r.dataId);const c=e.data.get(r.dataId);if(c.complexTensorInfos!=null){const u=c.complexTensorInfos.real,h=c.complexTensorInfos.imag;u.shape=a,h.shape=a}return{dataId:r.dataId,shape:a,dtype:r.dtype}}const QO={kernelName:Nu,backendName:"cpu",kernelFunc:Yt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uS(n){const{inputs:t,backend:e,attrs:s}=n,{a:r,b:i}=t,{transposeA:o,transposeB:a}=s;at([r,i],"matMul");const l=r.shape.length,c=i.shape.length,u=o?r.shape[l-2]:r.shape[l-1],h=a?i.shape[c-1]:i.shape[c-2],d=o?r.shape[l-1]:r.shape[l-2],p=a?i.shape[c-2]:i.shape[c-1],f=r.shape.slice(0,-2),m=i.shape.slice(0,-2),g=W(f),x=W(m),w=Ct(r.shape.slice(0,-2),i.shape.slice(0,-2)).concat([d,p]);S(u===h,()=>`Error in matMul: inner shapes (${u}) and (${h}) of Tensors with shapes ${r.shape} and ${i.shape} and transposeA=${o} and transposeB=${a} must match.`);const b=o?[g,u,d]:[g,d,u],C=a?[x,p,h]:[x,h,p],_=Yt({inputs:{x:r},backend:e,attrs:{shape:b}}),I=Yt({inputs:{x:i},backend:e,attrs:{shape:C}}),v=o?_.shape[1]:_.shape[2],k=o?_.shape[2]:_.shape[1],T=a?I.shape[1]:I.shape[2],D=Math.max(g,x),P=e.data.get(_.dataId).values,B=e.data.get(I.dataId).values,V=ht(_.shape),L=ht(I.shape),[z,H,G]=o?[V[0],1,V[1]]:[V[0],V[1],1],[X,q,K]=a?[1,L[1],L[0]]:[L[1],1,L[0]],Z=k*T,J=kt([D,k,T],_.dtype),nt=J.values,Q=e.blockSize;for(let it=0;it<D;it++){const ut=it%g,xt=it%x;for(let mt=0;mt<k;mt+=Q){const St=Math.min(mt+Q,k);for(let It=0;It<T;It+=Q){const Ot=Math.min(It+Q,T);for(let Ht=0;Ht<v;Ht+=Q){const ae=Math.min(Ht+Q,v);for(let Xt=mt;Xt<St;Xt++)for(let zt=It;zt<Ot;zt++){let re=0;for(let te=Ht;te<ae;te++){const Is=P[ut*z+Xt*H+te*G],Ee=B[te*X+zt*q+xt*K];re+=Is*Ee}nt[it*Z+(Xt*T+zt)]+=re}}}}}return e.disposeIntermediateTensorInfo(_),e.disposeIntermediateTensorInfo(I),e.makeTensorInfo(w,J.dtype,J.values)}const tB={kernelName:jc,backendName:"cpu",kernelFunc:uS};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eB(n){const{inputs:t,backend:e,attrs:s}=n,{a:r,b:i,bias:o,preluActivationWeights:a}=t,{transposeA:l,transposeB:c,activation:u,leakyreluAlpha:h}=s;let d,p,f;const m=[];d=uS({inputs:{a:r,b:i},attrs:{transposeA:l,transposeB:c},backend:e}),o&&(p=Ji({inputs:{a:d,b:o},backend:e}),m.push(d),d=p),u&&(f=Rc(e,d,u,a,h),m.push(d),d=f);for(const x of m)e.disposeIntermediateTensorInfo(x);return d}const nB={kernelName:lc,backendName:"cpu",kernelFunc:eB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sB=Vt(ca,n=>Math.acos(n)),rB={kernelName:ca,backendName:"cpu",kernelFunc:sB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iB=Vt(ua,n=>Math.acosh(n)),oB={kernelName:ua,backendName:"cpu",kernelFunc:iB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aB(n){const{inputs:t,backend:e}=n,s=t;at(t,"addN");const r=s.map(a=>e.data.get(a.dataId).values),i=kt(s[0].shape,s[0].dtype),o=i.values;for(let a=0;a<s.length;a++){const l=r[a];for(let c=0;c<o.length;c++)o[c]+=l[c]}return e.makeTensorInfo(i.shape,i.dtype,i.values)}const lB={kernelName:Zd,backendName:"cpu",kernelFunc:aB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cB(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:i,keepDims:o}=s;at(r,"all");const a=$t(i,r.shape);let l=a;const c=oe(l,r.shape.length);let u=r;c!=null&&(u=en({inputs:{x:r},backend:e,attrs:{perm:c}}),l=he(l.length,r.shape.length)),Fe("all",l,u.shape.length);const[h,d]=Ne(u.shape,l),p=W(d),f=Be(W(h),u.dtype),m=e.data.get(u.dataId).values;for(let x=0;x<f.length;++x){const y=x*p;let w=m[y];for(let b=0;b<p;++b){const C=m[y+b];w=w&&C}f[x]=w}c!=null&&e.disposeIntermediateTensorInfo(u);const g=e.makeTensorInfo(h,u.dtype,f);if(o){const x=xe(h,a),y=Yt({inputs:{x:g},backend:e,attrs:{shape:x}});return e.disposeIntermediateTensorInfo(g),y}return g}const uB={kernelName:Qd,backendName:"cpu",kernelFunc:cB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hB(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:i,keepDims:o}=s;at(r,"any");const a=$t(i,r.shape);let l=a;const c=oe(l,r.shape.length);let u=r;c!=null&&(u=en({inputs:{x:r},backend:e,attrs:{perm:c}}),l=he(l.length,r.shape.length)),Fe("any",l,u.shape.length);const[h,d]=Ne(u.shape,l),p=W(d),f=Be(W(h),u.dtype),m=e.data.get(u.dataId).values;for(let x=0;x<f.length;++x){const y=x*p;let w=m[y];for(let b=0;b<p;++b){const C=m[y+b];w=w||C}f[x]=w}c!=null&&e.disposeIntermediateTensorInfo(u);const g=e.makeTensorInfo(h,u.dtype,f);if(o){const x=xe(h,a),y=Yt({inputs:{x:g},backend:e,attrs:{shape:x}});return e.disposeIntermediateTensorInfo(g),y}return g}const dB={kernelName:tp,backendName:"cpu",kernelFunc:hB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pB(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:i}=s;at(r,"argMax");let o=$t(i,r.shape);const a=oe(o,r.shape.length);let l=r;const c=[];a!=null&&(l=en({inputs:{x:r},backend:e,attrs:{perm:a}}),c.push(l),o=he(o.length,l.shape.length)),o=[o[0]],Fe("argMax",o,l.shape.length);const[u,h]=Ne(l.shape,o),d=W(u),p=Be(d,"int32"),f=W(h),m=e.data.get(l.dataId).values;for(let g=0;g<p.length;++g){const x=g*f;let y=m[x],w=0;for(let b=0;b<f;++b){const C=m[x+b];C>y&&(y=C,w=b)}p[g]=w}return c.forEach(g=>e.disposeIntermediateTensorInfo(g)),e.makeTensorInfo(u,"int32",p)}const fB={kernelName:Wc,backendName:"cpu",kernelFunc:pB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gB(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:i}=s;at(r,"argMin");let o=$t(i,r.shape);const a=oe(o,r.shape.length);let l=r;const c=[];a!=null&&(l=en({inputs:{x:r},backend:e,attrs:{perm:a}}),c.push(l),o=he(o.length,l.shape.length)),o=[o[0]],Fe("argMin",o,l.shape.length);const[u,h]=Ne(l.shape,o),d=W(u),p=Be(d,"int32"),f=W(h),m=e.data.get(l.dataId).values;for(let g=0;g<p.length;++g){const x=g*f;let y=m[x],w=0;for(let b=0;b<f;++b){const C=m[x+b];C<y&&(y=C,w=b)}p[g]=w}return c.forEach(g=>e.disposeIntermediateTensorInfo(g)),e.makeTensorInfo(u,"int32",p)}const mB={kernelName:Gc,backendName:"cpu",kernelFunc:gB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xB=Vt(ha,n=>Math.asin(n)),yB={kernelName:ha,backendName:"cpu",kernelFunc:xB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bB=Vt(da,n=>Math.asinh(n)),wB={kernelName:da,backendName:"cpu",kernelFunc:bB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CB=Vt(pa,n=>Math.atan(n)),_B={kernelName:pa,backendName:"cpu",kernelFunc:CB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SB=pe((n,t)=>Math.atan2(n,t)),IB=Ie(ga,SB),vB={kernelName:ga,backendName:"cpu",kernelFunc:IB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kB=Vt(fa,n=>Math.atanh(n)),$B={kernelName:fa,backendName:"cpu",kernelFunc:kB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kg(n,t,e,s,r,i){const o=r.strideHeight,a=r.strideWidth,l=r.dilationHeight,c=r.dilationWidth,u=r.effectiveFilterHeight,h=r.effectiveFilterWidth,d=r.padInfo.top,p=r.padInfo.left,f=i==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=kt(r.outShape,e),g=m.values,x=r.outShape[1]*r.outShape[2]*r.outShape[3],y=r.outShape[2]*r.outShape[3],w=r.outShape[3];for(let b=0;b<r.batchSize;++b){const C=b*x,_=b*s[0];for(let I=0;I<r.inChannels;++I)for(let v=0;v<r.outHeight;++v){const k=v*o-d,T=Math.max(0,k),D=Math.min(r.inHeight,u+k),P=C+v*y;for(let B=0;B<r.outWidth;++B){const V=B*a-p,L=Math.max(0,V),z=Math.min(r.inWidth,h+V);let H=f,G=0,X=0;for(let K=T;K<D;K+=l){const Z=_+K*s[1];for(let J=L;J<z;J+=c){const nt=Z+J*s[2],Q=n[nt+I];i==="max"&&Q>H?H=Q:i==="avg"&&(G+=Q,X++)}if(isNaN(H))break}const q=P+B*w+I;g[q]=i==="avg"?G/X:H}}}return m}function hS(n,t,e,s,r=!1,i=!1){const o=kt(s.outShape,"int32"),a=s.strideHeight,l=s.strideWidth,c=s.dilationHeight,u=s.dilationWidth,h=s.effectiveFilterHeight,d=s.effectiveFilterWidth,p=s.padInfo.top,f=s.padInfo.left,m=kt(t,e,n);for(let g=0;g<s.batchSize;++g)for(let x=0;x<s.inChannels;++x)for(let y=0;y<s.outHeight;++y){const w=y*a-p;let b=w;for(;b<0;)b+=c;const C=Math.min(s.inHeight,h+w);for(let _=0;_<s.outWidth;++_){const I=_*l-f;let v=I;for(;v<0;)v+=u;const k=Math.min(s.inWidth,d+I);let T=Number.NEGATIVE_INFINITY,D=-1;for(let P=b;P<C;P+=c){const B=P-w;for(let V=v;V<k;V+=u){const L=V-I,z=m.get(g,P,V,x);z>T&&(T=z,r?D=i?((g*s.inHeight+P)*s.inWidth+V)*s.inChannels+x:(P*s.inWidth+V)*s.inChannels+x:D=B*d+L)}}o.set(D,g,y,_,x)}}return o}function dS(n,t,e,s,r,i){const o=r.strideDepth,a=r.strideHeight,l=r.strideWidth,c=r.dilationDepth,u=r.dilationHeight,h=r.dilationWidth,d=r.effectiveFilterDepth,p=r.effectiveFilterHeight,f=r.effectiveFilterWidth,m=r.padInfo.front,g=r.padInfo.top,x=r.padInfo.left,y=i==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,w=kt(r.outShape,e),b=w.values,C=r.outShape[1]*r.outShape[2]*r.outShape[3]*r.outShape[4],_=r.outShape[2]*r.outShape[3]*r.outShape[4],I=r.outShape[3]*r.outShape[4],v=r.outShape[4];for(let k=0;k<r.batchSize;++k){const T=k*C,D=k*s[0];for(let P=0;P<r.inChannels;++P)for(let B=0;B<r.outDepth;++B){const V=B*o-m;let L=V;for(;L<0;)L+=c;const z=Math.min(r.inDepth,d+V),H=T+B*_;for(let G=0;G<r.outHeight;++G){const X=G*a-g;let q=X;for(;q<0;)q+=u;const K=Math.min(r.inHeight,p+X),Z=H+G*I;for(let J=0;J<r.outWidth;++J){const nt=J*l-x;let Q=nt;for(;Q<0;)Q+=h;const it=Math.min(r.inWidth,f+nt),ut=Z+J*v;let xt=y,mt=0,St=0;for(let Ot=L;Ot<z;Ot+=c){const Ht=D+Ot*s[1];for(let ae=q;ae<K;ae+=u){const Xt=Ht+ae*s[2];for(let zt=Q;zt<it;zt+=h){const re=Xt+zt*s[3],te=n[re+P];if(i==="max"&&te>xt?xt=te:i==="avg"&&(mt+=te,St++),isNaN(xt))break}if(isNaN(xt))break}if(isNaN(xt))break}const It=ut+P;b[It]=i==="avg"?mt/Math.max(St,1):xt}}}}return w}function TB(n,t){const e=kt(t.outShape,"int32"),s=t.strideDepth,r=t.strideHeight,i=t.strideWidth,o=t.dilationDepth,a=t.dilationHeight,l=t.dilationWidth,c=t.effectiveFilterDepth,u=t.effectiveFilterHeight,h=t.effectiveFilterWidth,d=t.padInfo.front,p=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let x=0;x<t.outDepth;++x){const y=x*s-d;let w=y;for(;w<0;)w+=o;const b=Math.min(t.inDepth,c+y);for(let C=0;C<t.outHeight;++C){const _=C*r-p;let I=_;for(;I<0;)I+=a;const v=Math.min(t.inHeight,u+_);for(let k=0;k<t.outWidth;++k){const T=k*i-f;let D=T;for(;D<0;)D+=l;const P=Math.min(t.inWidth,h+T);let B=Number.NEGATIVE_INFINITY,V=-1;for(let L=w;L<b;L+=o){const z=L-y;for(let H=I;H<v;H+=a){const G=H-_;for(let X=D;X<P;X+=l){const q=X-T,K=n.get(m,L,H,X,g);K>=B&&(B=K,V=z*u*h+G*u+q)}}}e.set(V,m,x,C,k,g)}}}return e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NB(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t;at(r,"avgPool");const{filterSize:i,strides:o,pad:a,dimRoundingMode:l}=s,c=1;S(Ve(o,c),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`);const u=Pn(r.shape,i,o,c,a,l);let h;if(u.filterWidth===1&&u.filterHeight===1&&Pt(u.inShape,u.outShape))h=_s({inputs:{x:r},backend:e});else{const d=e.data.get(r.dataId).values,p=ht(r.shape),f=kg(d,r.shape,r.dtype,p,u,"avg");h=e.makeTensorInfo(u.outShape,r.dtype,f.values)}return h}const EB={kernelName:Hc,backendName:"cpu",kernelFunc:NB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RB(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{filterSize:i,strides:o,pad:a,dimRoundingMode:l,dataFormat:c}=s;at(r,"avgPool3d");const u=Ps(r.shape,i,o,1,a,l,c),h=e.data.get(r.dataId).values,d=dS(h,r.shape,r.dtype,ht(r.shape),u,"avg");return e.makeTensorInfo(d.shape,"float32",d.values)}const DB={kernelName:Xc,backendName:"cpu",kernelFunc:RB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AB(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,input:i}=t,{filterSize:o,strides:a,pad:l,dimRoundingMode:c}=s;at([r,i],"avgPool3DGrad");const u=Ps(i.shape,o,a,1,l,c),h=u.strideDepth,d=u.strideHeight,p=u.strideWidth,f=u.filterDepth,m=u.filterHeight,g=u.filterWidth,x=u.dilationDepth,y=u.dilationHeight,w=u.dilationWidth,b=u.effectiveFilterDepth,C=u.effectiveFilterHeight,_=u.effectiveFilterWidth,I=b-1-u.padInfo.front,v=_-1-u.padInfo.left,k=C-1-u.padInfo.top,T=kt(i.shape,"float32"),D=1/(f*m*g),P=e.bufferSync(r);for(let B=0;B<u.batchSize;++B)for(let V=0;V<u.inChannels;++V)for(let L=0;L<u.inDepth;++L)for(let z=0;z<u.inHeight;++z)for(let H=0;H<u.inWidth;++H){const G=L-I,X=z-k,q=H-v;let K=0;for(let Z=0;Z<b;Z+=x){const J=(G+Z)/h;if(!(J<0||J>=u.outDepth||Math.floor(J)!==J))for(let nt=0;nt<C;nt+=y){const Q=(X+nt)/d;if(!(Q<0||Q>=u.outHeight||Math.floor(Q)!==Q))for(let it=0;it<_;it+=w){const ut=(q+it)/p;if(ut<0||ut>=u.outWidth||Math.floor(ut)!==ut)continue;const xt=P.get(B,J,Q,ut,V);K+=xt}}}T.set(K*D,B,L,z,H,V)}return e.makeTensorInfo(T.shape,T.dtype,T.values)}const FB={kernelName:np,backendName:"cpu",kernelFunc:AB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MB(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,input:i}=t,o=i;at([r,i],"avgPoolGrad");const{filterSize:a,strides:l,pad:c}=s,u=Pn(o.shape,a,l,1,c),h=u.strideHeight,d=u.strideWidth,p=u.filterHeight,f=u.filterWidth,m=u.dilationHeight,g=u.dilationWidth,x=u.effectiveFilterHeight,y=u.effectiveFilterWidth,w=y-1-u.padInfo.left,b=x-1-u.padInfo.top,C=kt(o.shape,"float32"),_=1/(p*f),I=e.data.get(r.dataId).values,v=kt(r.shape,"float32",I);for(let k=0;k<u.batchSize;++k)for(let T=0;T<u.inChannels;++T)for(let D=0;D<u.inHeight;++D)for(let P=0;P<u.inWidth;++P){const B=D-b,V=P-w;let L=0;for(let z=0;z<x;z+=m){const H=(B+z)/h;if(!(H<0||H>=u.outHeight||Math.floor(H)!==H))for(let G=0;G<y;G+=g){const X=(V+G)/d;if(X<0||X>=u.outWidth||Math.floor(X)!==X)continue;const q=v.get(k,H,X,T);L+=q}}C.set(L*_,k,D,P,T)}return e.makeTensorInfo(C.shape,C.dtype,C.values)}const PB={kernelName:ep,backendName:"cpu",kernelFunc:MB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OB(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,scale:i,offset:o,mean:a,variance:l}=t;S(a.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),S(o==null||a.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),S(i==null||a.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),at([r,a,l,i,o],"batchNorm");let{varianceEpsilon:c}=s;c==null&&(c=.001);const u=e.data.get(r.dataId).values,h=e.data.get(a.dataId).values,d=e.data.get(l.dataId).values,p=i?e.data.get(i.dataId).values:new Float32Array([1]),f=o?e.data.get(o.dataId).values:new Float32Array([0]),m=new Float32Array(u.length),g=f.length,x=p.length,y=d.length,w=h.length;let b=0,C=0,_=0,I=0;for(let v=0;v<u.length;++v)m[v]=f[b++]+(u[v]-h[C++])*p[_++]/Math.sqrt(d[I++]+c),b>=g&&(b=0),C>=w&&(C=0),_>=x&&(_=0),I>=y&&(I=0);return e.makeTensorInfo(r.shape,r.dtype,m)}const BB={kernelName:iu,backendName:"cpu",kernelFunc:OB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LB(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{blockShape:i,crops:o}=s;at([r],"batchToSpaceND");const a=i.reduce((x,y)=>x*y),l=cl(r.shape,i,a),c=ul(l.length,i.length),u=hl(r.shape,i,a),h=Pf(o,i.length),d=Of(u,o,i.length),p=Yt({inputs:{x:r},backend:e,attrs:{shape:l}}),f=en({inputs:{x:p},backend:e,attrs:{perm:c}}),m=Yt({inputs:{x:f},backend:e,attrs:{shape:u}}),g=si({inputs:{x:m},backend:e,attrs:{begin:h,size:d}});return e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(m),g}const VB={kernelName:qc,backendName:"cpu",kernelFunc:LB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zB(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,weights:i}=t,{size:o}=s,a=e.data.get(r.dataId).values,l=e.data.get(i.dataId).values,c=Cg(a,l,i.dtype,i.shape,o);return e.makeTensorInfo([o],i.dtype,c)}const UB={kernelName:sp,backendName:"cpu",kernelFunc:zB};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WB(n){const{inputs:t,backend:e}=n,{s0:s,s1:r}=t,i=e.data.get(s.dataId).values,o=e.data.get(r.dataId).values,a=Ct(Array.from(i),Array.from(o));return e.makeTensorInfo([a.length],"int32",Int32Array.from(a))}const GB={kernelName:Ab,backendName:"cpu",kernelFunc:WB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HB=Vt(ya,(n,t)=>{const e=t;return n>e.clipValueMax?e.clipValueMax:n<e.clipValueMin?e.clipValueMin:n}),XB={kernelName:ya,backendName:"cpu",kernelFunc:HB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jB=n=>{const{x:t}=n.inputs,e=n.backend,s=new Float32Array(W(t.shape)),r=e.data.get(t.dataId),i=r.complexTensorInfos.real,o=r.complexTensorInfos.imag,a=e.data.get(i.dataId).values,l=e.data.get(o.dataId).values;for(let c=0;c<a.length;c++){const u=a[c],h=l[c];s[c]=Math.hypot(u,h)}return e.makeOutput(s,t.shape,"float32")},qB={kernelName:Kc,backendName:"cpu",kernelFunc:jB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zi(n){const{inputs:t,backend:e}=n,{input:s}=t,r=e.data.get(s.dataId).complexTensorInfos.imag,i=e.data.get(r.dataId).values;return e.makeTensorInfo(r.shape,r.dtype,i)}const KB={kernelName:Cp,backendName:"cpu",kernelFunc:Zi};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qi(n){const{inputs:t,backend:e,attrs:s}=n,{axis:r}=s,i=$t(r,t[0].shape)[0],o=t.map(m=>m.shape);Af(o,i);let a=fs(t.map(m=>m.shape),i);if(W(a)===0)return e.makeTensorInfo(a,t[0].dtype,[]);const l=t.filter(m=>W(m.shape)>0);if(l.length===1)return _s({inputs:{x:l[0]},backend:e});if(l[0].dtype==="complex64"){const m=l.map(b=>ni({inputs:{input:b},backend:e})),g=l.map(b=>Zi({inputs:{input:b},backend:e})),x=Qi({inputs:m,backend:e,attrs:{axis:i}}),y=Qi({inputs:g,backend:e,attrs:{axis:i}}),w=on({inputs:{real:x,imag:y},backend:e});return m.forEach(b=>e.disposeIntermediateTensorInfo(b)),g.forEach(b=>e.disposeIntermediateTensorInfo(b)),e.disposeIntermediateTensorInfo(x),e.disposeIntermediateTensorInfo(y),w}const c=l.map(m=>{const x=[-1,W(m.shape.slice(i))];return Yt({inputs:{x:m},backend:e,attrs:{shape:x}})}),u=c.map(m=>({vals:e.data.get(m.dataId).values,shape:m.shape}));a=fs(c.map(m=>m.shape),1);const h=c[0].shape[0]===1,d=x_(u,a,t[0].dtype,h),p=fs(l.map(m=>m.shape),i),f=e.makeTensorInfo(p,t[0].dtype,d);return c.forEach(m=>e.disposeIntermediateTensorInfo(m)),f}const YB={kernelName:Yc,backendName:"cpu",kernelFunc:Qi};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pS(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:i}=t,{strides:o,pad:a,dataFormat:l,dilations:c,dimRoundingMode:u}=s;at([r,i],"conv2d");const h=Os(l),d=Ae(r.shape,i.shape,o,c,a,u,!1,h),p=d.filterHeight,f=d.filterWidth,m=d.dilationHeight,g=d.dilationWidth,x=d.padInfo.left,y=d.padInfo.top,w=d.dataFormat==="channelsLast",b=new De(d.outShape,r.dtype),C=ht(r.shape),_=ht(i.shape),I=C[0],v=w?C[1]:C[2],k=w?C[2]:1,T=w?1:C[1],D=b.strides[0],P=w?b.strides[1]:b.strides[2],B=w?b.strides[2]:1,V=w?1:b.strides[1],L=e.data.get(r.dataId).values,z=e.data.get(i.dataId).values,H=b.values;for(let G=0;G<d.batchSize;++G){const X=G*I,q=G*D;for(let K=0;K<d.outHeight;++K){const Z=q+K*P,J=K*d.strideHeight-y;for(let nt=0;nt<p;++nt){const Q=J+nt*m;if(Q<0||Q>=d.inHeight)continue;const it=nt*_[0],ut=X+Q*v;for(let xt=0;xt<d.outWidth;++xt){const mt=Z+xt*B,St=xt*d.strideWidth-x;for(let It=0;It<f;++It){const Ot=St+It*g;if(Ot<0||Ot>=d.inWidth)continue;const Ht=it+It*_[1],ae=ut+Ot*k;let Xt=Ht;for(let zt=0;zt<d.inChannels;++zt){const re=L[ae+zt*T];for(let te=0;te<d.outChannels;++te)H[mt+te*V]+=re*z[Xt+te];Xt+=d.outChannels}}}}}}return e.makeTensorInfo(b.shape,b.dtype,H)}const JB={kernelName:Jc,backendName:"cpu",kernelFunc:pS};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZB(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,dy:i}=t,{strides:o,pad:a,dataFormat:l,dimRoundingMode:c,filterShape:u}=s;at([r,i],"conv2dBackpropFilter");const h=Os(l),d=Ae(r.shape,u,o,1,a,c,!1,h),{strideHeight:p,strideWidth:f,filterHeight:m,filterWidth:g}=d,x=d.dataFormat==="channelsLast",y=new De(d.filterShape,"float32"),w=d.padInfo.left,b=d.padInfo.top,C=e.data.get(r.dataId).values,_=e.data.get(i.dataId).values,I=new De(r.shape,r.dtype,C),v=new De(i.shape,i.dtype,_);for(let k=0;k<m;++k){const T=Math.max(0,Math.ceil((b-k)/p)),D=Math.min(d.outHeight,(d.inHeight+b-k)/p);for(let P=0;P<g;++P){const B=Math.max(0,Math.ceil((w-P)/f)),V=Math.min(d.outWidth,(d.inWidth+w-P)/f);for(let L=0;L<d.inChannels;++L)for(let z=0;z<d.outChannels;++z){let H=0;for(let G=0;G<d.batchSize;++G)for(let X=T;X<D;++X){const q=k+X*p-b;for(let K=B;K<V;++K){const Z=P+K*f-w;x?H+=I.get(G,q,Z,L)*v.get(G,X,K,z):H+=I.get(G,L,q,Z)*v.get(G,z,X,K)}}y.set(H,k,P,L,z)}}}return e.makeTensorInfo(y.shape,y.dtype,y.values)}const QB={kernelName:op,backendName:"cpu",kernelFunc:ZB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tL(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,filter:i}=t,{inputShape:o,strides:a,pad:l,dataFormat:c,dimRoundingMode:u}=s;at([r,i],"conv2dBackpropInput");const h=ht(i.shape),d=ht(r.shape);let p=Os(c);const f=Ae(o,i.shape,a,1,l,u,!1,p),m=new De(f.inShape,"float32"),g=m.values,x=e.data.get(r.dataId).values,y=e.data.get(i.dataId).values,[w,b,C]=h,{batchSize:_,filterHeight:I,filterWidth:v,inChannels:k,inHeight:T,inWidth:D,outChannels:P,outHeight:B,outWidth:V,strideHeight:L,strideWidth:z}=f;p=f.dataFormat;const H=I-1-f.padInfo.top,G=v-1-f.padInfo.left,X=p==="channelsLast",q=m.strides[0],K=X?m.strides[1]:m.strides[2],Z=X?m.strides[2]:1,J=X?1:m.strides[1],nt=d[0],Q=X?d[1]:d[2],it=X?d[2]:1,ut=X?1:d[1];for(let xt=0;xt<_;++xt)for(let mt=0;mt<k;++mt)for(let St=0;St<T;++St){const It=St-H,Ot=Math.max(0,Math.ceil(It/L)),Ht=Math.min(B,(I+It)/L);for(let ae=0;ae<D;++ae){const Xt=ae-G,zt=Math.max(0,Math.ceil(Xt/z)),re=Math.min(V,(v+Xt)/z);let te=0;for(let Ee=Ot;Ee<Ht;++Ee){const Ls=Ee*L-It;for(let pn=zt;pn<re;++pn){const Sr=pn*z-Xt,Ln=nt*xt+Q*Ee+it*pn,vs=w*(I-1-Ls)+b*(v-1-Sr)+C*mt;for(let Vs=0;Vs<P;++Vs){const zs=x[Ln+ut*Vs],Us=y[vs+Vs];te+=zs*Us}}}const Is=q*xt+K*St+Z*ae+J*mt;g[Is]=te}}return e.makeTensorInfo(m.shape,m.dtype,m.values)}const eL={kernelName:Zc,backendName:"cpu",kernelFunc:tL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nL(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:i}=t,{strides:o,pad:a,dilations:l}=s;at([r,i],"conv3d");const c=gr(r.shape,i.shape,o,l,a),{filterDepth:u,filterHeight:h,filterWidth:d,dilationDepth:p,dilationHeight:f,dilationWidth:m,padInfo:g}=c,x=g.front,y=g.left,w=g.top,b=new De(c.outShape,r.dtype),C=e.data.get(r.dataId).values,_=e.data.get(i.dataId).values,I=b.values,v=ht(r.shape),k=ht(i.shape);for(let T=0;T<c.batchSize;++T){const D=T*v[0],P=T*b.strides[0];for(let B=0;B<c.outDepth;++B){const V=P+B*b.strides[1],L=B*c.strideDepth-x;for(let z=0;z<u;++z){const H=L+z*p;if(H<0||H>=c.inDepth)continue;const G=z*k[0],X=D+H*v[1];for(let q=0;q<c.outHeight;++q){const K=V+q*b.strides[2],Z=q*c.strideHeight-w;for(let J=0;J<h;++J){const nt=Z+J*f;if(nt<0||nt>=c.inHeight)continue;const Q=G+J*k[1],it=X+nt*v[2];for(let ut=0;ut<c.outWidth;++ut){const xt=K+ut*c.outChannels,mt=ut*c.strideWidth-y;for(let St=0;St<d;++St){const It=mt+St*m;if(It<0||It>=c.inWidth)continue;const Ot=Q+St*k[2],Ht=it+It*c.inChannels;let ae=Ot;for(let Xt=0;Xt<c.inChannels;++Xt){const zt=C[Ht+Xt];for(let re=0;re<c.outChannels;++re)I[xt+re]+=zt*_[ae+re];ae+=c.outChannels}}}}}}}}return e.makeTensorInfo(b.shape,b.dtype,b.values)}const sL={kernelName:Qc,backendName:"cpu",kernelFunc:nL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rL(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,dy:i}=t,{strides:o,pad:a,filterShape:l}=s;at([r,i],"conv3dBackpropFilterV2");const c=ht(r.shape),u=ht(i.shape),h=gr(r.shape,l,o,1,a),d=h.strideDepth,p=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,x=h.filterWidth,y=new De(h.filterShape,"float32"),w=y.values,[b,C,_,I]=y.strides,v=e.data.get(i.dataId).values,[k,T,D,P]=u,B=e.data.get(r.dataId).values,[V,L,z,H]=c,G=h.padInfo.front,X=h.padInfo.left,q=h.padInfo.top;for(let K=0;K<m;++K){const Z=Math.max(0,Math.ceil((G-K)/d)),J=Math.min(h.outDepth,(h.inDepth+G-K)/d),nt=K*b;for(let Q=0;Q<g;++Q){const it=Math.max(0,Math.ceil((q-Q)/p)),ut=Math.min(h.outHeight,(h.inHeight+q-Q)/p),xt=Q*C+nt;for(let mt=0;mt<x;++mt){const St=Math.max(0,Math.ceil((X-mt)/f)),It=Math.min(h.outWidth,(h.inWidth+X-mt)/f),Ot=mt*_+xt;for(let Ht=0;Ht<h.inChannels;++Ht){const ae=Ht*I+Ot;for(let Xt=0;Xt<h.outChannels;++Xt){let zt=0;for(let re=0;re<h.batchSize;++re){const te=re*V,Is=re*k;for(let Ee=Z;Ee<J;++Ee){const pn=(K+Ee*d-G)*L+te,Sr=Ee*T+Is;for(let Ln=it;Ln<ut;++Ln){const Vs=(Q+Ln*p-q)*z+pn,zs=Ln*D+Sr;for(let Us=St;Us<It;++Us){const yh=(mt+Us*f-X)*H+Vs,bh=Us*P+zs;zt+=B[yh+Ht]*v[bh+Xt]}}}}w[ae+Xt]=zt}}}}}return e.makeTensorInfo(y.shape,y.dtype,y.values)}const iL={kernelName:ap,backendName:"cpu",kernelFunc:rL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oL(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,filter:i}=t,{pad:o,strides:a,inputShape:l}=s;at([r],"conv3dBackpropInputV2");const c=ht(r.shape),u=ht(i.shape),h=gr(l,i.shape,a,1,o),d=new De(h.inShape,"float32"),p=d.values,[f,m,g,x]=d.strides,y=e.data.get(r.dataId).values,[w,b,C,_]=c,I=e.data.get(i.dataId).values,[v,k,T,D]=u,{batchSize:P,filterDepth:B,filterHeight:V,filterWidth:L,inChannels:z,inDepth:H,inHeight:G,inWidth:X,outChannels:q,outDepth:K,outHeight:Z,outWidth:J,strideDepth:nt,strideHeight:Q,strideWidth:it}=h,ut=B-1-h.padInfo.front,xt=V-1-h.padInfo.top,mt=L-1-h.padInfo.left;for(let St=0;St<P;++St)for(let It=0;It<z;++It)for(let Ot=0;Ot<H;++Ot){const Ht=Ot-ut,ae=Math.max(0,Math.ceil(Ht/nt)),Xt=Math.min(K,(B+Ht)/nt);for(let zt=0;zt<G;++zt){const re=zt-xt,te=Math.max(0,Math.ceil(re/Q)),Is=Math.min(Z,(V+re)/Q);for(let Ee=0;Ee<X;++Ee){const Ls=Ee-mt,pn=Math.max(0,Math.ceil(Ls/it)),Sr=Math.min(J,(L+Ls)/it);let Ln=0;for(let vs=ae;vs<Xt;++vs){const Vs=vs*nt-Ht;for(let zs=te;zs<Is;++zs){const Us=zs*Q-re;for(let bo=pn;bo<Sr;++bo){const yh=bo*it-Ls,bh=w*St+b*vs+C*zs+_*bo,xI=v*(B-1-Vs)+k*(V-1-Us)+T*(L-1-yh)+D*It;for(let kl=0;kl<q;++kl){const yI=y[bh+kl],bI=I[xI+kl];Ln+=yI*bI}}}}p[f*St+m*Ot+g*zt+x*Ee+It]=Ln}}}return e.makeTensorInfo(d.shape,d.dtype,d.values)}const aL={kernelName:lp,backendName:"cpu",kernelFunc:oL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lL=Vt(ba,n=>Math.cos(n)),cL={kernelName:ba,backendName:"cpu",kernelFunc:lL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uL=Vt(wa,n=>Math.cosh(n)),hL={kernelName:wa,backendName:"cpu",kernelFunc:uL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dL(n){const{inputs:t,backend:e,attrs:s}=n,{image:r,boxes:i,boxInd:o}=t,{cropSize:a,method:l,extrapolationValue:c}=s,[u,h,d,p]=r.shape,f=i.shape[0],[m,g]=a,x=kt([f,m,g,p],"float32"),y=e.data.get(i.dataId).values,w=e.data.get(o.dataId).values,b=e.data.get(r.dataId).values,C=ht(r.shape),_=ht(x.shape);for(let I=0;I<f;I++){const v=I*4,k=y[v],T=y[v+1],D=y[v+2],P=y[v+3],B=w[I];if(B>=u)continue;const V=m>1?(D-k)*(h-1)/(m-1):0,L=g>1?(P-T)*(d-1)/(g-1):0;for(let z=0;z<m;z++){const H=m>1?k*(h-1)+z*V:.5*(k+D)*(h-1);if(H<0||H>h-1){for(let G=0;G<g;G++)for(let X=0;X<p;X++){const q=X+G*_[2]+z*_[1]+I*_[0];x.values[q]=c}continue}if(l==="bilinear"){const G=Math.floor(H),X=Math.ceil(H),q=H-G;for(let K=0;K<g;K++){const Z=g>1?T*(d-1)+K*L:.5*(T+P)*(d-1);if(Z<0||Z>d-1){for(let it=0;it<p;it++){const ut=it+K*_[2]+z*_[1]+I*_[0];x.values[ut]=c}continue}const J=Math.floor(Z),nt=Math.ceil(Z),Q=Z-J;for(let it=0;it<p;it++){let ut=it+J*C[2]+G*C[1]+B*C[0];const xt=b[ut];ut=it+nt*C[2]+G*C[1]+B*C[0];const mt=b[ut];ut=it+J*C[2]+X*C[1]+B*C[0];const St=b[ut];ut=it+nt*C[2]+X*C[1]+B*C[0];const It=b[ut],Ot=xt+(mt-xt)*Q,Ht=St+(It-St)*Q;ut=it+K*_[2]+z*_[1]+I*_[0],x.values[ut]=Ot+(Ht-Ot)*q}}}else for(let G=0;G<g;++G){const X=g>1?T*(d-1)+G*L:.5*(T+P)*(d-1);if(X<0||X>d-1){for(let Z=0;Z<p;Z++){const J=Z+G*_[2]+z*_[1]+I*_[0];x.values[J]=c}continue}const q=Math.round(X),K=Math.round(H);for(let Z=0;Z<p;Z++){const J=Z+q*C[2]+K*C[1]+B*C[0],nt=Z+G*_[2]+z*_[1]+I*_[0];x.values[nt]=b[J]}}}}return e.makeTensorInfo(x.shape,x.dtype,x.values)}const pL={kernelName:up,backendName:"cpu",kernelFunc:dL};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fL(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:i,exclusive:o,reverse:a}=s;at(r,"cumprod");const l=oe([i],r.shape.length);let c=r;l!=null&&(c=en({inputs:{x:r},backend:e,attrs:{perm:l}}));const u=he(1,r.shape.length)[0];if(u!==c.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${c.shape.length-1} but got axis=${u}`);const h=cn(c.dtype,"int32"),d=Kd(W(c.shape),h),p=e.data.get(c.dataId).values,f=c.shape[c.shape.length-1],m=a?(x,y)=>x+f-y-1:(x,y)=>x+y;for(let x=0;x<p.length;x+=f)for(let y=0;y<f;y++){const w=m(x,y);if(y===0)d[w]=o?1:p[w];else{const b=m(x,y-1);d[w]=o?p[b]*d[b]:p[w]*d[b]}}const g=e.makeTensorInfo(c.shape,h,d);if(l!=null){const x=mr(l),y=en({inputs:{x:g},backend:e,attrs:{perm:x}});return e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(c),y}return g}const gL={kernelName:cp,backendName:"cpu",kernelFunc:fL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mL(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:i,exclusive:o,reverse:a}=s;at(r,"cumsum");const l=oe([i],r.shape.length);let c=r;l!=null&&(c=en({inputs:{x:r},backend:e,attrs:{perm:l}}));const u=he(1,r.shape.length)[0];if(u!==c.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${c.shape.length-1} but got axis=${u}`);const h=cn(c.dtype,"int32"),d=Be(W(c.shape),h),p=e.data.get(c.dataId).values,f=c.shape[c.shape.length-1],m=a?(x,y)=>x+f-y-1:(x,y)=>x+y;for(let x=0;x<p.length;x+=f)for(let y=0;y<f;y++){const w=m(x,y);if(y===0)d[w]=o?0:p[w];else{const b=m(x,y-1);d[w]=o?p[b]+d[b]:p[w]+d[b]}}const g=e.makeTensorInfo(c.shape,h,d);if(l!=null){const x=mr(l),y=en({inputs:{x:g},backend:e,attrs:{perm:x}});return e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(c),y}return g}const xL={kernelName:tu,backendName:"cpu",kernelFunc:mL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yL(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,weights:i}=t,{size:o,binaryOutput:a}=s;if(r.shape.length===1){const l=e.data.get(r.dataId).values,c=e.data.get(i.dataId).values,u=Cg(l,c,i.dtype,i.shape,o);return e.makeTensorInfo([o],i.dtype,u)}else if(r.shape.length===2){const l=e.bufferSync(r),c=e.bufferSync(i),u=f_(l,c,o,a);return e.makeTensorInfo(u.shape,i.dtype,u.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}const bL={kernelName:hp,backendName:"cpu",kernelFunc:yL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wL(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{blockSize:i,dataFormat:o}=s;S(o==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${o}`);const a=r.shape[0],l=r.shape[1],c=r.shape[2],u=r.shape[3],h=l*i,d=c*i,p=u/(i*i),f=e.data.get(r.dataId).values,m=new Float32Array(a*h*d*p);let g=0;for(let x=0;x<a;++x)for(let y=0;y<h;++y){const w=Math.floor(y/i),b=y%i;for(let C=0;C<d;++C){const _=Math.floor(C/i),I=C%i,v=(b*i+I)*p;for(let k=0;k<p;++k){const D=k+v+u*(_+c*(w+l*x));m[g++]=f[D]}}}return e.makeTensorInfo([a,h,d,p],r.dtype,m)}const CL={kernelName:dp,backendName:"cpu",kernelFunc:wL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fS(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:i}=t,{strides:o,pad:a,dilations:l,dimRoundingMode:c}=s;at([r,i],"depthwiseConv2DNative");const u=ht(r.shape),h=ht(i.shape);let d=l;d==null&&(d=[1,1]),S(Ve(o,d),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${d}'`);const p=Ae(r.shape,i.shape,o,d,a,c,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:x,padInfo:y}=p,w=y.left,b=y.top,C=p.outChannels/p.inChannels,_=new De(p.outShape,r.dtype),I=e.data.get(r.dataId).values,v=e.data.get(i.dataId).values,k=_.values;for(let T=0;T<p.batchSize;++T){const D=T*u[0],P=T*_.strides[0];for(let B=0;B<p.outHeight;++B){const V=P+B*_.strides[1],L=B*p.strideHeight-b;for(let z=0;z<f;++z){const H=L+z*g;if(H<0||H>=p.inHeight)continue;const G=z*h[0],X=D+H*u[1];for(let q=0;q<p.outWidth;++q){const K=V+q*_.strides[2],Z=q*p.strideWidth-w;for(let J=0;J<m;++J){const nt=Z+J*x;if(nt<0||nt>=p.inWidth)continue;const Q=G+J*h[1],it=X+nt*p.inChannels;let ut=K,xt=Q;for(let mt=0;mt<p.inChannels;++mt){const St=I[it+mt];for(let It=0;It<C;++It)k[ut+It]+=St*v[xt+It];ut+=C,xt+=C}}}}}}return e.makeTensorInfo(_.shape,_.dtype,_.values)}const _L={kernelName:eu,backendName:"cpu",kernelFunc:fS};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SL(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,dy:i}=t,{strides:o,dilations:a,pad:l,dimRoundingMode:c,filterShape:u}=s;at([r,i],"depthwiseConv2dNativeBackpropFilter");const h=Ae(r.shape,u,o,a,l,c,!0),{strideHeight:d,strideWidth:p,filterHeight:f,filterWidth:m}=h,g=new De(h.filterShape,"float32"),x=h.padInfo.left,y=h.padInfo.top,w=h.outChannels/h.inChannels,b=e.data.get(r.dataId).values,C=new De(r.shape,r.dtype,b),_=e.data.get(i.dataId).values,I=new De(i.shape,i.dtype,_);for(let v=0;v<f;++v){const k=Math.max(0,Math.ceil((y-v)/d)),T=Math.min(h.outHeight,(h.inHeight+y-v)/d);for(let D=0;D<m;++D){const P=Math.max(0,Math.ceil((x-D)/p)),B=Math.min(h.outWidth,(h.inWidth+x-D)/p);for(let V=0;V<h.outChannels;++V){const L=Math.trunc(V/w),z=V%w;let H=0;for(let G=0;G<h.batchSize;++G)for(let X=k;X<T;++X){const q=v+X*d-y;for(let K=P;K<B;++K){const Z=D+K*p-x;H+=C.get(G,q,Z,L)*I.get(G,X,K,V)}}g.set(H,v,D,L,z)}}}return e.makeTensorInfo(g.shape,g.dtype,g.values)}const IL={kernelName:pp,backendName:"cpu",kernelFunc:SL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vL(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,filter:i}=t,{strides:o,dilations:a,pad:l,dimRoundingMode:c,inputShape:u}=s;at([r,i],"depthwiseConv2DNativeBackpropInput");const h=ht(r.shape),d=ht(i.shape),p=Ae(u,i.shape,o,a,l,c,!0),f=new De(p.inShape,"float32"),m=f.values,[g,x,y]=f.strides,w=e.data.get(r.dataId).values,[b,C,_]=h,I=e.data.get(i.dataId).values,[v,k,T]=d,{batchSize:D,filterHeight:P,filterWidth:B,inChannels:V,inHeight:L,inWidth:z,outChannels:H,outHeight:G,outWidth:X,strideHeight:q,strideWidth:K}=p,Z=P-1-p.padInfo.top,J=B-1-p.padInfo.left,nt=H/V;for(let Q=0;Q<D;++Q)for(let it=0;it<V;++it)for(let ut=0;ut<L;++ut){const xt=ut-Z,mt=Math.max(0,Math.ceil(xt/q)),St=Math.min(G,(P+xt)/q);for(let It=0;It<z;++It){const Ot=It-J,Ht=Math.max(0,Math.ceil(Ot/K)),ae=Math.min(X,(B+Ot)/K);let Xt=0;for(let zt=mt;zt<St;++zt){const re=zt*q-xt;for(let te=Ht;te<ae;++te){const Is=te*K-Ot,Ee=b*Q+C*zt+_*te,Ls=v*(P-1-re)+k*(B-1-Is)+T*it;for(let pn=0;pn<nt;++pn){const Sr=it*nt+pn,Ln=w[Ee+Sr],vs=I[Ls+pn];Xt+=Ln*vs}}}m[g*Q+x*ut+y*It+it]=Xt}}return e.makeTensorInfo(f.shape,f.dtype,f.values)}const kL={kernelName:fp,backendName:"cpu",kernelFunc:vL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $L(n){const{inputs:t,backend:e}=n,{x:s}=t,r=W(s.shape),i=e.data.get(s.dataId).values,o=kt([r,r],s.dtype),a=o.values;for(let c=0;c<i.length;c++)a[c*r+c]=i[c];const l=[...s.shape,...s.shape];return e.makeTensorInfo(l,o.dtype,o.values)}const TL={kernelName:Fb,backendName:"cpu",kernelFunc:$L};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NL={kernelName:nu,backendName:"cpu",kernelFunc:({inputs:n,backend:t,attrs:e})=>{const{x:s,filter:r}=n,{strides:i,pad:o,dilations:a}=e,l=t,c=l.data.get(s.dataId).values,u=s.shape.length,h=l.data.get(r.dataId).values,d=r.shape.length,{batchSize:p,inHeight:f,inWidth:m,inChannels:g,outHeight:x,outWidth:y,padInfo:w,strideHeight:b,strideWidth:C,filterHeight:_,filterWidth:I,dilationHeight:v,dilationWidth:k,outShape:T}=rl(s.shape,r.shape,i,o,"NHWC",a),D=W(T),P=T.length,B=le(s.dtype,D);for(let L=0;L<p;++L)for(let z=0;z<x;++z){const H=z*b-w.top;for(let G=0;G<y;++G){const X=G*C-w.left;for(let q=0;q<g;++q){let K=Number.MIN_SAFE_INTEGER;for(let J=0;J<_;++J){const nt=H+J*v;if(nt>=0&&nt<f)for(let Q=0;Q<I;++Q){const it=X+Q*k;if(it>=0&&it<m){const ut=ds([L,nt,it,q],u,ht(s.shape)),xt=ds([J,Q,q],d,ht(r.shape)),mt=c[ut]+h[xt];mt>K&&(K=mt)}}}const Z=ds([L,z,G,q],P,ht(T));B[Z]=K}}}return{dataId:l.write(ai(B,s.dtype),T,s.dtype),shape:T,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EL={kernelName:sd,backendName:"cpu",kernelFunc:({inputs:n,backend:t,attrs:e})=>{const{x:s,filter:r,dy:i}=n,{strides:o,pad:a,dilations:l}=e,c=t,u=Jn(s.shape,c.data.get(s.dataId).values),h=Jn(r.shape,c.data.get(r.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:m,outHeight:g,outWidth:x,padInfo:y,strideHeight:w,strideWidth:b,filterHeight:C,filterWidth:_,dilationHeight:I,dilationWidth:v,outShape:k}=rl(s.shape,r.shape,o,a,"NHWC",l);S(i.rank===k.length,()=>`Error in ${sd}, dy must have the same rank as output ${k.length}, but got ${i.rank}`);const T=Jn(k,c.data.get(i.dataId).values),D=Eb(r.shape,r.dtype);for(let B=0;B<d;++B)for(let V=0;V<g;++V){const L=V*w-y.top;for(let z=0;z<x;++z){const H=z*b-y.left;for(let G=0;G<m;++G){let X=Number.MIN_SAFE_INTEGER,q=0,K=0;for(let Z=0;Z<C;++Z){const J=L+Z*I;if(J>=0&&J<p)for(let nt=0;nt<_;++nt){const Q=H+nt*v;if(Q>=0&&Q<f){const it=u[B][J][Q][G]+h[Z][nt][G];it>X&&(X=it,q=Z,K=nt)}}}D[q][K][G]+=T[B][V][z][G]}}}return{dataId:c.write(ai(D,s.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RL={kernelName:nd,backendName:"cpu",kernelFunc:({inputs:n,backend:t,attrs:e})=>{const{x:s,filter:r,dy:i}=n,{strides:o,pad:a,dilations:l}=e,c=t,u=Jn(s.shape,c.data.get(s.dataId).values),h=Jn(r.shape,c.data.get(r.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:m,outHeight:g,outWidth:x,padInfo:y,strideHeight:w,strideWidth:b,filterHeight:C,filterWidth:_,dilationHeight:I,dilationWidth:v,outShape:k}=rl(s.shape,r.shape,o,a,"NHWC",l);S(i.rank===k.length,()=>`Error in ${nd}, dy must have the same rank as output ${k.length}, but got ${i.rank}`);const T=Jn(k,c.data.get(i.dataId).values),D=Eb(s.shape,s.dtype);for(let B=0;B<d;++B)for(let V=0;V<g;++V){const L=V*w-y.top;for(let z=0;z<x;++z){const H=z*b-y.left;for(let G=0;G<m;++G){let X=Number.MIN_SAFE_INTEGER,q=L<0?0:L,K=H<0?0:H;for(let Z=0;Z<C;++Z){const J=L+Z*I;if(J>=0&&J<p)for(let nt=0;nt<_;++nt){const Q=H+nt*v;if(Q>=0&&Q<f){const it=u[B][J][Q][G]+h[Z][nt][G];it>X&&(X=it,q=J,K=Q)}}}D[B][q][K][G]+=T[B][V][z][G]}}}return{dataId:c.write(ai(D,s.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DL(n){const{inputs:t,backend:e,attrs:s}=n,{image:r}=t,{canvas:i,options:o}=s,{contextOptions:a,imageOptions:l}=o||{},c=(l==null?void 0:l.alpha)||1,u=(a==null?void 0:a.contextType)||"2d";if(u!=="2d")throw new Error(`Context type ${a.contextType} is not supported by the CPU backend.`);const h=i.getContext(u,(a==null?void 0:a.contextAttributes)||{});if(h==null)throw new Error(`Could not get the context with ${u} type.`);const[d,p]=r.shape.slice(0,2),f=r.shape.length===2?1:r.shape[2],m=e.data.get(r.dataId).values,g=r.dtype==="float32"?255:1,x=new Uint8ClampedArray(p*d*4);for(let w=0;w<d*p;++w){const b=[0,0,0,255*c];for(let _=0;_<f;_++){const I=m[w*f+_];if(r.dtype==="float32"){if(I<0||I>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${I}.`)}else if(r.dtype==="int32"&&(I<0||I>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${I}.`);f===1?(b[0]=I*g,b[1]=I*g,b[2]=I*g):b[_]=I*g}const C=w*4;x[C+0]=Math.round(b[0]),x[C+1]=Math.round(b[1]),x[C+2]=Math.round(b[2]),x[C+3]=Math.round(b[3])}i.width=p,i.height=d;const y=new ImageData(x,p,d);return h.putImageData(y,0,0),r}const AL={kernelName:Gk,backendName:"cpu",kernelFunc:DL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wl(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:i,keepDims:o}=s;at(r,"sum");let a;r.dtype==="bool"?a=hr({inputs:{x:r},backend:e,attrs:{dtype:"int32"}}):a=_s({inputs:{x:r},backend:e});const l=a.shape.length,c=$t(i,a.shape),u=oe(c,l);let h=c,d=a;u!=null&&(d=en({inputs:{x:a},backend:e,attrs:{perm:u}}),h=he(h.length,l)),Fe("sum",h,d.shape.length);const[p,f]=Ne(d.shape,h),m=cn(d.dtype,"int32");let g=Nc(e,p,m);const x=W(f),y=e.data.get(g.dataId).values,w=e.data.get(d.dataId).values;for(let b=0;b<y.length;++b){const C=b*x;let _=0;for(let I=0;I<x;++I)_+=w[C+I];y[b]=_}if(o){const b=xe(g.shape,c),C=g;g=Yt({inputs:{x:g},backend:e,attrs:{shape:b}}),e.disposeIntermediateTensorInfo(C)}return e.disposeIntermediateTensorInfo(a),u!=null&&e.disposeIntermediateTensorInfo(d),g}const FL={kernelName:Mu,backendName:"cpu",kernelFunc:wl};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ML(n){const{inputs:t,backend:e,attrs:s}=n,{equation:r}=s,i=t,{allDims:o,summedDims:a,idDims:l}=Hf(r,i.length);jf(o.length,l,i);const{path:c,steps:u}=qf(a,l),h=u.length;let d=null,p=o.length;const f=[];for(let m=0;m<h;++m){for(const g of u[m]){const{permutationIndices:x,expandDims:y}=Xf(p,l[g]);let w;Kf(x)?w=i[g]:(w=en({inputs:{x:i[g]},backend:e,attrs:{perm:x}}),f.push(w));const b=w.shape.slice();for(let C=0;C<y.length;++C)b.splice(y[C],0,1);Pt(w.shape,b)||(w=Yt({inputs:{x:w},backend:e,attrs:{shape:b}}),f.push(w)),d===null?d=w:(d=dh({inputs:{a:w,b:d},backend:e}),f.push(d))}m<h-1&&(c[m]>=0&&(d=wl({inputs:{x:d},backend:e,attrs:{axis:c[m]-(o.length-p),keepDims:!1}}),f.push(d)),p--)}for(const m of f)m!==d&&e.disposeIntermediateTensorInfo(m);return d}const PL={kernelName:gp,backendName:"cpu",kernelFunc:ML};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OL(n){const{inputs:t,backend:e}=n,{dy:s,y:r}=t;at([s,r],"eluGrad");const i=new Float32Array(W(r.shape)),o=e.data.get(r.dataId).values,a=e.data.get(s.dataId).values;for(let l=0;l<o.length;++l){const c=o[l];c>=0?i[l]=a[l]:i[l]=a[l]*(c+1)}return e.makeTensorInfo(r.shape,"float32",i)}const BL={kernelName:mp,backendName:"cpu",kernelFunc:OL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LL=Bf,VL=Lf,zL=Vf,UL=zf,WL=Uf,GL=Wf,HL=Vt(Sa,n=>{const t=Math.sign(n),e=Math.abs(n),s=1/(1+LL*e);return t*(1-((((GL*s+WL)*s+UL)*s+zL)*s+VL)*s*Math.exp(-e*e))}),XL={kernelName:Sa,backendName:"cpu",kernelFunc:HL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dc(n){const{inputs:t,backend:e,attrs:s}=n,{input:r}=t,{dim:i}=s,o=r.shape.length,a=r.shape.slice();let l=i;return i<0&&(S(-(o+1)<=i,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),l=o+i+1),a.splice(l,0,1),Yt({inputs:{x:r},backend:e,attrs:{shape:a}})}const jL={kernelName:ru,backendName:"cpu",kernelFunc:Dc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qL=pe((n,t)=>n/t),$g=Ie(Ca,qL),Ed={kernelName:Ca,backendName:"cpu",kernelFunc:$g};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gS(n,t,e){const s=n.shape,r=s[0],i=s[1],o=e.data.get(n.dataId),a=o.complexTensorInfos.real,l=o.complexTensorInfos.imag,c=[r,i],u=W(c),h=Oe("float32",u),d=Oe("float32",u);for(let g=0;g<r;g++){const x=si({inputs:{x:a},backend:e,attrs:{begin:[g,0],size:[1,i]}}),y=si({inputs:{x:l},backend:e,attrs:{begin:[g,0],size:[1,i]}}),w=on({inputs:{real:x,imag:y},backend:e}),{real:b,imag:C}=KL(w,t,e),_=As(b,C);for(let I=0;I<i;I++){const v=Gf(_,I);h[g*i+I]=v.real,d[g*i+I]=v.imag}e.disposeIntermediateTensorInfo(x),e.disposeIntermediateTensorInfo(y),e.disposeIntermediateTensorInfo(w)}const p=e.makeTensorInfo(c,"float32",h),f=e.makeTensorInfo(c,"float32",d),m=on({inputs:{real:p,imag:f},backend:e});return e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(f),m}function KL(n,t,e){const s=W(n.shape),r=e.data.get(n.dataId),i=e.data.get(r.complexTensorInfos.real.dataId).values,o=e.data.get(r.complexTensorInfos.imag.dataId).values;if(YL(s)){const a=Rd(i,o,s,t,e),l=[n.shape[0],n.shape[1]];if(t){const c=e.makeTensorInfo(l,"float32",a.real),u=e.makeTensorInfo(l,"float32",a.imag),h=e.makeTensorInfo([],"float32",pr(s,"float32")),d=_s({inputs:{x:h},backend:e}),p=Ed.kernelFunc({inputs:{a:c,b:h},backend:e}),f=Ed.kernelFunc({inputs:{a:u,b:d},backend:e}),m=e.data.get(p.dataId).values,g=e.data.get(f.dataId).values;return e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(u),e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(f),{real:m,imag:g}}return a}else{const a=As(i,o),l=JL(a,s,t);return Tw(l)}}function YL(n){return(n&n-1)===0}function Rd(n,t,e,s,r){if(e===1)return{real:n,imag:t};const i=As(n,t),o=e/2,a=Nw(i),l=a.real,c=a.imag,u=[l.length],h=r.makeTensorInfo(u,"float32",l),d=r.makeTensorInfo(u,"float32",c),p=on({inputs:{real:h,imag:d},backend:r}),f=Ew(i),m=f.real,g=f.imag,x=[m.length],y=r.makeTensorInfo(x,"float32",m),w=r.makeTensorInfo(x,"float32",g),b=on({inputs:{real:y,imag:w},backend:r}),C=Rd(l,c,o,s,r),_=C.real,I=C.imag,v=[_.length],k=r.makeTensorInfo(v,"float32",_),T=r.makeTensorInfo(v,"float32",I),D=on({inputs:{real:k,imag:T},backend:r}),P=Rd(m,g,o,s,r),B=P.real,V=P.imag,L=[B.length],z=r.makeTensorInfo(L,"float32",B),H=r.makeTensorInfo(L,"float32",V),G=on({inputs:{real:z,imag:H},backend:r}),X=Dw(e,s),q=[X.real.length],K=r.makeTensorInfo(q,"float32",X.real),Z=r.makeTensorInfo(q,"float32",X.imag),J=on({inputs:{real:K,imag:Z},backend:r}),nt=dh({inputs:{a:J,b:G},backend:r}),Q=Ji({inputs:{a:D,b:nt},backend:r}),it=vg({inputs:{a:D,b:nt},backend:r}),ut=ni({inputs:{input:Q},backend:r}),xt=ni({inputs:{input:it},backend:r}),mt=Zi({inputs:{input:Q},backend:r}),St=Zi({inputs:{input:it},backend:r}),It=Qi({inputs:[ut,xt],backend:r,attrs:{axis:0}}),Ot=Qi({inputs:[mt,St],backend:r,attrs:{axis:0}}),Ht=r.data.get(It.dataId).values,ae=r.data.get(Ot.dataId).values;return r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(d),r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(y),r.disposeIntermediateTensorInfo(w),r.disposeIntermediateTensorInfo(b),r.disposeIntermediateTensorInfo(k),r.disposeIntermediateTensorInfo(T),r.disposeIntermediateTensorInfo(D),r.disposeIntermediateTensorInfo(z),r.disposeIntermediateTensorInfo(H),r.disposeIntermediateTensorInfo(G),r.disposeIntermediateTensorInfo(K),r.disposeIntermediateTensorInfo(Z),r.disposeIntermediateTensorInfo(J),r.disposeIntermediateTensorInfo(nt),r.disposeIntermediateTensorInfo(Q),r.disposeIntermediateTensorInfo(it),r.disposeIntermediateTensorInfo(ut),r.disposeIntermediateTensorInfo(mt),r.disposeIntermediateTensorInfo(xt),r.disposeIntermediateTensorInfo(St),r.disposeIntermediateTensorInfo(It),r.disposeIntermediateTensorInfo(Ot),{real:Ht,imag:ae}}function JL(n,t,e){const s=new Float32Array(t*2);for(let r=0;r<t;r++){let i=0,o=0;for(let a=0;a<t;a++){const l=Aw(r*a,t,e),c=Gf(n,a);i+=c.real*l.real-c.imag*l.imag,o+=c.real*l.imag+c.imag*l.real}e&&(i/=t,o/=t),Rw(s,i,o,r)}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZL(n){const{inputs:t,backend:e}=n,{input:s}=t,r=W(s.shape),i=s.shape[s.shape.length-1],o=r/i,a=Yt({inputs:{x:s},backend:e,attrs:{shape:[o,i]}}),l=gS(a,!1,e),c=Yt({inputs:{x:l},backend:e,attrs:{shape:s.shape}});return e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(l),c}const QL={kernelName:xp,backendName:"cpu",kernelFunc:ZL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tg(n){const{backend:t,attrs:e}=n,{shape:s,value:r,dtype:i}=e,o=i||no(r),a=le(o,W(s));return eV(a,r,o),t.makeTensorInfo(s,o,a)}const tV={kernelName:yp,backendName:"cpu",kernelFunc:Tg};function eV(n,t,e){n.fill(t)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nV={kernelName:bp,backendName:"cpu",kernelFunc:({inputs:n,attrs:t,backend:e})=>{const{image:s}=n,r=e,i=Oe(s.dtype,W(s.shape)),[o,a,l,c]=s.shape,u=r.data.get(s.dataId).values;for(let d=0;d<o;d++){const p=d*l*a*c;for(let f=0;f<a;f++){const m=f*(l*c);for(let g=0;g<l;g++){const x=g*c;for(let y=0;y<c;y++){const w=Math.round(l-g-1),b=p+m+x+y;let C=u[b];if(w>=0&&w<l){const _=w*c,I=p+m+_+y;C=u[I]}i[b]=C}}}}return{dataId:r.write(i,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sV(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:i,bias:o,preluActivationWeights:a}=t,{strides:l,pad:c,dataFormat:u,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s;let m=pS({inputs:{x:r,filter:i},backend:e,attrs:{strides:l,pad:c,dataFormat:u,dilations:h,dimRoundingMode:d}});if(o){const g=m;if(u==="NCHW"&&o.shape.length===1&&o.shape[0]!==1){const x=Yt({inputs:{x:o},backend:e,attrs:{shape:[o.shape[0],1,1]}});m=Ji({inputs:{a:m,b:x},backend:e}),e.disposeIntermediateTensorInfo(x)}else m=Ji({inputs:{a:m,b:o},backend:e});e.disposeIntermediateTensorInfo(g)}if(p){const g=m;if(u==="NCHW"&&p==="prelu"&&a.shape.length===1&&a.shape[0]!==1){const x=Yt({inputs:{x:a},backend:e,attrs:{shape:[a.shape[0],1,1]}});m=Rc(e,m,p,x,f),e.disposeIntermediateTensorInfo(x)}else m=Rc(e,m,p,a,f);e.disposeIntermediateTensorInfo(g)}return m}const rV={kernelName:cc,backendName:"cpu",kernelFunc:sV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iV(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:i,bias:o,preluActivationWeights:a}=t,{strides:l,pad:c,dataFormat:u,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s;let m=fS({inputs:{x:r,filter:i},backend:e,attrs:{strides:l,pad:c,dataFormat:u,dilations:h,dimRoundingMode:d}});if(o){const g=m;m=Ji({inputs:{a:m,b:o},backend:e}),e.disposeIntermediateTensorInfo(g)}if(p){const g=m;m=Rc(e,m,p,a,f),e.disposeIntermediateTensorInfo(g)}return m}const oV={kernelName:Qb,backendName:"cpu",kernelFunc:iV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aV(n){const{inputs:t,backend:e}=n,{params:s,indices:r}=t,i=W(s.shape),o=r.shape,a=o[o.length-1],[l,c,u,h]=$f(s,r);if(c===0)return e.makeTensorInfo(l,s.dtype,[]);const d=e.data.get(r.dataId).values,p=e.bufferSync(s),f=v_(d,p,s.dtype,c,a,u,h,s.shape,i);return e.makeTensorInfo(l,s.dtype,f.values)}const lV={kernelName:Mb,backendName:"cpu",kernelFunc:aV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cV(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,indices:i}=t,{axis:o,batchDims:a}=s;at([r,i],"gatherV2");const l=$t(o,r.shape)[0],c=e.data.get(i.dataId).values,u=r.shape[l];for(let b=0;b<c.length;++b){const C=c[b];S(C<=u-1&&C>=0,()=>`GatherV2: the index value ${C} is not in [0, ${u-1}]`)}let h=a;a==null&&(h=0);const d=W(i.shape),p=Jf(r,i,l,h),f=Yt({inputs:{x:r},backend:e,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),m=Yt({inputs:{x:i},backend:e,attrs:{shape:[p.batchSize,d/p.batchSize]}}),g=[p.batchSize,p.outerSize,d/p.batchSize,p.sliceSize],x=e.bufferSync(m),y=e.bufferSync(f),w=k_(y,x,g);return e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(m),e.makeTensorInfo(p.outputShape,w.dtype,w.values)}const uV={kernelName:ou,backendName:"cpu",kernelFunc:cV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hV(n){const{inputs:t,backend:e}=n,{input:s}=t,r=W(s.shape),i=s.shape[s.shape.length-1],o=r/i,a=Yt({inputs:{x:s},backend:e,attrs:{shape:[o,i]}}),l=gS(a,!0,e),c=Yt({inputs:{x:l},backend:e,attrs:{shape:s.shape}});return e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(l),c}const dV={kernelName:wp,backendName:"cpu",kernelFunc:hV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pV=Vt(Ea,n=>Number.isFinite(n)?1:0,"bool"),fV={kernelName:Ea,backendName:"cpu",kernelFunc:pV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gV=Vt(Ra,n=>Math.abs(n)===1/0?1:0,"bool"),mV={kernelName:Ra,backendName:"cpu",kernelFunc:gV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xV=Vt(Da,n=>Number.isNaN(n)?1:0,"bool"),yV={kernelName:Da,backendName:"cpu",kernelFunc:xV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bV(n){const{backend:t,attrs:e}=n,{start:s,stop:r,num:i}=e,o=R_(s,r,i);return t.makeTensorInfo([o.length],"float32",o)}const wV={kernelName:Pb,backendName:"cpu",kernelFunc:bV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CV=Vt(Fa,n=>Math.log1p(n)),_V={kernelName:Fa,backendName:"cpu",kernelFunc:CV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SV=pe((n,t)=>n&&t),IV=Ie(hu,SV,null,"bool"),vV={kernelName:hu,backendName:"cpu",kernelFunc:IV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kV=Vt(du,n=>n?0:1,"bool"),$V={kernelName:du,backendName:"cpu",kernelFunc:kV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TV=pe((n,t)=>n||t),NV=Ie(pu,TV,null,"bool"),EV={kernelName:pu,backendName:"cpu",kernelFunc:NV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RV(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{depthRadius:i,bias:o,alpha:a,beta:l}=s;at(r,"LRN");const c=r.shape[3],u=c-1,h=e.data.get(r.dataId).values,d=W(r.shape),p=new Float32Array(d);function f(m){const g=m%c;let x=m-g+Math.max(0,g-i);const y=m-g+Math.min(g+i,u);let w=0;for(;x<=y;x++){const b=h[x];w+=b*b}return w}for(let m=0;m<d;m++){const g=f(m),x=h[m]*Math.pow(o+a*g,-l);p[m]=x}return e.makeTensorInfo(r.shape,r.dtype,p)}const DV={kernelName:fu,backendName:"cpu",kernelFunc:RV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AV(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,y:i,dy:o}=t,{depthRadius:a,bias:l,alpha:c,beta:u}=s;at(o,"LRNGrad");const h=W(o.shape),d=o.shape[3],p=e.data.get(o.dataId).values,f=e.data.get(r.dataId).values,m=e.data.get(i.dataId).values,g=new Float32Array(h),x=h;for(let y=0;y<x;y++){const w=y%d,b=y-w+Math.max(0,w-a),C=y-w+Math.min(d,w+a+1);let _=0;for(let I=b;I<C;I++)_+=Math.pow(f[I],2);_=c*_+l;for(let I=b;I<C;I++){let v=-2*c*u*f[I]*m[y]/_;y===I&&(v+=Math.pow(_,-u)),v*=p[y],g[I]+=v}}return e.makeTensorInfo(o.shape,r.dtype,g)}const FV={kernelName:_p,backendName:"cpu",kernelFunc:AV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mS(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{reductionIndices:i,keepDims:o}=s,a=e;let l=r.shape;const c=l.length,u=$t(i,l);let h=u;const d=oe(h,c);let p=a.data.get(r.dataId).values;if(d!=null){const b=new Array(c);for(let C=0;C<b.length;C++)b[C]=l[d[C]];p=Sg(p,l,r.dtype,d,b),h=he(h.length,c),l=b}at(r,"max"),Fe("max",h,c);const[f,m]=Ne(l,h),g=W(m),x=A_(p,g,f,r.dtype),y=a.write(x,f,r.dtype);let w=f;return o&&(w=xe(f,u)),{dataId:y,shape:w,dtype:r.dtype}}const MV={kernelName:gu,backendName:"cpu",kernelFunc:mS};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PV(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t;at(r,"maxPool");const{filterSize:i,strides:o,pad:a,dimRoundingMode:l}=s,c=1;S(Ve(o,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`);const u=Pn(r.shape,i,o,c,a,l);let h;if(u.filterWidth===1&&u.filterHeight===1&&Pt(u.inShape,u.outShape))h=_s({inputs:{x:r},backend:e});else{const d=e.data.get(r.dataId).values,p=ht(r.shape),f=kg(d,r.shape,r.dtype,p,u,"max");h=e.makeTensorInfo(u.outShape,r.dtype,f.values)}return h}const OV={kernelName:mu,backendName:"cpu",kernelFunc:PV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BV(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{filterSize:i,strides:o,pad:a,dimRoundingMode:l,dataFormat:c}=s;at(r,"maxPool3d");const u=Ps(r.shape,i,o,1,a,l,c),h=e.data.get(r.dataId).values,d=dS(h,r.shape,r.dtype,ht(r.shape),u,"max");return e.makeTensorInfo(d.shape,"float32",d.values)}const LV={kernelName:xu,backendName:"cpu",kernelFunc:BV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VV(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,input:i}=t,{filterSize:o,strides:a,pad:l,dimRoundingMode:c}=s;at([r,i],"maxPool3DGrad");const u=Ps(i.shape,o,a,1,l,c),h=e.bufferSync(i),d=TB(h,u),p=u.strideDepth,f=u.strideHeight,m=u.strideWidth,g=u.dilationDepth,x=u.dilationHeight,y=u.dilationWidth,w=u.effectiveFilterDepth,b=u.effectiveFilterHeight,C=u.effectiveFilterWidth,_=w-1-u.padInfo.front,I=C-1-u.padInfo.left,v=b-1-u.padInfo.top,k=kt(i.shape,"float32"),T=e.bufferSync(r);for(let D=0;D<u.batchSize;++D)for(let P=0;P<u.inChannels;++P)for(let B=0;B<u.inDepth;++B)for(let V=0;V<u.inHeight;++V)for(let L=0;L<u.inWidth;++L){const z=B-_,H=V-v,G=L-I;let X=0;for(let q=0;q<w;q+=g){const K=(z+q)/p;if(!(K<0||K>=u.outDepth||Math.floor(K)!==K))for(let Z=0;Z<b;Z+=x){const J=(H+Z)/f;if(!(J<0||J>=u.outHeight||Math.floor(J)!==J))for(let nt=0;nt<C;nt+=y){const Q=(G+nt)/m;if(Q<0||Q>=u.outWidth||Math.floor(Q)!==Q)continue;const it=w*b*C-1-d.get(D,K,J,Q,P),ut=q*b*C+Z*C+nt,xt=it===ut?1:0;if(xt===0)continue;const mt=T.get(D,K,J,Q,P);X+=mt*xt}}}k.set(X,D,B,V,L,P)}return e.makeTensorInfo(k.shape,k.dtype,k.values)}const zV={kernelName:Ip,backendName:"cpu",kernelFunc:VV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UV(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,input:i,output:o}=t,a=i;at([i,o],"maxPoolGrad");const{filterSize:l,strides:c,pad:u,dimRoundingMode:h}=s,d=Pn(a.shape,l,c,1,u,h),p=e.data.get(a.dataId).values,f=kt(d.outShape,a.dtype,hS(p,a.shape,a.dtype,d).values),m=d.strideHeight,g=d.strideWidth,x=d.dilationHeight,y=d.dilationWidth,w=d.effectiveFilterHeight,b=d.effectiveFilterWidth,C=b-1-d.padInfo.left,_=w-1-d.padInfo.top,I=kt(a.shape,"float32"),v=e.data.get(r.dataId).values,k=kt(r.shape,"float32",v);for(let T=0;T<d.batchSize;++T)for(let D=0;D<d.inChannels;++D)for(let P=0;P<d.inHeight;++P)for(let B=0;B<d.inWidth;++B){const V=P-_,L=B-C;let z=0;for(let H=0;H<w;H+=x){const G=(V+H)/m;if(!(G<0||G>=d.outHeight||Math.floor(G)!==G))for(let X=0;X<b;X+=y){const q=(L+X)/g;if(q<0||q>=d.outWidth||Math.floor(q)!==q)continue;const K=w*b-1-f.get(T,G,q,D),Z=H*b+X,J=K===Z?1:0;if(J===0)continue;const nt=k.get(T,G,q,D);z+=nt*J}}I.set(z,T,P,B,D)}return e.makeTensorInfo(I.shape,I.dtype,I.values)}const WV={kernelName:Sp,backendName:"cpu",kernelFunc:UV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GV(n,t,e,s,r){const i=ht(t),o=kg(n,t,e,i,r,"max"),a=hS(n,t,e,r,!0,s);return[o.values,a.values]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HV={kernelName:Ob,backendName:"cpu",kernelFunc:({inputs:n,attrs:t,backend:e})=>{const{x:s}=n,{filterSize:r,strides:i,pad:o,includeBatchInIndex:a}=t,l=e;at(s,"MaxPoolWithArgmax");const c=l.data.get(s.dataId).values,u=Pn(s.shape,r,i,[1,1],o),[h,d]=GV(c,s.shape,s.dtype,a,u),p=l.write(h,u.outShape,s.dtype),f=l.write(d,u.outShape,s.dtype);return[{dataId:p,shape:u.outShape,dtype:s.dtype},{dataId:f,shape:u.outShape,dtype:"int32"}]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XV(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:i,keepDims:o}=s,a=$t(i,r.shape),c=Ne(r.shape,a)[1],u=W(c),h=[],d=e.makeTensorInfo([],"float32",new Float32Array([u]));h.push(d);const p=hr({inputs:{x:r},backend:e,attrs:{dtype:"float32"}});h.push(p);const f=$g({inputs:{a:p,b:d},backend:e});h.push(f);const m=wl({inputs:{x:f},backend:e,attrs:{axis:i,keepDims:o}});return h.forEach(g=>e.disposeIntermediateTensorInfo(g)),m}const jV={kernelName:yu,backendName:"cpu",kernelFunc:XV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qV(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:i,keepDims:o}=s;at(r,"min");const a=$t(i,r.shape);let l=a;const c=oe(l,r.shape.length);let u=r;c!=null&&(u=en({inputs:{x:r},backend:e,attrs:{perm:c}}),l=he(l.length,r.shape.length)),Fe("min",l,u.shape.length);const[h,d]=Ne(u.shape,l),p=W(d),f=Be(W(h),u.dtype),m=e.data.get(u.dataId).values;for(let x=0;x<f.length;++x){const y=x*p;let w=m[y];for(let b=0;b<p;++b){const C=m[y+b];(Number.isNaN(C)||C<w)&&(w=C)}f[x]=w}c!=null&&e.disposeIntermediateTensorInfo(u);const g=e.makeTensorInfo(h,u.dtype,f);if(o){const x=xe(h,a),y=Yt({inputs:{x:g},backend:e,attrs:{shape:x}});return e.disposeIntermediateTensorInfo(g),y}return g}const KV={kernelName:bu,backendName:"cpu",kernelFunc:qV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YV(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{paddings:i,mode:o}=s;at(r,"mirrorPad");const a=i.map((w,b)=>w[0]+r.shape[b]+w[1]),l=i.map(w=>w[0]),c=i.map((w,b)=>w[0]+r.shape[b]),u=o==="reflect"?0:1,h=e.data.get(r.dataId).values,d=r.shape.length,p=ht(r.shape),f=W(a),m=a.length,g=ht(a),x=Oe(r.dtype,f);for(let w=0;w<f;w++){let b=so(w,m,g);for(let _=0;_<m;_++)b[_]<l[_]?b[_]=l[_]*2-b[_]-u:b[_]>=c[_]&&(b[_]=(c[_]-1)*2-b[_]+u);b=b.map((_,I)=>_-l[I]);const C=ds(b,d,p);x[w]=h[C]}return{dataId:e.write(x,a,r.dtype),shape:a,dtype:r.dtype}}const JV={kernelName:wu,backendName:"cpu",kernelFunc:YV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZV=pe((n,t)=>{const e=n%t;return n<0&&t<0||n>=0&&t>=0?e:(e+t)%t}),QV=Ie(Oa,ZV),t3={kernelName:Oa,backendName:"cpu",kernelFunc:QV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xS(n){const{inputs:t,backend:e,attrs:s}=n,{logits:r}=t,{dim:i}=s,o=r.shape.length;let a=i;if(a===-1&&(a=o-1),a!==o-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${o} and dim was ${a}`);const l=$t([a],r.shape),c=mS({inputs:{x:r},backend:e,attrs:{reductionIndices:l,keepDims:!1}}),u=xe(c.shape,l),h=Yt({inputs:{x:c},backend:e,attrs:{shape:u}}),d=vg({inputs:{a:r,b:h},backend:e}),p=C_({inputs:{x:d},backend:e}),f=wl({inputs:{x:p},backend:e,attrs:{axis:l,keepDims:!1}}),m=Yt({inputs:{x:f},backend:e,attrs:{shape:u}}),g=$g({inputs:{a:p,b:m},backend:e});return e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(m),g}const e3={kernelName:Bu,backendName:"cpu",kernelFunc:xS};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n3(n){const{inputs:t,backend:e,attrs:s}=n,{logits:r}=t,{numSamples:i,seed:o,normalized:a}=s;at(r,"multinomial");const l=a?r:xS({inputs:{logits:r},backend:e,attrs:{dim:-1}}),c=l.shape[0],u=l.shape[1],h=e.data.get(l.dataId).values,d=[c,i],p=Be(W(d),"int32");for(let f=0;f<c;++f){const m=f*u,g=new Float32Array(u-1);g[0]=h[m];for(let w=1;w<g.length;++w)g[w]=g[w-1]+h[m+w];const x=df.alea(o.toString()),y=f*i;for(let w=0;w<i;++w){const b=x();p[y+w]=g.length;for(let C=0;C<g.length;C++)if(b<g[C]){p[y+w]=C;break}}}return a||e.disposeIntermediateTensorInfo(l),e.makeTensorInfo(d,"int32",p)}const s3={kernelName:Bb,backendName:"cpu",kernelFunc:n3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const r3=Cf;function i3(n){const{inputs:t,backend:e,attrs:s}=n,{boxes:r,scores:i}=t,{maxOutputSize:o,iouThreshold:a,scoreThreshold:l}=s;at(r,"NonMaxSuppression");const c=e.data.get(r.dataId).values,u=e.data.get(i.dataId).values,{selectedIndices:h}=r3(c,u,o,a,l);return e.makeTensorInfo([h.length],"int32",new Int32Array(h))}const o3={kernelName:vp,backendName:"cpu",kernelFunc:i3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const a3=_f;function l3(n){const{inputs:t,backend:e,attrs:s}=n,{boxes:r,scores:i}=t,{maxOutputSize:o,iouThreshold:a,scoreThreshold:l,padToMaxOutputSize:c}=s;at(r,"NonMaxSuppressionPadded");const u=e.data.get(r.dataId).values,h=e.data.get(i.dataId).values,{selectedIndices:d,validOutputs:p}=a3(u,h,o,a,l,c);return[e.makeTensorInfo([d.length],"int32",new Int32Array(d)),e.makeTensorInfo([],"int32",new Int32Array([p]))]}const c3={kernelName:kp,backendName:"cpu",kernelFunc:l3};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const u3=Sf;function h3(n){const{inputs:t,backend:e,attrs:s}=n,{boxes:r,scores:i}=t,{maxOutputSize:o,iouThreshold:a,scoreThreshold:l,softNmsSigma:c}=s;at(r,"NonMaxSuppressionWithScore");const u=e.data.get(r.dataId).values,h=e.data.get(i.dataId).values,d=o,p=a,f=l,m=c,{selectedIndices:g,selectedScores:x}=u3(u,h,d,p,f,m);return[e.makeTensorInfo([g.length],"int32",new Int32Array(g)),e.makeTensorInfo([x.length],"float32",new Float32Array(x))]}const d3={kernelName:$p,backendName:"cpu",kernelFunc:h3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p3(n){const{inputs:t,backend:e,attrs:s}=n,{indices:r}=t,{dtype:i,depth:o,onValue:a,offValue:l}=s;at(r,"oneHot");const c=W(r.shape),u=new Float32Array(c*o);u.fill(l);const h=e.data.get(r.dataId).values;for(let d=0;d<c;++d)h[d]>=0&&h[d]<o&&(u[d*o+h[d]]=a);return e.makeTensorInfo([...r.shape,o],i,u)}const f3={kernelName:Iu,backendName:"cpu",kernelFunc:p3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ac(n){const{inputs:t,backend:e}=n,{x:s}=t;if(s.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(s.dtype==="complex64"){const r=ni({inputs:{input:s},backend:e}),i=Ac({inputs:{x:r},backend:e}),o=Zi({inputs:{input:s},backend:e}),a=Ac({inputs:{x:o},backend:e}),l=on({inputs:{real:i,imag:a},backend:e});return e.disposeIntermediateTensorInfo(r),e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(a),l}else return Tg({backend:e,attrs:{shape:s.shape,value:0,dtype:s.dtype}})}const g3={kernelName:zu,backendName:"cpu",kernelFunc:Ac};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yS(n){const{inputs:t,backend:e}=n,{x:s}=t;if(s.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(s.dtype==="complex64"){const r=ni({inputs:{input:s},backend:e}),i=yS({inputs:{x:r},backend:e}),o=Zi({inputs:{input:s},backend:e}),a=Ac({inputs:{x:o},backend:e}),l=on({inputs:{real:i,imag:a},backend:e});return e.disposeIntermediateTensorInfo(r),e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(a),l}else return Tg({backend:e,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}const m3={kernelName:Su,backendName:"cpu",kernelFunc:yS};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bS(n){const{inputs:t,backend:e,attrs:s}=n,{axis:r}=s;if(t.length===1)return Dc({inputs:{input:t[0]},backend:e,attrs:{dim:r}});const i=t[0].shape,o=t[0].dtype;t.forEach(u=>{qd(i,u.shape,"All tensors passed to stack must have matching shapes"),S(o===u.dtype,()=>"All tensors passed to stack must have matching dtypes")});const a=[],l=t.map(u=>{const h=Dc({inputs:{input:u},backend:e,attrs:{dim:r}});return a.push(h),h}),c=Qi({inputs:l,backend:e,attrs:{axis:r}});return a.forEach(u=>e.disposeIntermediateTensorInfo(u)),c}const x3={kernelName:vu,backendName:"cpu",kernelFunc:bS};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y3(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{paddings:i,constantValue:o}=s;at(r,"pad");const a=i.map((y,w)=>y[0]+r.shape[w]+y[1]),l=i.map(y=>y[0]),c=e.data.get(r.dataId).values,u=W(r.shape),h=r.shape.length,d=ht(r.shape),p=W(a),f=a.length,m=ht(a),g=Oe(r.dtype,p);o!==0&&g.fill(o);for(let y=0;y<u;y++){const b=so(y,h,d).map((_,I)=>_+l[I]),C=ds(b,f,m);g[C]=c[y]}return{dataId:e.write(g,a,r.dtype),shape:a,dtype:r.dtype}}const wS={kernelName:ku,backendName:"cpu",kernelFunc:y3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const b3=pe((n,t)=>Math.pow(n,t)),w3=Ie(La,b3),C3={kernelName:La,backendName:"cpu",kernelFunc:w3};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _3(n){const{inputs:t,backend:e,attrs:s}=n,{paramsNestedSplits:r,paramsDenseValues:i,indices:o}=t,a=r.map(g=>e.data.get(g.dataId).values),l=r.map(g=>g.shape),c=e.data.get(i.dataId).values,u=e.data.get(o.dataId).values,[h,d,p]=L_(a,l,c,i.shape,i.dtype,u,o.shape),f=h.map(g=>e.makeTensorInfo([g.length],"int32",g)),m=e.makeTensorInfo(p,i.dtype,d);return f.concat([m])}const S3={kernelName:Lb,backendName:"cpu",kernelFunc:_3};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I3(n){const{inputs:t,backend:e}=n,{starts:s,limits:r,deltas:i}=t,o=e.data.get(s.dataId).values,a=e.data.get(r.dataId).values,l=e.data.get(i.dataId).values,[c,u]=V_(o,s.shape,s.dtype,a,r.shape,l,i.shape),h=e.makeTensorInfo([c.length],"int32",c),d=e.makeTensorInfo([u.length],s.dtype,u);return[h,d]}const v3={kernelName:Vb,backendName:"cpu",kernelFunc:I3};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k3(n){const{inputs:t,backend:e,attrs:s}=n,{shape:r,values:i,defaultValue:o,rowPartitionTensors:a}=t,{rowPartitionTypes:l}=s,c=e.data.get(r.dataId).values,u=e.data.get(i.dataId).values,h=e.data.get(o.dataId).values,d=a.map(g=>e.data.get(g.dataId).values),p=a.map(g=>g.shape),[f,m]=z_(c,r.shape,u,i.shape,i.dtype,h,o.shape,d,p,l);return e.makeTensorInfo(f,i.dtype,m)}const $3={kernelName:zb,backendName:"cpu",kernelFunc:k3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T3(n){const{backend:t,attrs:e}=n,{start:s,stop:r,dtype:i,step:o}=e,a=U_(s,r,o,i);return t.makeTensorInfo([a.length],i,a)}const N3={kernelName:Tp,backendName:"cpu",kernelFunc:T3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const E3=Vt(Va,n=>1/n),R3={kernelName:Va,backendName:"cpu",kernelFunc:E3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D3(n){const{inputs:t,backend:e,attrs:s}=n,{images:r}=t,{alignCorners:i,halfPixelCenters:o,size:a}=s;at(r,"resizeBilinear");const l=ht(r.shape),[c,u]=a,[h,d,p,f]=r.shape,m=e.data.get(r.dataId).values,g=new Float32Array(W([h,c,u,f])),x=[i&&c>1?d-1:d,i&&u>1?p-1:p],y=[i&&c>1?c-1:c,i&&u>1?u-1:u];let w=0;const b=x[0]/y[0],C=x[1]/y[1];for(let _=0;_<h;_++)for(let I=0;I<c;I++){let v;o?v=b*(I+.5)-.5:v=b*I;const k=Math.max(0,Math.floor(v)),T=v-k,D=Math.min(d-1,Math.ceil(v)),P=_*l[0]+k*l[1],B=_*l[0]+D*l[1];for(let V=0;V<u;V++){let L;o?L=C*(V+.5)-.5:L=C*V;const z=Math.max(0,Math.floor(L)),H=L-z,G=Math.min(p-1,Math.ceil(L)),X=P+z*l[2],q=B+z*l[2],K=P+G*l[2],Z=B+G*l[2];for(let J=0;J<f;J++){const nt=m[X+J],Q=m[q+J],it=m[K+J],ut=m[Z+J],xt=nt+(it-nt)*H,mt=Q+(ut-Q)*H,St=xt+(mt-xt)*T;g[w++]=St}}}return e.makeTensorInfo([h,c,u,f],"float32",g)}const A3={kernelName:Ru,backendName:"cpu",kernelFunc:D3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F3(n){const{inputs:t,backend:e,attrs:s}=n,{images:r,dy:i}=t,{alignCorners:o}=s;at([i,r],"resizeBilinearGrad");const a=ht(r.shape),[l,c,u,h]=r.shape,[,d,p]=i.shape,f=new Float32Array(l*c*u*h),m=[o&&d>1?c-1:c,o&&p>1?u-1:u],g=[o&&d>1?d-1:d,o&&p>1?p-1:p],x=m[0]/g[0],y=m[1]/g[1],w=e.data.get(i.dataId).values;let b=0;for(let C=0;C<l;C++){const _=C*a[0];for(let I=0;I<d;I++){const v=I*x,k=Math.floor(v),T=Math.min(Math.ceil(v),c-1),D=_+k*a[1],P=_+T*a[1],B=v-k,V=1-B;for(let L=0;L<p;L++){const z=L*y,H=Math.floor(z),G=Math.min(Math.ceil(z),u-1),X=z-H,q=1-X,K=D+H*a[2],Z=D+G*a[2],J=P+H*a[2],nt=P+G*a[2],Q=V*q,it=V*X,ut=B*q,xt=B*X;for(let mt=0;mt<h;mt++){const St=w[b++];f[K+mt]+=St*Q,f[Z+mt]+=St*it,f[J+mt]+=St*ut,f[nt+mt]+=St*xt}}}}return e.makeTensorInfo([l,u,c,h],"float32",f)}const M3={kernelName:Rp,backendName:"cpu",kernelFunc:F3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P3(n){const{inputs:t,backend:e,attrs:s}=n,{images:r}=t,{alignCorners:i,halfPixelCenters:o,size:a}=s;at(r,"resizeNearestNeighbor");const l=ht(r.shape),[c,u]=a,[h,d,p,f]=r.shape,m=e.data.get(r.dataId).values,g=new Float32Array(h*c*u*f),x=[i&&c>1?d-1:d,i&&u>1?p-1:p],y=[i&&c>1?c-1:c,i&&u>1?u-1:u],w=x[0]/y[0],b=x[1]/y[1];let C=0;for(let _=0;_<h;_++){const I=_*l[0];for(let v=0;v<c;v++){const k=o?w*(v+.5):w*v;let T=Math.min(d-1,i?Math.round(k):Math.floor(k));o&&(T=Math.max(0,T));const D=I+T*l[1];for(let P=0;P<u;P++){const B=o?b*(P+.5):b*P;let V=Math.min(p-1,i?Math.round(B):Math.floor(B));o&&(V=Math.max(0,V));const L=D+V*l[2];for(let z=0;z<f;z++){const H=m[L+z];g[C++]=H}}}}return e.makeTensorInfo([h,c,u,f],r.dtype,g)}const O3={kernelName:Eu,backendName:"cpu",kernelFunc:P3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B3(n){const{inputs:t,backend:e,attrs:s}=n,{images:r,dy:i}=t,{alignCorners:o}=s;at([i,r],"resizeNearestNeighborGrad");const a=ht(r.shape),l=ht(i.shape),[c,u,h,d]=r.shape,[,p,f]=i.shape,m=new Float32Array(c*u*h*d),g=e.data.get(i.dataId).values,x=[o&&p>1?u-1:u,o&&f>1?h-1:h],y=[o&&p>1?p-1:p,o&&f>1?f-1:f],w=x[0]/y[0],b=x[1]/y[1],C=1/w,_=1/b,I=Math.ceil(C)*2+2,v=Math.ceil(_)*2+2;for(let k=0;k<c;k++){const T=k*a[0];for(let D=0;D<u;D++){const P=T+D*a[1],B=Math.floor(D*C),V=Math.floor(B-I/2);for(let L=0;L<h;L++){const z=P+L*a[2],H=Math.floor(L*_),G=Math.floor(H-v/2);for(let X=0;X<d;X++){let q=0;for(let K=0;K<I;K++){const Z=K+V;if(Z<0||Z>=p)continue;const J=T+Z*l[1],nt=Z*w,Q=Math.min(u-1,o?Math.round(nt):Math.floor(nt));if(D===Q)for(let it=0;it<v;it++){const ut=it+G;if(ut<0||ut>=f)continue;const xt=J+ut*l[2],mt=ut*b,St=Math.min(h-1,o?Math.round(mt):Math.floor(mt));L===St&&(q+=g[xt+X])}}m[z+X]=q}}}}return e.makeTensorInfo(r.shape,r.dtype,m)}const L3={kernelName:Ep,backendName:"cpu",kernelFunc:B3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V3(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{dims:i}=s;at(r,"reverse");const o=r.shape.length,a=$t(i,r.shape);if(o===0)return _s({inputs:{x:r},backend:e});const l=new De(r.shape,r.dtype),c=e.bufferSync(r);for(let u=0;u<l.size;u++){const h=l.indexToLoc(u),d=h.slice();a.forEach(p=>d[p]=r.shape[p]-1-d[p]),l.set(c.get(...d),...h)}return e.makeTensorInfo(l.shape,l.dtype,l.values)}const z3={kernelName:Du,backendName:"cpu",kernelFunc:V3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const U3={kernelName:Bp,backendName:"cpu",kernelFunc:({inputs:n,attrs:t,backend:e})=>{const{image:s}=n,{radians:r,fillValue:i,center:o}=t,a=e,l=Oe(s.dtype,W(s.shape)),[c,u,h,d]=s.shape,[p,f]=Mf(o,u,h),m=255,g=Math.sin(r),x=Math.cos(r),y=a.data.get(s.dataId).values;for(let b=0;b<c;b++){const C=b*h*u*d;for(let _=0;_<u;_++){const I=_*(h*d);for(let v=0;v<h;v++){const k=v*d;for(let T=0;T<d;T++){const D=[c,_,v,T],P=D[2],B=D[1];let V=(P-p)*x-(B-f)*g,L=(P-p)*g+(B-f)*x;V=Math.round(V+p),L=Math.round(L+f);let z=i;if(typeof i!="number"&&(T===3?z=m:z=i[T]),V>=0&&V<h&&L>=0&&L<u){const G=L*(h*d),X=V*d,q=C+G+X+T;z=y[q]}const H=C+I+k+T;l[H]=z}}}}return{dataId:a.write(l,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const W3=Vt(Wa,n=>{const t=Math.floor(n);return n-t<.5?Math.floor(n):n-t>.5?Math.ceil(n):t%2===0?t:t+1}),G3={kernelName:Wa,backendName:"cpu",kernelFunc:W3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H3(n){const{inputs:t,backend:e,attrs:s}=n,{indices:r,updates:i}=t,{shape:o}=s,{sliceRank:a,numUpdates:l,sliceSize:c,strides:u,outputSize:h}=hi(i,r,o),d=!0,p=e.bufferSync(r),f=e.bufferSync(i),m=Br(p,f,o,h,c,l,a,u,0,d);return e.makeTensorInfo(o,m.dtype,m.values)}const X3={kernelName:Ub,backendName:"cpu",kernelFunc:H3};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j3(n,t){let e=0,s=n.length,r=0;for(;e<s;)r=Math.floor((e+s)/2),n[r]<t?e=r+1:s=r;return s}function q3(n,t){let e=0,s=n.length,r=0;for(;e<s;)r=Math.floor((e+s)/2),n[r]<=t?e=r+1:s=r;return s}function K3(n,t,e,s,r,i){const o=le("int32",e*r);for(let a=0;a<e;++a){const l=n.slice(a*s,(a+1)*s),c=a*r;for(let u=0;u<r;++u)o[c+u]=i==="left"?j3(l,t[u+c]):q3(l,t[u+c])}return o}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y3(n){const{inputs:t,backend:e,attrs:s}=n,{sortedSequence:r,values:i}=t,{side:o}=s,a=e.data.get(r.dataId).values,l=e.data.get(i.dataId).values,c=K3(a,l,r.shape[0],r.shape[1],i.shape[1],o);return e.makeTensorInfo(i.shape,"int32",c)}const J3={kernelName:Gb,backendName:"cpu",kernelFunc:Y3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z3(n){const{inputs:t,backend:e}=n,{condition:s,t:r,e:i}=t;at([s,r,i],"select");const o=s.shape.length,a=e.data.get(s.dataId).values,l=e.data.get(r.dataId).values,c=e.data.get(i.dataId).values,u=cn(r.dtype,i.dtype),h=Be(W(r.shape),u);let d=0;const p=o===0||o>1||r.shape.length===1?1:W(r.shape.slice(1));for(let f=0;f<a.length;f++)for(let m=0;m<p;m++)a[f]===1?h[d++]=l[f]:h[d++]=c[f];return e.makeTensorInfo(r.shape,u,h)}const Q3={kernelName:Au,backendName:"cpu",kernelFunc:Z3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tz=Qu,ez=th,nz=Vt(Ha,n=>n>=0?ez*n:tz*(Math.exp(n)-1)),sz={kernelName:Ha,backendName:"cpu",kernelFunc:nz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rz=Vt(qa,n=>n<0?-1:n>0?1:0),iz={kernelName:qa,backendName:"cpu",kernelFunc:rz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oz=Vt(Xa,n=>Math.sin(n)),az={kernelName:Xa,backendName:"cpu",kernelFunc:oz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lz=Vt(ja,n=>Math.sinh(n)),cz={kernelName:ja,backendName:"cpu",kernelFunc:lz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uz=11920928955078125e-23,fy=Math.log(uz)+2,hz=Vt(Ya,n=>{const t=n>-fy,e=n<fy,s=Math.exp(n);let r;return e?r=s:t?r=n:r=Math.log(1+s),r}),dz={kernelName:Ya,backendName:"cpu",kernelFunc:hz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pz(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{blockShape:i,paddings:o}=s;at([r],"spaceToBatchND");const a=W(i),l=[[0,0]];l.push(...o);for(let _=1+i.length;_<r.shape.length;++_)l.push([0,0]);const c=wS.kernelFunc({inputs:{x:r},backend:e,attrs:{paddings:l,constantValue:0}}),u=cl(c.shape,i,a,!1),h=ul(u.length,i.length,!1),d=hl(c.shape,i,a,!1),m=Yt({inputs:{x:c},backend:e,attrs:{shape:u}}),y=en({inputs:{x:m},backend:e,attrs:{perm:h}}),C=Yt({inputs:{x:y},backend:e,attrs:{shape:d}});return e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(y),C}const fz={kernelName:Pu,backendName:"cpu",kernelFunc:pz};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gz(n){const{inputs:t,backend:e}=n,{indices:s,values:r,denseShape:i,defaultValue:o}=t;if(i.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${i.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${s.shape}`);if(r.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${r.shape}`);if(o.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${o.shape}`);const a=e.data.get(s.dataId).values,l=e.data.get(r.dataId).values,c=e.data.get(i.dataId).values,u=e.data.get(o.dataId).values[0],[h,d,p,f,m]=X_(a,s.shape,s.dtype,l,r.dtype,c,u);return[e.makeTensorInfo(d,s.dtype,h),e.makeTensorInfo([d[0]],r.dtype,p),e.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),e.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}const mz={kernelName:Hb,backendName:"cpu",kernelFunc:gz};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xz(n){const{inputs:t,backend:e}=n,{inputIndices:s,inputShape:r,newShape:i}=t;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${s.shape}`);if(r.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${r.shape}`);if(i.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${i.shape}`);const o=Array.from(e.data.get(r.dataId).values),a=e.data.get(s.dataId).values,l=Array.from(e.data.get(i.dataId).values),[c,u,h]=j_(a,s.shape,s.dtype,o,l);return[e.makeTensorInfo(u,s.dtype,c),e.makeTensorInfo([h.length],i.dtype,new Int32Array(h))]}const yz={kernelName:Xb,backendName:"cpu",kernelFunc:xz};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bz(n){const{inputs:t,backend:e}=n,{data:s,indices:r,segmentIds:i}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${r.shape}`);if(i.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${i.shape}`);if(r.shape[0]!==i.shape[0])throw new Error("segmentIds and indices should have same size.");const o=e.data.get(s.dataId).values,a=e.data.get(r.dataId).values,l=e.data.get(i.dataId).values,[c,u]=Ig(o,s.shape,s.dtype,a,l,!0);return e.makeTensorInfo(u,s.dtype,c)}const wz={kernelName:jb,backendName:"cpu",kernelFunc:bz};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cz(n){const{inputs:t,backend:e}=n,{data:s,indices:r,segmentIds:i}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${r.shape}`);if(i.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${i.shape}`);if(r.shape[0]!==i.shape[0])throw new Error("segmentIds and indices should have same size.");const o=e.data.get(s.dataId).values,a=e.data.get(r.dataId).values,l=e.data.get(i.dataId).values,[c,u]=Ig(o,s.shape,s.dtype,a,l);return e.makeTensorInfo(u,s.dtype,c)}const _z={kernelName:qb,backendName:"cpu",kernelFunc:Cz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sz(n){const{inputs:t,backend:e,attrs:s}=n,{sparseIndices:r,sparseValues:i,defaultValue:o}=t,{outputShape:a}=s,{sliceRank:l,numUpdates:c,sliceSize:u,strides:h,outputSize:d}=hi(i,r,a),p=!1,f=e.bufferSync(r);let m;switch(i.dtype){case"bool":{const g=e.bufferSync(i),x=!!e.data.get(o.dataId).values[0];m=Br(f,g,a,d,u,c,l,h,x,p);break}case"float32":{const g=e.bufferSync(i),x=e.data.get(o.dataId).values[0];m=Br(f,g,a,d,u,c,l,h,x,p);break}case"int32":{const g=e.bufferSync(i),x=e.data.get(o.dataId).values[0];m=Br(f,g,a,d,u,c,l,h,x,p);break}case"string":{const g=e.bufferSync(i),x=or(e.data.get(o.dataId).values[0]);m=Br(f,g,a,d,u,c,l,h,x,p);break}default:throw new Error(`Unsupported type ${i.dtype}`)}return e.makeTensorInfo(a,m.dtype,m.values)}const Iz={kernelName:Kb,backendName:"cpu",kernelFunc:Sz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vz(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{numOrSizeSplits:i,axis:o}=s,a=$t(o,r.shape)[0],l=Yf(r,i,a),c=new Array(r.shape.length).fill(0),u=r.shape.slice();return l.map(h=>{const d=[...u];d[a]=h;const p=si({inputs:{x:r},backend:e,attrs:{begin:c,size:d}});return c[a]+=h,p})}const kz={kernelName:Ou,backendName:"cpu",kernelFunc:vz};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $z={kernelName:Dp,backendName:"cpu",kernelFunc:({inputs:n,backend:t})=>{const{x:e}=n,s=t;at(e,"square");const r=s.data.get(e.dataId).values,i=new Float32Array(r.length);for(let a=0;a<r.length;++a){const l=r[a];i[a]=l*l}return{dataId:s.write(i,e.shape,e.dtype),shape:e.shape,dtype:e.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tz=Vt(sl,(n,t)=>{const e=t;return isNaN(n)?NaN:n>0?1:e.alpha}),Nz={kernelName:sl,backendName:"cpu",kernelFunc:Tz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ez(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{begin:i,end:o,strides:a,beginMask:l,endMask:c,ellipsisMask:u,newAxisMask:h,shrinkAxisMask:d}=s;at(r,"stridedSlice");const{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:x,begin:y,end:w,strides:b}=Df(r.shape,i,o,a,l,c,u,h,d);let C;if(m)C=Yt({inputs:{x:r},backend:e,attrs:{shape:f}});else if(g||x){S(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);const _=Nf(y,w,b),I=si({inputs:{x:r},backend:e,attrs:{begin:y,size:_}});C=Yt({inputs:{x:I},backend:e,attrs:{shape:f}}),e.disposeIntermediateTensorInfo(I)}else{const _=e.bufferSync(r),I=Y_(p,_,b,y);C=e.makeTensorInfo(f,I.dtype,I.values)}return C}const Rz={kernelName:Fp,backendName:"cpu",kernelFunc:Ez};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dz(n){const{inputs:t,backend:e,attrs:s}=n,{separator:r,nGramWidths:i,leftPad:o,rightPad:a,padWidth:l,preserveShortSequences:c}=s,{data:u,dataSplits:h}=t,d=e.data.get(u.dataId).values,p=e.data.get(h.dataId).values,[f,m]=J_(d,p,r,i,o,a,l,c);return[e.makeTensorInfo([f.length],"string",f),e.makeTensorInfo(h.shape,"int32",m)]}const Az={kernelName:Yb,backendName:"cpu",kernelFunc:Dz};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fz(n){const{inputs:t,backend:e,attrs:s}=n,{skipEmpty:r}=s,{input:i,delimiter:o}=t;if(i.dtype!=="string")throw new Error("Input must be of datatype string");if(i.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${i.shape}`);if(o.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${o.shape}`);const a=e.data.get(i.dataId).values,l=e.data.get(o.dataId).values[0],[c,u,h]=Z_(a,l,r),d=u.length;return[e.makeTensorInfo([d,2],"int32",c),e.makeTensorInfo([d],"string",u),e.makeTensorInfo([2],"int32",new Int32Array(h))]}const Mz={kernelName:Jb,backendName:"cpu",kernelFunc:Fz};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pz(n){const{inputs:t,backend:e,attrs:s}=n,{numBuckets:r}=s,{input:i}=t;if(i.dtype!=="string")throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const o=e.data.get(i.dataId).values,a=Q_(o,r);return e.makeTensorInfo(i.shape,"int32",a)}const Oz={kernelName:Zb,backendName:"cpu",kernelFunc:Pz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bz=Vt(tl,n=>Math.tan(n)),Lz={kernelName:tl,backendName:"cpu",kernelFunc:Bz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vz=Vt(el,n=>Math.tanh(n)),zz={kernelName:el,backendName:"cpu",kernelFunc:Vz};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uz(n){const{inputs:t,backend:e}=n,{tensor:s,indices:r,updates:i}=t,{sliceRank:o,numUpdates:a,sliceSize:l,strides:c,outputSize:u}=hi(i,r,s.shape),h=!1,d=e.bufferSync(r),p=e.bufferSync(i),f=e.bufferSync(s),m=Br(d,p,s.shape,u,l,a,o,c,f,h);return e.makeTensorInfo(s.shape,m.dtype,m.values)}const Wz={kernelName:Wb,backendName:"cpu",kernelFunc:Uz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gz(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{reps:i}=s;at(r,"tile");const o=eS(e.bufferSync(r),i);return e.makeTensorInfo(o.shape,o.dtype,o.values)}const Hz={kernelName:nl,backendName:"cpu",kernelFunc:Gz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xz(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{k:i,sorted:o}=s;at(r,"topk");const a=e.data.get(r.dataId).values,[l,c]=sS(a,r.shape,r.dtype,i,o);return[e.makeTensorInfo(l.shape,l.dtype,l.values),e.makeTensorInfo(c.shape,c.dtype,c.values)]}const jz={kernelName:Mp,backendName:"cpu",kernelFunc:Xz};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qz(n){const{inputs:t,attrs:e,backend:s}=n,{image:r,transforms:i}=t,{interpolation:o,fillMode:a,fillValue:l,outputShape:c}=e,[u,h,d,p]=r.shape,[f,m]=c??[h,d],g=[u,f,m,p],x=ht(r.shape),y=x[0],w=x[1],b=x[2],C=ht(g),_=C[0],I=C[1],v=C[2],k=Oe(r.dtype,W(g));k.fill(l);const T=s.data.get(r.dataId).values,D=s.data.get(i.dataId).values;for(let B=0;B<u;++B){const V=i.shape[0]===1?D:D.subarray(B*8,B*8+8);for(let L=0;L<f;++L)for(let z=0;z<m;++z)for(let H=0;H<p;++H){let G;const X=V[6]*z+V[7]*L+1;if(X===0)continue;const q=(V[0]*z+V[1]*L+V[2])/X,K=(V[3]*z+V[4]*L+V[5])/X,Z=gy(q,d,a),J=gy(K,h,a);switch(o){case"nearest":G=tU(T,h,d,y,w,b,B,J,Z,H,l);break;case"bilinear":G=eU(T,h,d,y,w,b,B,J,Z,H,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${o}`)}const nt=B*_+L*I+z*v+H;k[nt]=G}return s.makeTensorInfo(g,r.dtype,k)}return{dataId:s.write(k,g,r.dtype),shape:r.shape,dtype:r.dtype}}const Kz={kernelName:Pp,backendName:"cpu",kernelFunc:qz};function gy(n,t,e){switch(e){case"reflect":return Yz(n,t);case"wrap":return Jz(n,t);case"nearest":return Qz(n,t);case"constant":default:return Zz(n)}}function Yz(n,t){let e=n;if(e<0)if(t<=1)e=0;else{const s=2*t;e<s&&(e=s*Math.trunc(-e/s)+e),e=e<-t?e+s:-e-1}else if(e>t-1)if(t<=1)e=0;else{const s=2*t;e-=s*Math.trunc(e/s),e>=t&&(e=s-e-1)}return Gr(0,e,t-1)}function Jz(n,t){let e=n;if(e<0)if(t<=1)e=0;else{const s=t-1;e+=t*(Math.trunc(-e/s)+1)}else if(e>t-1)if(t<=1)e=0;else{const s=t-1;e-=t*Math.trunc(e/s)}return Gr(0,e,t-1)}function Zz(n,t){return n}function Qz(n,t){return Gr(0,n,t-1)}function Do(n,t,e,s,r,i,o,a,l,c,u){const h=o*s+a*r+l*i+c;return 0<=a&&a<t&&0<=l&&l<e?n[h]:u}function tU(n,t,e,s,r,i,o,a,l,c,u){const h=Math.round(a),d=Math.round(l);return Do(n,t,e,s,r,i,o,h,d,c,u)}function eU(n,t,e,s,r,i,o,a,l,c,u){const h=Math.floor(a),d=Math.floor(l),p=h+1,f=d+1,m=(f-l)*Do(n,t,e,s,r,i,o,h,d,c,u)+(l-d)*Do(n,t,e,s,r,i,o,h,f,c,u),g=(f-l)*Do(n,t,e,s,r,i,o,p,d,c,u)+(l-d)*Do(n,t,e,s,r,i,o,p,f,c,u);return(p-a)*m+(a-h)*g}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nU(n){const{inputs:t,attrs:e,backend:s}=n,{axis:r}=e,{x:i}=t;at(i,"unique");const o=s.data.get(i.dataId).values,{outputValues:a,outputShape:l,indices:c}=rS(o,r,i.shape,i.dtype);return[s.makeTensorInfo(l,i.dtype,a),s.makeTensorInfo([c.length],"int32",c)]}const sU={kernelName:Op,backendName:"cpu",kernelFunc:nU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rU(n){const{inputs:t,backend:e,attrs:s}=n,{value:r}=t;let{axis:i}=s;i<0&&(i+=r.shape.length);const o=r.shape.length,a=r.shape[i],l=new Array(o-1);let c=0;for(let p=0;p<o;p++)p!==i&&(l[c++]=r.shape[p]);const u=new Array(o).fill(0),h=r.shape.slice();h[i]=1;const d=new Array(a);for(let p=0;p<d.length;p++){u[i]=p;const f=si({inputs:{x:r},backend:e,attrs:{begin:u,size:h}});d[p]=Yt({inputs:{x:f},backend:e,attrs:{shape:l}}),e.disposeIntermediateTensorInfo(f)}return d}const iU={kernelName:Lu,backendName:"cpu",kernelFunc:rU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oU(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,segmentIds:i}=t,{numSegments:o}=s;at(r,"unsortedSegmentSum");const a=r.shape.length,l=i.shape.length,c=[],u=[],h=a-l;let d=i;for(let f=0;f<h;++f){const m=Dc({inputs:{input:d},backend:e,attrs:{dim:f+1}});d=m,u.push(m)}for(let f=0;f<o;++f){const m=pr(f,"int32"),g=e.makeTensorInfo([],"int32",m),x=b_({inputs:{a:g,b:d},backend:e}),y=hr({inputs:{x},backend:e,attrs:{dtype:"float32"}}),w=dh({inputs:{a:y,b:r},backend:e}),b=wl({inputs:{x:w},backend:e,attrs:{axis:0,keepDims:!1}});c.push(b),u.push(g),u.push(x),u.push(y),u.push(w),u.push(b)}const p=bS({inputs:c,backend:e,attrs:{axis:0}});return u.forEach(f=>e.disposeIntermediateTensorInfo(f)),p}const aU={kernelName:Vu,backendName:"cpu",kernelFunc:oU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lU=[nB,PP,rB,oB,UP,lB,uB,dB,fB,mB,yB,wB,_B,vB,$B,EB,DB,FB,PB,tB,BB,VB,UB,GP,GB,VP,XP,XB,OP,qB,YB,JB,QB,eL,sL,iL,aL,cL,hL,pL,gL,xL,bL,CL,_L,IL,kL,TL,NL,EL,RL,AL,PL,jO,BL,jP,XL,qP,jL,YP,QL,tV,nV,ZP,tO,rV,oV,lV,uV,nO,rO,BP,dV,KB,fV,mV,yV,qO,oO,lO,wV,uO,_V,vV,$V,EV,DV,FV,MV,dO,OV,LV,zV,WV,HV,jV,KV,fO,JV,t3,s3,mO,yO,o3,c3,d3,wO,f3,m3,x3,wS,C3,YO,SO,S3,v3,$3,N3,LP,Ed,R3,JO,ZO,QO,A3,M3,O3,L3,z3,U3,G3,RO,X3,J3,Q3,sz,AO,iz,az,cz,FO,e3,dz,fz,mz,yz,wz,_z,Iz,kz,OO,$z,LO,zO,Nz,Rz,Az,Mz,Oz,HO,FL,Lz,zz,Wz,Hz,jz,Kz,CO,sU,iU,aU,g3];for(const n of lU)t0(n);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ar={},Ll={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function cU(n,t){Ar[n]=t}function ns(n,t){if(!(n in Ar)||t!=null){const s=hU(n,t);if(s!==null)Ar[n]=s;else return console.log("Could not get context for WebGL version",n),null}const e=Ar[n];return e==null||e.isContextLost()?(delete Ar[n],ns(n)):(e.disable(e.DEPTH_TEST),e.disable(e.STENCIL_TEST),e.disable(e.BLEND),e.disable(e.DITHER),e.disable(e.POLYGON_OFFSET_FILL),e.disable(e.SAMPLE_COVERAGE),e.enable(e.SCISSOR_TEST),e.enable(e.CULL_FACE),e.cullFace(e.BACK),Ar[n])}function uU(n){if(!O().getBool("IS_SAFARI")&&typeof OffscreenCanvas<"u"&&n===2)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function hU(n,t){if(n!==1&&n!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const e=t??uU(n);return e.addEventListener("webglcontextlost",s=>{s.preventDefault(),delete Ar[n]},!1),O().getBool("SOFTWARE_WEBGL_ENABLED")&&(Ll.failIfMajorPerformanceCaveat=!1),n===1?e.getContext("webgl",Ll)||e.getContext("experimental-webgl",Ll):e.getContext("webgl2",Ll)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var na;(function(n){n[n.DENSE=0]="DENSE",n[n.SHARED_BATCH=1]="SHARED_BATCH"})(na||(na={}));var yn;(function(n){n[n.RENDER=0]="RENDER",n[n.UPLOAD=1]="UPLOAD",n[n.PIXELS=2]="PIXELS",n[n.DOWNLOAD=3]="DOWNLOAD"})(yn||(yn={}));var Re;(function(n){n[n.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",n[n.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",n[n.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",n[n.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",n[n.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(Re||(Re={}));function Cl(n,t){return[t,n]}function dU(n,t){return n*t}function Vl(n){const t=W(n),e=Math.ceil(t/4);return Zh(e)}function uo(n,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(n/2))]}function pU(n,t){const[e,s]=uo(n,t);return e*s*4}function Ng(n,t){const e=n;let s,r,i,o,a,l,c,u,h,d;return O().getNumber("WEBGL_VERSION")===2?(s=e.R32F,r=e.R16F,i=e.RGBA16F,o=e.RGBA32F,a=e.RED,c=4,u=1,h=e.HALF_FLOAT,d=e.FLOAT,l=e.RGBA8):(s=n.RGBA,r=n.RGBA,i=n.RGBA,o=e.RGBA,a=n.RGBA,c=4,u=4,h=t!=null?t.HALF_FLOAT_OES:null,d=n.FLOAT,l=n.RGBA),{internalFormatFloat:s,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:i,internalFormatPackedFloat:o,textureFormatFloat:a,downloadTextureFormat:l,downloadUnpackNumChannels:c,defaultNumChannels:u,textureTypeHalfFloat:h,textureTypeFloat:d}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function st(n,t){const e=t();return O().getBool("DEBUG")&&fU(n),e}function fU(n){const t=n.getError();if(t!==n.NO_ERROR)throw new Error("WebGL Error: "+yU(n,t))}const gU=596e-10,mU=65504;function xU(n){return!!(O().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||n===0||gU<Math.abs(n)&&Math.abs(n)<mU)}function yU(n,t){switch(t){case n.NO_ERROR:return"NO_ERROR";case n.INVALID_ENUM:return"INVALID_ENUM";case n.INVALID_VALUE:return"INVALID_VALUE";case n.INVALID_OPERATION:return"INVALID_OPERATION";case n.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case n.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case n.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function zl(n,t){return Bs(n,()=>n.getExtension(t),'Extension "'+t+'" not supported on this browser.')}function bU(n,t){const e=Bs(n,()=>n.createShader(n.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(st(n,()=>n.shaderSource(e,t)),st(n,()=>n.compileShader(e)),n.getShaderParameter(e,n.COMPILE_STATUS)===!1)throw console.log(n.getShaderInfoLog(e)),new Error("Failed to compile vertex shader.");return e}function wU(n,t){const e=Bs(n,()=>n.createShader(n.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(st(n,()=>n.shaderSource(e,t)),st(n,()=>n.compileShader(e)),O().get("ENGINE_COMPILE_ONLY"))return e;if(n.getShaderParameter(e,n.COMPILE_STATUS)===!1)throw CS(t,n.getShaderInfoLog(e)),new Error("Failed to compile fragment shader.");return e}const CU=/ERROR: [0-9]+:([0-9]+):/g;function CS(n,t){const e=CU.exec(t);if(e==null){console.log(`Couldn't parse line number in error: ${t}`),console.log(n);return}const s=+e[1],r=n.split(`
`),i=r.length.toString().length+2,o=r.map((h,d)=>Oi((d+1).toString(),i)+h);let a=0;for(let h=0;h<o.length;h++)a=Math.max(o[h].length,a);const l=o.slice(0,s-1),c=o.slice(s-1,s),u=o.slice(s);console.log(l.join(`
`)),console.log(t.split(`
`)[0]),console.log(`%c ${Oi(c[0],a)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(u.join(`
`))}function _U(n){return Bs(n,()=>n.createProgram(),"Unable to create WebGLProgram.")}function SU(n,t){if(st(n,()=>n.linkProgram(t)),!O().get("ENGINE_COMPILE_ONLY")&&n.getProgramParameter(t,n.LINK_STATUS)===!1)throw console.log(n.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function Uh(n,t){if(st(n,()=>n.validateProgram(t)),n.getProgramParameter(t,n.VALIDATE_STATUS)===!1)throw console.log(n.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function IU(n,t){const e=Bs(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return st(n,()=>n.bindBuffer(n.ARRAY_BUFFER,e)),st(n,()=>n.bufferData(n.ARRAY_BUFFER,t,n.STATIC_DRAW)),e}function vU(n,t){const e=Bs(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return st(n,()=>n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,e)),st(n,()=>n.bufferData(n.ELEMENT_ARRAY_BUFFER,t,n.STATIC_DRAW)),e}function kU(n){return Bs(n,()=>n.createTexture(),"Unable to create WebGLTexture.")}function $U(n,t){const e=O().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(n<=0||t<=0){const s=`[${n}x${t}]`;throw new Error("Requested texture size "+s+" is invalid.")}if(n>e||t>e){const s=`[${n}x${t}]`,r=`[${e}x${e}]`;throw new Error("Requested texture size "+s+" greater than WebGL maximum on this browser / GPU "+r+".")}}function TU(n){return Bs(n,()=>n.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function my(n,t,e,s,r,i,o){const a=n.getAttribLocation(t,e);return a===-1?!1:(st(n,()=>n.bindBuffer(n.ARRAY_BUFFER,s)),st(n,()=>n.vertexAttribPointer(a,r,n.FLOAT,!1,i,o)),st(n,()=>n.enableVertexAttribArray(a)),!0)}function NU(n,t,e){FU(n,e),st(n,()=>n.activeTexture(n.TEXTURE0+e)),st(n,()=>n.bindTexture(n.TEXTURE_2D,t))}function EU(n,t,e){return Bs(n,()=>n.getUniformLocation(t,e),'uniform "'+e+'" not present in program.')}function RU(n,t,e){return n.getUniformLocation(t,e)}function DU(n,t,e,s){st(n,()=>NU(n,t,s)),st(n,()=>n.uniform1i(e,s))}function Wh(n,t,e){st(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,e)),st(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,t,0))}function xy(n,t){st(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,t)),st(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,null,0))}function Ul(n){const t=n.checkFramebufferStatus(n.FRAMEBUFFER);if(t!==n.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+AU(n,t))}function AU(n,t){switch(t){case n.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case n.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function Bs(n,t,e){const s=st(n,()=>t());if(s==null)throw new Error(e);return s}function FU(n,t){const e=n.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,s=t+n.TEXTURE0;if(s<n.TEXTURE0||s>e){const r=`[gl.TEXTURE0, gl.TEXTURE${e}]`;throw new Error(`textureUnit must be in ${r}.`)}}function to(n,t=2){return W(n.slice(0,n.length-t))}function eo(n){if(n.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[n.length>1?n[n.length-2]:1,n[n.length-1]]}function Wl(n){let t=[1,1,1];return n.length===0||n.length===1&&n[0]===1||(t=[to(n),...eo(n)]),t}function MU(n,t=!1){let e=O().getNumber("WEBGL_MAX_TEXTURE_SIZE"),s=O().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");s===1/0&&O().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(s=e/2),t&&(e=e*2,s=s*2,n=n.map((a,l)=>l>=n.length-2?jd(n[l]):n[l]),n.length===1&&(n=[2,n[0]])),n.length!==2&&(n=dr(n).newShape);let r=W(n),i=null;n.length<=1&&r<=e?i=[1,r]:n.length===2&&n[0]<=e&&n[1]<=e?i=n:n.length===3&&n[0]*n[1]<=e&&n[2]<=e?i=[n[0]*n[1],n[2]]:n.length===3&&n[0]<=e&&n[1]*n[2]<=e?i=[n[0],n[1]*n[2]]:n.length===4&&n[0]*n[1]*n[2]<=e&&n[3]<=e?i=[n[0]*n[1]*n[2],n[3]]:n.length===4&&n[0]<=e&&n[1]*n[2]*n[3]<=e&&(i=[n[0],n[1]*n[2]*n[3]]);const o=i!=null&&Math.max(...i)>s&&Math.min(...i)<=(t?2:1)&&Math.min(...i)>0;if(i==null||o)if(t){const a=to(n);let l=2,c=2;n.length&&([l,c]=eo(n)),r=a*(l/2)*(c/2),i=Zh(r).map(u=>u*2)}else i=Zh(r);return i}function Gl(n){return n%2===0}function Fc(n,t){if(n=n.slice(-2),t=t.slice(-2),Pt(n,t)||!n.length||!t.length||n[0]===0||n[1]===0||t[0]===0||t[1]===0)return!0;if(n.length!==t.length){const e=n[n.length-1],s=t[t.length-1];if(e===s||Gl(e)&&Gl(s)&&(n[0]===1||t[0]===1))return!0}return n[1]===t[1]&&Gl(n[0])&&Gl(t[0])}let Gh,Hh;function PU(n){if(Gh==null){const t=ns(n);Gh=t.getParameter(t.MAX_TEXTURE_SIZE)}return Gh}function OU(n){if(Hh==null){const t=ns(n);Hh=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,Hh)}function BU(n){if(n===0)return 0;let t;const e=ns(n);return Dn(e,"EXT_disjoint_timer_query_webgl2")&&n===2?t=2:Dn(e,"EXT_disjoint_timer_query")?t=1:t=0,t}function Dn(n,t){return n.getExtension(t)!=null}function yy(n){try{if(ns(n)!=null)return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function LU(n){if(n===0)return!1;const t=ns(n);if(n===1){if(!Dn(t,"OES_texture_float"))return!1}else if(!Dn(t,"EXT_color_buffer_float"))return!1;return Dd(t)}function VU(n){if(n===0)return!1;const t=ns(n);if(n===1){if(!Dn(t,"OES_texture_float")||!Dn(t,"WEBGL_color_buffer_float"))return!1}else{if(Dn(t,"EXT_color_buffer_float"))return Dd(t);const s="EXT_color_buffer_half_float";if(Dn(t,s)){const r=t.getExtension(s);return zU(t,r)}return!1}return Dd(t)}function Dd(n){const t=Ng(n),e=n.createTexture();n.bindTexture(n.TEXTURE_2D,e),n.texImage2D(n.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const i=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,i),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,e,0);const o=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(e),n.deleteFramebuffer(i),o}function zU(n,t){const e=Ng(n,t),s=n.createTexture();n.bindTexture(n.TEXTURE_2D,s),n.texImage2D(n.TEXTURE_2D,0,e.internalFormatHalfFloat,1,1,0,e.textureFormatFloat,e.textureTypeHalfFloat,null);const o=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,o),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,s,0);const a=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(s),n.deleteFramebuffer(o),a}function UU(n){return n!==2?!1:ns(n).fenceSync!=null}function _l(n,t){Array.isArray(n)||(n=[n]),n.forEach(e=>{e!=null&&S(e.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the WebGL backend.`)})}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lt=O();lt.registerFlag("HAS_WEBGL",()=>lt.getNumber("WEBGL_VERSION")>0);lt.registerFlag("WEBGL_VERSION",()=>yy(2)?2:yy(1)?1:0);lt.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);lt.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>lt.get("WEBGL_VERSION")===2);lt.registerFlag("WEBGL_CPU_FORWARD",()=>!0);lt.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);lt.registerFlag("WEBGL_PACK",()=>lt.getBool("HAS_WEBGL"));lt.registerFlag("WEBGL_PACK_NORMALIZATION",()=>lt.getBool("WEBGL_PACK"));lt.registerFlag("WEBGL_PACK_CLIP",()=>lt.getBool("WEBGL_PACK"));lt.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>lt.getBool("WEBGL_PACK"));lt.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>lt.getBool("WEBGL_PACK"));lt.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>lt.getBool("WEBGL_PACK"));lt.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>lt.getBool("WEBGL_PACK"));lt.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>lt.getBool("WEBGL_PACK"));lt.registerFlag("WEBGL_PACK_REDUCE",()=>lt.getBool("WEBGL_PACK"));lt.registerFlag("WEBGL_LAZILY_UNPACK",()=>lt.getBool("WEBGL_PACK"));lt.registerFlag("WEBGL_CONV_IM2COL",()=>lt.getBool("WEBGL_PACK"));lt.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",()=>lt.getBool("WEBGL_PACK"));lt.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>PU(lt.getNumber("WEBGL_VERSION")));lt.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>OU(lt.getNumber("WEBGL_VERSION")));lt.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const n=lt.getNumber("WEBGL_VERSION");return n===0?0:BU(n)});lt.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>lt.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!x0());lt.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>LU(lt.getNumber("WEBGL_VERSION")));lt.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>lt.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:lt.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));lt.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>VU(lt.getNumber("WEBGL_VERSION")));lt.registerFlag("WEBGL_FENCE_API_ENABLED",()=>UU(lt.getNumber("WEBGL_VERSION")));lt.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>lt.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);lt.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,n=>{if(typeof n!="number")throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${n}.`);if(n<0&&n!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${n}.`)});lt.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>x0()?1:-1,n=>{if(typeof n!="number")throw new Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${n}.`);if(n<0&&n!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${n}.`)});lt.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);lt.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);lt.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);lt.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);lt.registerFlag("WEBGL_EXP_CONV",()=>!1);lt.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>lt.getBool("IS_TEST"));lt.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0);lt.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1);lt.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1);lt.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ke(){let n,t,e,s,r,i,o,a,l,c;return O().getNumber("WEBGL_VERSION")===2?(n="#version 300 es",t="in",e="out",s="in",r="texture",i="outputColor",o="out vec4 outputColor;",a=O().getBool("WEBGL2_ISNAN_CUSTOM")?`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `:"",l="",c=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(n="",t="attribute",e="varying",s="varying",r="texture2D",i="gl_FragColor",o="",a=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,l=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,c=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:n,attribute:t,varyingVs:e,varyingFs:s,texture2D:r,output:i,defineOutput:o,defineSpecialNaN:a,defineSpecialInf:l,defineRound:c}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fi(n,t,e="index"){const s=ht(t);return s.map((r,i)=>{const o=`int ${n[i]} = ${e} / ${r}`,a=i===s.length-1?`int ${n[i+1]} = ${e} - ${n[i]} * ${r}`:`index -= ${n[i]} * ${r}`;return`${o}; ${a};`}).join("")}function ph(n,t,e="index"){const s=ht(t);return s.map((r,i)=>{const o=`int ${n[i]} = ${e} / outShapeStrides[${i}]`,a=i===s.length-1?`int ${n[i+1]} = ${e} - ${n[i]} * outShapeStrides[${i}]`:`index -= ${n[i]} * outShapeStrides[${i}]`;return`${o}; ${a};`}).join("")}function WU(n,t){const e=n.length,s=n.map(i=>`${t}[${i}]`),r=new Array(e-1);r[e-2]=s[e-1];for(let i=e-3;i>=0;--i)r[i]=`(${r[i+1]} * ${s[i+1]})`;return r}function GU(n,t,e="index"){const s=n.map((i,o)=>o),r=WU(s,t);return r.map((i,o)=>{const a=`int ${n[o]} = ${e} / ${r[o]}`,l=o===r.length-1?`int ${n[o+1]} = ${e} - ${n[o]} * ${r[o]}`:`index -= ${n[o]} * ${r[o]}`;return`${a}; ${l};`}).join("")}function Eg(n){const t=ht(n).map(e=>e.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;
  }
`}function Rg(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}const _S=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{getBroadcastDims:SS}=RD;function HU(n,t,e){const s=[];if(n.forEach(p=>{const f=W(p.shapeInfo.logicalShape);if(p.shapeInfo.isUniform?s.push(`uniform float ${p.name}${f>1?`[${f}]`:""};`):(s.push(`uniform sampler2D ${p.name};`),s.push(`uniform int offset${p.name};`)),e.enableShapeUniforms){const{uniformShape:m}=Dg(e.packedInputs,p.shapeInfo.logicalShape,p.shapeInfo.texShape);switch(m.length){case 1:s.push(`uniform int ${p.name}Shape;`);break;case 2:s.push(`uniform ivec2 ${p.name}Shape;`);break;case 3:s.push(`uniform ivec3 ${p.name}Shape;`);break;case 4:s.push(`uniform ivec4 ${p.name}Shape;`);break}s.push(`uniform ivec2 ${p.name}TexShape;`)}}),e.enableShapeUniforms){switch(t.logicalShape.length){case 1:s.push("uniform int outShape;");break;case 2:s.push("uniform ivec2 outShape;"),s.push("uniform int outShapeStrides;");break;case 3:s.push("uniform ivec3 outShape;"),s.push("uniform ivec2 outShapeStrides;");break;case 4:s.push("uniform ivec4 outShape;"),s.push("uniform ivec3 outShapeStrides;");break}s.push("uniform ivec2 outTexShape;")}e.customUniforms&&e.customUniforms.forEach(p=>{s.push(`uniform ${p.type} ${p.name}${p.arrayIndex?`[${p.arrayIndex}]`:""};`)});const r=s.join(`
`),i=n.map(p=>XU(p,t,e.packedInputs,e.enableShapeUniforms)).join(`
`),o=t.texShape,a=Ke(),l=KU(a);let c,u,h=ZU(a);return t.isPacked?(c=jU(t.logicalShape,o,e.enableShapeUniforms),u=JU(a)):(c=qU(t.logicalShape,o,e.enableShapeUniforms),u=YU(a)),e.packedInputs&&(h+=nW),[h,l,u,r,c,i,e.userCode].join(`
`)}function ho(n,t=!1){const e=n.shapeInfo.logicalShape;switch(e.length){case 0:return fW(n,t);case 1:return mW(n,t);case 2:return yW(n,t);case 3:return wW(n,t);case 4:return _W(n,t);case 5:return SW(n);case 6:return IW(n);default:throw new Error(`${e.length}-D input sampling is not yet supported`)}}function IS(n,t){switch(n.shapeInfo.logicalShape.length){case 0:return pW(n);case 1:return gW(n,t);case 2:return xW(n,t);case 3:return bW(n,t);default:return CW(n,t)}}function XU(n,t,e=!1,s){let r="";e?r+=IS(n,s):r+=ho(n,s);const i=n.shapeInfo.logicalShape,o=t.logicalShape;return i.length<=o.length&&(e?r+=vW(n,t):r+=kW(n,t)),r}function jU(n,t,e){switch(n.length){case 0:return vS();case 1:return sW(n,t,e);case 2:return hW(n,t,e);case 3:return iW(n,t,e);default:return aW(n,t,e)}}function qU(n,t,e){switch(n.length){case 0:return vS();case 1:return rW(n,t,e);case 2:return dW(n,t,e);case 3:return oW(n,t,e);case 4:return lW(n,t,e);case 5:return cW(n,t);case 6:return uW(n,t);default:throw new Error(`${n.length}-D output sampling is not yet supported`)}}function KU(n){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${n.texture2D}(textureSampler, uv).r;
    }
  `}function YU(n){return`
    void setOutput(float val) {
      ${n.output} = vec4(val, 0, 0, 0);
    }
  `}function JU(n){return`
    void setOutput(vec4 val) {
      ${n.output} = val;
    }
  `}function ZU(n){return`${n.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${n.varyingFs} vec2 resultUV;
    ${n.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${n.defineSpecialNaN}
    ${n.defineSpecialInf}
    ${n.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${QU}
    ${tW}
    ${eW}
  `}const QU=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,tW=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,eW=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,nW=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function vS(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function sW(n,t,e){const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return s[0]===1?e?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${s[1]}.0);
      }
    `:s[1]===1?e?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${s[0]}.0);
      }
    `:e?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      return 2 * (resTexRC.x * ${s[1]} + resTexRC.y);
    }
  `}function rW(n,t,e){return t[0]===1?e?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${t[1]}.0);
      }
    `:t[1]===1?e?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${t[0]}.0);
      }
    `:e?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      return resTexRC.x * ${t[1]} + resTexRC.y;
    }
  `}function iW(n,t,e){if(e)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(n[2]/2),i=r*Math.ceil(n[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      int b = index / ${i};
      index -= b * ${i};

      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec3(b, r, c);
    }
  `}function oW(n,t,e){if(e)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${ph(["r","c","d"],n)}
    return ivec3(r, c, d);
  }
`;const s=fi(["r","c","d"],n);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${s}
      return ivec3(r, c, d);
    }
  `}function aW(n,t,e){if(e)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(n[n.length-1]/2),i=r*Math.ceil(n[n.length-2]/2);let o=i,a="",l="b, r, c";for(let c=2;c<n.length-1;c++)o*=n[n.length-c-1],a=`
      int b${c} = index / ${o};
      index -= b${c} * ${o};
    `+a,l=`b${c}, `+l;return`
    ivec${n.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      ${a}

      int b = index / ${i};
      index -= b * ${i};

      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec${n.length}(${l});
    }
  `}function lW(n,t,e){if(e)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${ph(["r","c","d","d2"],n)}
      return ivec4(r, c, d, d2);
    }
  `;const s=fi(["r","c","d","d2"],n);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${s}
      return ivec4(r, c, d, d2);
    }
  `}function cW(n,t){const e=fi(["r","c","d","d2","d3"],n);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},
                             ${t[1]}));

      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${e}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function uW(n,t){const e=fi(["r","c","d","d2","d3","d4"],n);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${e}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function hW(n,t,e){const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(Pt(n,t))return e?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${s[0]}, ${s[1]}));
      }
    `;const r=Math.ceil(n[1]/2);return e?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));

      int index = resTexRC.x * ${s[1]} + resTexRC.y;
      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec2(r, c);
    }
  `}function dW(n,t,e){return Pt(n,t)?e?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));
      }
    `:n[1]===1?e?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:n[0]===1?e?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:e?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      int r = index / ${n[1]};
      int c = index - r * ${n[1]};
      return ivec2(r, c);
    }
  `}function gi(n){return`offset${n}`}function pW(n){const t=n.name,e="get"+t.charAt(0).toUpperCase()+t.slice(1),s=Ke();return`
    vec4 ${e}() {
      return ${s.texture2D}(${t}, halfCR);
    }
  `}function fW(n,t){const e=n.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1);if(n.shapeInfo.isUniform)return`float ${s}() {return ${e};}`;const[r,i]=n.shapeInfo.texShape;if(r===1&&i===1)return`
      float ${s}() {
        return sampleTexture(${e}, halfCR);
      }
    `;const o=gi(e);if(t)return`
    float ${s}() {
      vec2 uv = uvFromFlat(${e}TexShape[0], ${e}TexShape[1], ${o});
      return sampleTexture(${e}, uv);
    }
  `;const[a,l]=n.shapeInfo.texShape;return`
    float ${s}() {
      vec2 uv = uvFromFlat(${a}, ${l}, ${o});
      return sampleTexture(${e}, uv);
    }
  `}function gW(n,t){const e=n.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1),r=n.shapeInfo.texShape,i=Ke();if(t)return`
    vec4 ${s}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${e}TexShape[0]) / 2.0), ceil(float(${e}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${i.texture2D}(${e}, uv);
    }
  `;const o=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];return`
    vec4 ${s}(int index) {
      vec2 uv = packedUVfrom1D(
        ${o[0]}, ${o[1]}, index);
      return ${i.texture2D}(${e}, uv);
    }
  `}function mW(n,t){const e=n.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1);if(n.shapeInfo.isUniform)return`
      float ${s}(int index) {
        ${po(n)}
      }
    `;const r=n.shapeInfo.texShape,i=r[0],o=r[1];if(o===1&&i===1)return`
      float ${s}(int index) {
        return sampleTexture(${e}, halfCR);
      }
    `;const a=gi(e);return o===1?t?`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / float(${e}TexShape[0]));
        return sampleTexture(${e}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / ${i}.0);
        return sampleTexture(${e}, uv);
      }
    `:i===1?t?`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${a}) + 0.5) / float(${e}TexShape[1]), 0.5);
        return sampleTexture(${e}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${a}) + 0.5) / ${o}.0, 0.5);
        return sampleTexture(${e}, uv);
      }
    `:t?`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${e}TexShape[0], ${e}TexShape[1], index + ${a});
      return sampleTexture(${e}, uv);
    }
  `:`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${i}, ${o}, index + ${a});
      return sampleTexture(${e}, uv);
    }
  `}function xW(n,t){const e=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),i=n.shapeInfo.texShape,o=i[0],a=i[1],l=Ke();if(i!=null&&Pt(e,i))return t?`
      vec4 ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);

        return ${l.texture2D}(${s}, uv);
      }
    `:`
      vec4 ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}.0, ${o}.0);

        return ${l.texture2D}(${s}, uv);
      }
    `;if(t)return`
    vec4 ${r}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${l.texture2D}(${s}, uv);
    }
  `;const c=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],u=Math.ceil(e[1]/2);return`
    vec4 ${r}(int row, int col) {
      vec2 uv = packedUVfrom2D(${u}, ${c[0]}, ${c[1]}, row, col);
      return ${l.texture2D}(${s}, uv);
    }
  `}function yW(n,t){const e=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),i=n.shapeInfo.texShape;if(i!=null&&Pt(e,i)){if(t)return`
      float ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `;const d=i[0],p=i[1];return`
    float ${r}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${p}.0, ${d}.0);
      return sampleTexture(${s}, uv);
    }
  `}const{newShape:o,keptDims:a}=dr(e),l=o;if(l.length<e.length){const d=fo(n,l),p=["row","col"];return`
      ${ho(d,t)}
      float ${r}(int row, int col) {
        return ${r}(${go(p,a)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${r}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${e[1]}, 1)));
        ${po(n)}
      }
    `;const c=i[0],u=i[1],h=gi(s);return u===1?t?`
      float ${r}(int row, int col) {
        float index = dot(vec3(row, col, ${h}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${s}TexShape[0]));
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col) {
      float index = dot(vec3(row, col, ${h}), vec3(${e[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${c}.0);
      return sampleTexture(${s}, uv);
    }
  `:c===1?t?`
      float ${r}(int row, int col) {
        float index = dot(vec3(row, col, ${h}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${s}TexShape[1]), 0.5);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col) {
      float index = dot(vec3(row, col, ${h}), vec3(${e[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${u}.0, 0.5);
      return sampleTexture(${s}, uv);
    }
  `:t?`
      float ${r}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${s}Shape[1] + col + ${h};
        vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
        return sampleTexture(${s}, uv);
      }
    `:`
  float ${r}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${e[1]} + col + ${h};
    vec2 uv = uvFromFlat(${c}, ${u}, index);
    return sampleTexture(${s}, uv);
  }
`}function bW(n,t){const e=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),i=n.shapeInfo.texShape,o=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];if(e[0]===1){const d=e.slice(1),p=[1,2],f=fo(n,d),m=["b","row","col"];return`
        ${IS(f,t)}
        vec4 ${r}(int b, int row, int col) {
          return ${r}(${go(m,p)});
        }
      `}const a=Ke();if(t)return`
    vec4 ${r}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${a.texture2D}(${s}, uv);
    }
  `;const l=o[0],c=o[1],u=Math.ceil(e[2]/2),h=u*Math.ceil(e[1]/2);return`
    vec4 ${r}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${l}, ${c}, ${h}, ${u}, b, row, col);
      return ${a.texture2D}(${s}, uv);
    }
  `}function wW(n,t){const e=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),i=e[1]*e[2],o=e[2],{newShape:a,keptDims:l}=dr(e),c=a;if(c.length<e.length){const m=fo(n,c),g=["row","col","depth"];return`
        ${ho(m,t)}
        float ${r}(int row, int col, int depth) {
          return ${r}(${go(g,l)});
        }
      `}if(n.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${i}, ${o}, 1)));
        ${po(n)}
      }
    `;const u=n.shapeInfo.texShape,h=u[0],d=u[1],p=n.shapeInfo.flatOffset;if(d===i&&p==null)return t?`
      float ${r}(int row, int col, int depth) {
        int stride1 = ${s}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
        float ${r}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${o}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${d}.0, ${h}.0);
          return sampleTexture(${s}, uv);
        }
      `;if(d===o&&p==null)return t?`
      float ${r}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${s}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${e[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${h}.0);
      return sampleTexture(${s}, uv);
    }
  `;const f=gi(s);return t?`
    float ${r}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${s}Shape[1] * ${s}Shape[2];
      int stride1 = ${s}Shape[2];
      int index = row * stride0 + col * stride1 + depth + ${f};
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
      return sampleTexture(${s}, uv);
    }
    `:`
      float ${r}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${i} + col * ${o} + depth + ${f};
        vec2 uv = uvFromFlat(${h}, ${d}, index);
        return sampleTexture(${s}, uv);
      }
  `}function CW(n,t){const e=n.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1),r=Ke();if(t)return`
    vec4 ${s}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${e}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${e}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${e}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${e}TexShape[0]) / 2.0), ceil(float(${e}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${r.texture2D}(${e}, uv);
    }
  `;const i=n.shapeInfo.logicalShape,o=i.length,a=n.shapeInfo.texShape,l=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],c=l[0],u=l[1],h=Math.ceil(i[o-1]/2);let d=h*Math.ceil(i[o-2]/2),p="int b, int row, int col",f=`b * ${d} + (row / 2) * ${h} + (col / 2)`;for(let m=2;m<o-1;m++)p=`int b${m}, `+p,d*=i[o-m-1],f=`b${m} * ${d} + `+f;return`
    vec4 ${s}(${p}) {
      int index = ${f};
      int texR = index / ${u};
      int texC = index - texR * ${u};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${u}, ${c});
      return ${r.texture2D}(${e}, uv);
    }
  `}function _W(n,t){const e=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),i=e[3],o=e[2]*i,a=e[1]*o,{newShape:l,keptDims:c}=dr(e);if(l.length<e.length){const y=fo(n,l),w=["row","col","depth","depth2"];return`
      ${ho(y,t)}
      float ${r}(int row, int col, int depth, int depth2) {
        return ${r}(${go(w,c)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${a}, ${o}, ${i}, 1)));
        ${po(n)}
      }
    `;const u=n.shapeInfo.flatOffset,h=n.shapeInfo.texShape,d=h[0],p=h[1],f=`int stride2 = ${s}Shape[3];`,m=`int stride1 = ${s}Shape[2] * stride2;`,g=`int stride0 = ${s}Shape[1] * stride1;`;if(p===a&&u==null)return t?`
      float ${r}(int row, int col, int depth, int depth2) {
        ${f}
        ${m}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${o}, ${i}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${p}.0, ${d}.0);
        return sampleTexture(${s}, uv);
      }
    `;if(p===i&&u==null)return t?`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${s}Shape[1] * ${s}Shape[2], ${s}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${e[1]*e[2]}, ${e[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${p}.0, ${d}.0);
        return sampleTexture(${s}, uv);
      }
    `;const x=gi(s);return t?`
    float ${r}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${f}
      ${m}
      ${g}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index + ${x});
      return sampleTexture(${s}, uv);
    }
  `:`
    float ${r}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${a} + col * ${o} +
          depth * ${i} + depth2;
      vec2 uv = uvFromFlat(${d}, ${p}, index + ${x});
      return sampleTexture(${s}, uv);
    }
  `}function SW(n){const t=n.shapeInfo.logicalShape,e=n.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1),r=t[4],i=t[3]*r,o=t[2]*i,a=t[1]*o,{newShape:l,keptDims:c}=dr(t);if(l.length<t.length){const m=fo(n,l),g=["row","col","depth","depth2","depth3"];return`
      ${ho(m)}
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        return ${s}(${go(g,c)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${a}, ${o}, ${i}, ${r})) +
          depth3;
        ${po(n)}
      }
    `;const u=n.shapeInfo.flatOffset,h=n.shapeInfo.texShape,d=h[0],p=h[1];if(p===a&&u==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${o}, ${i}, ${r}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${p}.0, ${d}.0);
        return sampleTexture(${e}, uv);
      }
    `;if(p===r&&u==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]},
               ${t[2]*t[3]}, ${t[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${p}.0, ${d}.0);
        return sampleTexture(${e}, uv);
      }
    `;const f=gi(e);return`
    float ${s}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${a} + col * ${o} + depth * ${i} +
          depth2 * ${r} + depth3 + ${f};
      vec2 uv = uvFromFlat(${d}, ${p}, index);
      return sampleTexture(${e}, uv);
    }
  `}function IW(n){const t=n.shapeInfo.logicalShape,e=n.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1),{newShape:r,keptDims:i}=dr(t);if(r.length<t.length){const g=fo(n,r),x=["row","col","depth","depth2","depth3","depth4"];return`
      ${ho(g)}
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${s}(${go(x,i)});
      }
    `}const o=t[5],a=t[4]*o,l=t[3]*a,c=t[2]*l,u=t[1]*c;if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${u}, ${c}, ${l}, ${a})) +
          dot(
            vec2(depth3, depth4),
            vec2(${o}, 1)));
        ${po(n)}
      }
    `;const h=n.shapeInfo.flatOffset,d=n.shapeInfo.texShape,p=d[0],f=d[1];if(f===u&&h==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${c}, ${l}, ${a}, ${o})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${p}.0);
        return sampleTexture(${e}, uv);
      }
    `;if(f===o&&h==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]*t[4]},
               ${t[2]*t[3]*t[4]},
               ${t[3]*t[4]},
               ${t[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${p}.0);
        return sampleTexture(${e}, uv);
      }
    `;const m=gi(e);return`
    float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${u} + col * ${c} + depth * ${l} +
          depth2 * ${a} + depth3 * ${o} + depth4 + ${m};
      vec2 uv = uvFromFlat(${p}, ${f}, index);
      return sampleTexture(${e}, uv);
    }
  `}function po(n){const t=n.name,e=W(n.shapeInfo.logicalShape);return e<2?`return ${t};`:`
    for (int i = 0; i < ${e}; i++) {
      if (i == index) {
        return ${t}[i];
      }
    }
  `}function vW(n,t){const e=n.name,s=e.charAt(0).toUpperCase()+e.slice(1),r="get"+s+"AtOutCoords",i=n.shapeInfo.logicalShape.length,o=t.logicalShape.length,a=SS(n.shapeInfo.logicalShape,t.logicalShape),l=Wt(o),c=o-i;let u;const h=["x","y","z","w","u","v"];i===0?u="":o<2&&a.length>=1?u="coords = 0;":u=a.map(y=>`coords.${h[y+c]} = 0;`).join(`
`);let d="";o<2&&i>0?d="coords":d=n.shapeInfo.logicalShape.map((y,w)=>`coords.${h[w+c]}`).join(", ");let p="return outputValue;";const m=W(n.shapeInfo.logicalShape)===1,x=W(t.logicalShape)===1;if(i===1&&!m&&!x)p=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(m&&!x)o===1?p=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:p=`
        return vec4(outputValue.x);
      `;else if(a.length){const y=i-2,w=i-1;a.indexOf(y)>-1&&a.indexOf(w)>-1?p="return vec4(outputValue.x);":a.indexOf(y)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":a.indexOf(w)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${r}() {
      ${l} coords = getOutputCoords();
      ${u}
      vec4 outputValue = get${s}(${d});
      ${p}
    }
  `}function kW(n,t){const e=n.name,s=e.charAt(0).toUpperCase()+e.slice(1),r="get"+s+"AtOutCoords",i=t.texShape,o=n.shapeInfo.texShape,a=n.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!n.shapeInfo.isUniform&&a===l&&n.shapeInfo.flatOffset==null&&Pt(o,i))return`
      float ${r}() {
        return sampleTexture(${e}, resultUV);
      }
    `;const c=Wt(l),u=SS(n.shapeInfo.logicalShape,t.logicalShape),h=l-a;let d;const p=["x","y","z","w","u","v"];a===0?d="":l<2&&u.length>=1?d="coords = 0;":d=u.map(m=>`coords.${p[m+h]} = 0;`).join(`
`);let f="";return l<2&&a>0?f="coords":f=n.shapeInfo.logicalShape.map((m,g)=>`coords.${p[g+h]}`).join(", "),`
    float ${r}() {
      ${c} coords = getOutputCoords();
      ${d}
      return get${s}(${f});
    }
  `}function Wt(n){if(n<=1)return"int";if(n===2)return"ivec2";if(n===3)return"ivec3";if(n===4)return"ivec4";if(n===5)return"ivec5";if(n===6)return"ivec6";throw Error(`GPU for rank ${n} is not yet supported`)}function Dg(n,t,e){const{newShape:s,keptDims:r}=dr(t),i=t.length,o=n&&i===3&&t[0]===1,a=o?t.slice(1):s,l=!n&&i>1&&!Pt(t,e)&&s.length<i||o;return{useSqueezeShape:l,uniformShape:l?a:t,keptDims:r}}function fo(n,t){const e=JSON.parse(JSON.stringify(n));return e.shapeInfo.logicalShape=t,e}function go(n,t){return t.map(e=>n[e]).join(", ")}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $W(n,t,e,s){const r=e.map((u,h)=>{const d={logicalShape:u.shape,texShape:u.isUniform?null:u.texData.texShape,isUniform:u.isUniform,isPacked:u.isUniform?!1:u.texData.isPacked,flatOffset:null};return u.texData!=null&&u.texData.slice!=null&&u.texData.slice.flatOffset>0&&(d.flatOffset=u.texData.slice.flatOffset),{name:t.variableNames[h],shapeInfo:d}}),i=r.map(u=>u.shapeInfo),o={logicalShape:s.shape,texShape:s.texData.texShape,isUniform:!1,isPacked:s.texData.isPacked,flatOffset:null},a=HU(r,o,t),l=wU(n.gl,a),c=n.createProgram(l);return O().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:l,source:a,webGLProgram:c,inShapeInfos:i,outShapeInfo:o,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(n.buildVao(c),Object.assign({program:t,fragmentShader:l,source:a,webGLProgram:c,inShapeInfos:i,outShapeInfo:o},kS(n,t,c)))}function kS(n,t,e){const s=[],r=[];let i,o,a,l=null,c=null;c=n.getUniformLocation(e,"NAN",!1),O().getNumber("WEBGL_VERSION")===1&&(l=n.getUniformLocation(e,"INFINITY",!1));const u=!1;for(const h of t.variableNames){const d={name:h,uniform:n.getUniformLocation(e,h,u),offset:n.getUniformLocation(e,`offset${h}`,u)};t.enableShapeUniforms&&(d.shape=n.getUniformLocation(e,`${h}Shape`,u),d.texShape=n.getUniformLocation(e,`${h}TexShape`,u)),s.push(d)}if(t.enableShapeUniforms&&(i=n.getUniformLocation(e,"outShape",u),a=n.getUniformLocation(e,"outShapeStrides",u),o=n.getUniformLocation(e,"outTexShape",u)),t.customUniforms)for(const h of t.customUniforms)r.push(n.getUniformLocation(e,h.name,u));return{variablesLocations:s,customUniformLocations:r,infLoc:l,nanLoc:c,outShapeLocation:i,outShapeStridesLocation:a,outTexShapeLocation:o}}function by(n,t){if(n.length!==t.length)throw Error(`Binary was compiled with ${n.length} inputs, but was executed with ${t.length} inputs`);n.forEach((e,s)=>{const r=e.logicalShape,i=t[s],o=i.shape;if(!Pt(r,o))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${o} must match`);if(e.isUniform&&i.isUniform)return;const a=e.texShape,l=i.isUniform?null:i.texData.texShape;if(!Pt(a,l))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${a} and ${l} must match`)})}function TW(n,t,e,s,r){t.program.enableShapeUniforms||(by(t.inShapeInfos,e),by([t.outShapeInfo],[s]));const i=s.texData.texture,o=s.texData.texShape;s.texData.isPacked?n.setOutputPackedMatrixTexture(i.texture,o[0],o[1]):n.setOutputMatrixTexture(i.texture,o[0],o[1]),n.setProgram(t.webGLProgram),n.bindVertexArray(t.webGLProgram.vao),O().getNumber("WEBGL_VERSION")===1&&t.infLoc!==null&&n.gl.uniform1f(t.infLoc,1/0),t.nanLoc!==null&&n.gl.uniform1f(t.nanLoc,NaN);for(let l=0;l<e.length;++l){const c=e[l],{uniform:u,offset:h,shape:d,texShape:p}=t.variablesLocations[l];if(d){const{uniformShape:f}=Dg(t.program.packedInputs,c.shape,c.texData.texShape);switch(f.length){case 1:n.gl.uniform1iv(d,new Int32Array(f));break;case 2:n.gl.uniform2iv(d,new Int32Array(f));break;case 3:n.gl.uniform3iv(d,new Int32Array(f));break;case 4:n.gl.uniform4iv(d,new Int32Array(f));break}}if(p&&n.gl.uniform2i(p,c.texData.texShape[0],c.texData.texShape[1]),u!=null){if(c.isUniform){if(W(c.shape)<2)n.gl.uniform1f(u,c.uniformValues[0]);else{let f=c.uniformValues;f instanceof Float32Array||(f=new Float32Array(f)),n.gl.uniform1fv(u,f)}continue}c.texData.slice!=null&&h!=null&&n.gl.uniform1i(h,c.texData.slice.flatOffset),n.setInputMatrixTexture(c.texData.texture.texture,u,l)}}const a=t.outShapeLocation;if(a)switch(s.shape.length){case 1:n.gl.uniform1iv(a,new Int32Array(s.shape));break;case 2:n.gl.uniform2iv(a,new Int32Array(s.shape));break;case 3:n.gl.uniform3iv(a,new Int32Array(s.shape));break;case 4:n.gl.uniform4iv(a,new Int32Array(s.shape));break}if(t.outShapeStridesLocation){const l=ht(s.shape);switch(s.shape.length){case 2:n.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(l));break;case 3:n.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(l));break;case 4:n.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(l));break}}if(t.outTexShapeLocation&&n.gl.uniform2i(t.outTexShapeLocation,s.texData.texShape[0],s.texData.texShape[1]),t.program.customUniforms&&r)for(let l=0;l<t.program.customUniforms.length;++l){const c=t.program.customUniforms[l],u=t.customUniformLocations[l],h=r[l];if(c.type==="float")n.gl.uniform1fv(u,h);else if(c.type==="vec2")n.gl.uniform2fv(u,h);else if(c.type==="vec3")n.gl.uniform3fv(u,h);else if(c.type==="vec4")n.gl.uniform4fv(u,h);else if(c.type==="int")n.gl.uniform1iv(u,h);else if(c.type==="ivec2")n.gl.uniform2iv(u,h);else if(c.type==="ivec3")n.gl.uniform3iv(u,h);else if(c.type==="ivec4")n.gl.uniform4iv(u,h);else throw Error(`uniform type ${c.type} is not supported yet.`)}n.executeProgram()}function NW(n,t,e){let s="";t.concat(e).forEach(o=>{const a=o.texData!=null&&o.texData.slice!=null&&o.texData.slice.flatOffset>0;if(n.enableShapeUniforms&&!o.isUniform){const l=o.texData.texShape,{useSqueezeShape:c,uniformShape:u,keptDims:h}=Dg(n.packedInputs,o.shape,l);let d="",p="",f="";if(u.length===1&&n.packedInputs){const C=[Math.ceil(l[0]/2),Math.ceil(l[1]/2)];d=`${C[0]>1}_${C[1]>1}`}else if(u.length===2&&!n.packedInputs)p=`${u[0]>1}_${u[1]>1}`;else if(u.length>2&&!n.packedInputs){const C=ht(u);f=`${C[0]===l[1]}_${C[C.length-1]===l[1]}`}const m=o.shape.length,g=u.length===2&&Pt(o.shape,l),x=W(o.shape)===1,y=qi(o.shape,e.shape),w=!n.packedInputs&&m===e.shape.length&&Pt(l,e.texData.texShape),b=n.packedInputs||u.length>2?"":`${l[0]>1}_${l[1]>1}`;s+=`${m}_${w}_${c?h:""}_${u.length}_${x}_${y}_${g}_${d}_${p}_${f}_${b}_${a}`}else{const l=o.isUniform?"uniform":o.texData.texShape;s+=`${o.shape}_${l}_${a}`}});const r=n.userCode;let i=n.constructor.name;return i+="_"+s+"_"+r+`${O().getNumber("WEBGL_VERSION")}`,i}function Ue(n){return O().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&n<=4}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class EW{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=na.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const e=Ke();this.outputShape=t,this.enableShapeUniforms=Ue(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?ph(["r","c","d"],t):fi(["r","c","d"],t)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${e.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class RW{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=na.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const e=Ke();this.outputShape=t,this.enableShapeUniforms=Ue(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?ph(["r","c","d"],t):fi(["r","c","d"],t)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${e.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class DW{constructor(t){this.variableNames=["A"],this.outTexUsage=yn.DOWNLOAD;const e=Ke();this.outputShape=t,this.userCode=`
      ${_S}

      void main() {
        float x = getAAtOutCoords();
        ${e.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class AW{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=yn.DOWNLOAD;const e=Ke();this.outputShape=t,this.userCode=`
      ${_S}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${e.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FW={R:0,G:1,B:2,A:3};class wy{constructor(t,e=!1,s="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const r=Ke();this.outputShape=t,this.enableShapeUniforms=Ue(this.outputShape.length);let i="result";e&&(i="floor(result * 255. + 0.5)");let o="";for(let a=0;a<s.length;a++){const l=s[a];o+=`
          if(offset == ${a}) {
            result = values[${FW[l]}];
          }`}this.userCode=`
      ${this.enableShapeUniforms?Rg():Eg(t)}

      void main() {
        ivec3 coords = getOutputCoords();
        int flatIndex = getFlatIndex(coords);
        float result = 0.;
        int offset = imod(flatIndex, ${s.length});

        flatIndex = idiv(flatIndex, ${s.length}, 1.);

        int r = flatIndex / texShape[1];
        if (r < texShape[0]) {
          int c = imod(flatIndex, texShape[1]);
          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
          vec4 values = ${r.texture2D}(A, uv);
          ${o}
        }
        ${r.output} = vec4(${i}, 0., 0., 0.);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class MW{constructor(t,e=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const s=Ke();this.outputShape=t,this.enableShapeUniforms=Ue(this.outputShape.length);let r="",i="result";e&&(i="floor(result * 255. + 0.5)");for(let o=0;o<=1;o++)for(let a=0;a<=1;a++){const l=o*2+a;r+=`
          localCoords = coords;
          if(localCoords[2] + ${a} < ${this.enableShapeUniforms?"outShape[2]":`${t[2]}`}) {
          localCoords[2] += ${a};
          if (localCoords[1] + ${o} < ${this.enableShapeUniforms?"outShape[1]":`${t[1]}`}) {
            localCoords[1] += ${o};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${s.texture2D}(A, uv);

            if (offset == 0) {
              result[${l}] = values[0];
            } else if (offset == 1) {
              result[${l}] = values[1];
            } else if (offset == 2) {
              result[${l}] = values[2];
            } else {
              result[${l}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?Rg():Eg(t)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${r}

          ${s.output} = ${i};
        }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PW(n){const t=Ke(),e=`${t.version}
    precision highp float;
    ${t.attribute} vec3 clipSpacePos;
    ${t.attribute} vec2 uv;
    ${t.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return bU(n,e)}function OW(n){const t=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return IU(n,t)}function BW(n){const t=new Uint16Array([0,1,2,2,1,3]);return vU(n,t)}function Sl(n,t,e,s,r,i){$U(t,e);const o=kU(n),a=n.TEXTURE_2D;return st(n,()=>n.bindTexture(a,o)),st(n,()=>n.texParameteri(a,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE)),st(n,()=>n.texParameteri(a,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE)),st(n,()=>n.texParameteri(a,n.TEXTURE_MIN_FILTER,n.NEAREST)),st(n,()=>n.texParameteri(a,n.TEXTURE_MAG_FILTER,n.NEAREST)),O().getNumber("WEBGL_VERSION")===1?st(n,()=>n.texImage2D(a,0,s,t,e,0,r,i,null)):st(n,()=>n.texStorage2D(a,1,s,t,e)),st(n,()=>n.bindTexture(n.TEXTURE_2D,null)),{texture:o,texShape:[e,t]}}function $S(n){return n.internalFormatFloat}function LW(n,t,e,s){const[r,i]=Cl(t,e);return Sl(n,r,i,$S(s),s.textureFormatFloat,n.FLOAT)}function TS(n){return n.internalFormatHalfFloat}function VW(n,t,e,s){const[r,i]=Cl(t,e);return Sl(n,r,i,TS(s),s.textureFormatFloat,s.textureTypeHalfFloat)}function NS(n){return n.downloadTextureFormat}function zW(n,t,e,s){const[r,i]=Cl(t,e);return Sl(n,r,i,NS(s),n.RGBA,n.UNSIGNED_BYTE)}function ES(n){return n.internalFormatPackedFloat}function UW(n,t,e,s){const[r,i]=uo(t,e);return Sl(n,r,i,ES(s),n.RGBA,n.FLOAT)}function RS(n){return n.internalFormatPackedHalfFloat}function WW(n,t,e,s){const[r,i]=uo(t,e);return Sl(n,r,i,RS(s),n.RGBA,s.textureTypeHalfFloat)}function GW(n,t,e){return st(n,()=>n.bindBuffer(n.ARRAY_BUFFER,e)),my(n,t,"clipSpacePos",e,3,20,0)&&my(n,t,"uv",e,2,20,12)}function HW(n,t,e,s,r,i){st(n,()=>n.bindTexture(n.TEXTURE_2D,t));let o,a,l;r instanceof Uint8Array?(o=new Uint8Array(e*s*4),a=n.UNSIGNED_BYTE,l=n.RGBA):(o=new Float32Array(e*s*4),a=n.FLOAT,l=i.internalFormatPackedFloat),o.set(r),O().getNumber("WEBGL_VERSION")===2?st(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,e,s,n.RGBA,a,o)):st(n,()=>n.texImage2D(n.TEXTURE_2D,0,l,e,s,0,n.RGBA,a,o)),st(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function XW(n,t,e){st(n,()=>n.bindTexture(n.TEXTURE_2D,t)),e.data instanceof Uint8Array?O().getNumber("WEBGL_VERSION")===2?st(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,e.width,e.height,n.RGBA,n.UNSIGNED_BYTE,e.data)):st(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,e.width,e.height,0,n.RGBA,n.UNSIGNED_BYTE,e.data)):O().getNumber("WEBGL_VERSION")===2?st(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,n.RGBA,n.UNSIGNED_BYTE,e)):st(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,n.RGBA,n.UNSIGNED_BYTE,e)),st(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function jW(n,t,e,s){const r=n.createBuffer();st(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,r));const a=4*4*t*e;return st(n,()=>n.bufferData(n.PIXEL_PACK_BUFFER,a,n.STREAM_READ)),st(n,()=>n.readPixels(0,0,e,t,n.RGBA,n.FLOAT,0)),st(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,null)),r}function qW(n,t,e){const s=n,r=new Float32Array(e);return s.bindBuffer(s.PIXEL_PACK_BUFFER,t),s.getBufferSubData(s.PIXEL_PACK_BUFFER,0,r),s.bindBuffer(s.PIXEL_PACK_BUFFER,null),r}function KW(n,t,e,s){const[r,i]=Cl(t,e),o=4,a=new Uint8Array(dU(t*e,o));return st(n,()=>n.readPixels(0,0,r,i,s.downloadTextureFormat,n.UNSIGNED_BYTE,a)),new Float32Array(a.buffer)}function YW(n,t,e,s,r,i,o,a){const l=n,c=new Float32Array(pU(i,o));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,c),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),c}function JW(n,t,e){const s=new Float32Array(t*e*4);return st(n,()=>n.readPixels(0,0,e,t,n.RGBA,n.FLOAT,s)),s}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Xh{constructor(t){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const e=O().getNumber("WEBGL_VERSION");if(t!=null?(this.gl=t,cU(e,t)):this.gl=ns(e),t=this.gl,O().getNumber("WEBGL_VERSION")===2){const i=t;this.createVertexArray=()=>st(i,()=>i.createVertexArray()),this.bindVertexArray=o=>st(i,()=>i.bindVertexArray(o)),this.deleteVertexArray=o=>st(i,()=>i.deleteVertexArray(o)),this.getVertexArray=()=>st(i,()=>i.getParameter(i.VERTEX_ARRAY_BINDING))}else if(t!=null){const i=t.getExtension("OES_vertex_array_object");if(i==null)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>st(t,()=>i.createVertexArrayOES()),this.bindVertexArray=o=>st(t,()=>i.bindVertexArrayOES(o)),this.deleteVertexArray=o=>st(t,()=>i.deleteVertexArrayOES(o)),this.getVertexArray=()=>st(t,()=>t.getParameter(i.VERTEX_ARRAY_BINDING_OES))}let s="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),O().getNumber("WEBGL_VERSION")===1){const i="OES_texture_float",o="OES_texture_half_float";if(this.textureFloatExtension=zl(this.gl,i),Dn(this.gl,o))this.textureHalfFloatExtension=zl(this.gl,o);else if(O().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(s),Dn(this.gl,r))this.colorBufferHalfFloatExtension=zl(this.gl,r);else if(O().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(s="EXT_color_buffer_float",Dn(this.gl,s))this.colorBufferFloatExtension=this.gl.getExtension(s);else if(Dn(this.gl,r))this.colorBufferHalfFloatExtension=this.gl.getExtension(r);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=OW(this.gl),this.indexBuffer=BW(this.gl),this.framebuffer=TU(this.gl),this.textureConfig=Ng(this.gl,this.textureHalfFloatExtension)}get debug(){return O().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const t=this.gl;st(t,()=>t.finish()),st(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,null)),st(t,()=>t.deleteFramebuffer(this.framebuffer)),st(t,()=>t.bindBuffer(t.ARRAY_BUFFER,null)),st(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null)),st(t,()=>t.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(t,e){return this.throwIfDisposed(),LW(this.gl,t,e,this.textureConfig)}createFloat16MatrixTexture(t,e){return this.throwIfDisposed(),VW(this.gl,t,e,this.textureConfig)}createUnsignedBytesMatrixTexture(t,e){return this.throwIfDisposed(),zW(this.gl,t,e,this.textureConfig)}uploadPixelDataToTexture(t,e){this.throwIfDisposed(),XW(this.gl,t,e)}uploadDenseMatrixToTexture(t,e,s,r){this.throwIfDisposed(),HW(this.gl,t,e,s,r,this.textureConfig)}createFloat16PackedMatrixTexture(t,e){return this.throwIfDisposed(),WW(this.gl,t,e,this.textureConfig)}createPackedMatrixTexture(t,e){return this.throwIfDisposed(),UW(this.gl,t,e,this.textureConfig)}deleteMatrixTexture(t){this.throwIfDisposed(),this.outputTexture===t&&(xy(this.gl,this.framebuffer),this.outputTexture=null),st(this.gl,()=>this.gl.deleteTexture(t))}downloadByteEncodedFloatMatrixFromOutputTexture(t,e,s){return this.downloadMatrixDriver(t,()=>KW(this.gl,e,s,this.textureConfig))}downloadPackedMatrixFromBuffer(t,e,s,r,i,o){return YW(this.gl,t,e,s,r,i,o,this.textureConfig)}downloadFloat32MatrixFromBuffer(t,e){return qW(this.gl,t,e)}createBufferFromTexture(t,e,s){this.bindTextureToFrameBuffer(t);const r=jW(this.gl,e,s,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const t=this.createFence(this.gl);return this.pollFence(t)}createFence(t){let e,s;if(O().getBool("WEBGL_FENCE_API_ENABLED")){const r=t,i=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);t.flush(),s=()=>{const o=r.clientWaitSync(i,0,0);return o===r.ALREADY_SIGNALED||o===r.CONDITION_SATISFIED},e=i}else O().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(e=this.beginQuery(),this.endQuery(),s=()=>this.isQueryAvailable(e,O().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):s=()=>!0;return{query:e,isFencePassed:s}}downloadMatrixFromPackedTexture(t,e,s){return this.downloadMatrixDriver(t,()=>JW(this.gl,e,s))}createProgram(t){this.throwIfDisposed();const e=this.gl;this.vertexShader==null&&(this.vertexShader=PW(e));const s=_U(e);st(e,()=>e.attachShader(s,this.vertexShader)),st(e,()=>e.attachShader(s,t)),SU(e,s);const r=Object.assign(s,{vao:this.createVertexArray()});return this.debug&&Uh(e,r),r}buildVao(t){this.setProgram(t),this.bindVertexArray(t.vao);const e=this.gl;st(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),GW(e,t,this.vertexBuffer)}deleteProgram(t){this.throwIfDisposed(),t===this.program&&(this.program=null),t!=null&&(st(this.gl,()=>this.gl.deleteProgram(t)),this.deleteVertexArray(t.vao))}setProgram(t){this.throwIfDisposed(),this.program=t,this.program!=null&&this.debug&&Uh(this.gl,this.program),st(this.gl,()=>this.gl.useProgram(t))}getUniformLocation(t,e,s=!0){return this.throwIfDisposed(),s?EU(this.gl,t,e):RU(this.gl,t,e)}getAttributeLocation(t,e){return this.throwIfDisposed(),st(this.gl,()=>this.gl.getAttribLocation(t,e))}getUniformLocationNoThrow(t,e){return this.throwIfDisposed(),this.gl.getUniformLocation(t,e)}setInputMatrixTexture(t,e,s){this.throwIfDisposed(),this.throwIfNoProgram(),DU(this.gl,t,e,s)}setOutputMatrixTexture(t,e,s){this.setOutputMatrixTextureDriver(t,s,e)}setOutputPackedMatrixTexture(t,e,s){this.throwIfDisposed();const[r,i]=uo(e,s);this.setOutputMatrixTextureDriver(t,r,i)}setOutputMatrixWriteRegion(t,e,s,r){this.setOutputMatrixWriteRegionDriver(s,t,r,e)}setOutputPackedMatrixWriteRegion(t,e,s,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&Uh(this.gl,this.program),Ul(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const t=this.gl;if(this.debug){const e=this.getVertexArray();console.assert(e===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}st(t,()=>t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),st(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=zl(this.gl,O().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(O().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const s=this.gl,r=this.getQueryTimerExtensionWebGL2(),i=s.createQuery();return s.beginQuery(r.TIME_ELAPSED_EXT,i),i}const t=this.getQueryTimerExtensionWebGL1(),e=t.createQueryEXT();return t.beginQueryEXT(t.TIME_ELAPSED_EXT,e),e}endQuery(){if(O().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const e=this.gl,s=this.getQueryTimerExtensionWebGL2();e.endQuery(s.TIME_ELAPSED_EXT);return}const t=this.getQueryTimerExtensionWebGL1();t.endQueryEXT(t.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(t){return await ix(()=>this.disposed||this.isQueryAvailable(t,O().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(t,O().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(t,e){if(e===0)return null;if(e===2){const s=this.gl;return s.getQueryParameter(t,s.QUERY_RESULT)/1e6}else{const s=this.getQueryTimerExtensionWebGL1();return s.getQueryObjectEXT(t,s.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(t,e){if(e===0)return!0;if(e===2){const s=this.gl,r=this.getQueryTimerExtensionWebGL2(),i=s.getQueryParameter(t,s.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(r.GPU_DISJOINT_EXT)),i&&!this.disjoint}else{const s=this.getQueryTimerExtensionWebGL1(),r=s.getQueryObjectEXT(t,s.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(s.GPU_DISJOINT_EXT)),r&&!this.disjoint}}pollFence(t){return new Promise(e=>{this.addItemToPoll(()=>t.isFencePassed(),()=>e())})}pollItems(){const t=ZW(this.itemsToPoll.map(e=>e.isDoneFn));for(let e=0;e<=t;++e){const{resolveFn:s}=this.itemsToPoll[e];s()}this.itemsToPoll=this.itemsToPoll.slice(t+1)}addItemToPoll(t,e){if(this.itemsToPoll.push({isDoneFn:t,resolveFn:e}),this.itemsToPoll.length>1)return;let s;"setTimeoutCustom"in O().platform&&(s=O().platform.setTimeoutCustom.bind(O().platform)),ix(()=>(this.pollItems(),this.itemsToPoll.length===0),()=>0,null,s)}bindTextureToFrameBuffer(t){this.throwIfDisposed(),Wh(this.gl,t,this.framebuffer),this.debug&&Ul(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(Wh(this.gl,this.outputTexture,this.framebuffer),this.debug&&Ul(this.gl)):xy(this.gl,this.framebuffer)}downloadMatrixDriver(t,e){this.bindTextureToFrameBuffer(t);const s=e();return this.unbindTextureToFrameBuffer(),s}setOutputMatrixTextureDriver(t,e,s){this.throwIfDisposed();const r=this.gl;Wh(r,t,this.framebuffer),this.debug&&Ul(r),this.outputTexture=t,st(r,()=>r.viewport(0,0,e,s)),st(r,()=>r.scissor(0,0,e,s))}setOutputMatrixWriteRegionDriver(t,e,s,r){this.throwIfDisposed(),st(this.gl,()=>this.gl.scissor(t,e,s,r))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}}function ZW(n){let t=0;for(;t<n.length&&n[t]();++t);return t-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{addImpl:QW,bincountImpl:DS,bincountReduceImpl:t4,bitwiseAndImpl:e4,castImpl:n4,ceilImpl:s4,concatImpl:r4,equalImpl:i4,expImpl:o4,expm1Impl:a4,floorImpl:l4,gatherNdImpl:c4,gatherV2Impl:u4,greaterImpl:h4,greaterEqualImpl:d4,lessImpl:p4,lessEqualImpl:f4,linSpaceImpl:g4,logImpl:m4,maxImpl:x4,maximumImpl:y4,minimumImpl:b4,multiplyImpl:w4,negImpl:C4,notEqualImpl:_4,prodImpl:S4,raggedGatherImpl:I4,raggedRangeImpl:v4,raggedTensorToTensorImpl:k4,rangeImpl:$4,rsqrtImpl:T4,scatterImpl:N4,sigmoidImpl:E4,simpleAbsImpl:AS,sliceImpl:R4,sparseFillEmptyRowsImpl:D4,sparseReshapeImpl:A4,sparseSegmentReductionImpl:FS,sqrtImpl:F4,staticRegexReplaceImpl:M4,stridedSliceImpl:P4,stringNGramsImpl:O4,stringSplitImpl:B4,stringToHashBucketFastImpl:L4,subImpl:V4,tileImpl:z4,topKImpl:U4,transposeImpl:Ag,uniqueImpl:W4}=XO;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MS(n,t){return["x","y","z","w","u","v"].slice(0,t).map(e=>`${n}.${e}`)}function Xe(n,t){return t===1?[n]:MS(n,t)}function G4(n,t){if(n===1)return"rc";let e="";for(let s=0;s<n;s++)e+=t[s],s<n-1&&(e+=",");return e}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class H4{constructor(t){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=t,this.rank=t.length,this.enableShapeUniforms=Ue(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{const e=Xe("rc",this.rank),s=Wt(this.rank),r=this.getOutOfBoundsCondition(e),i=this.getSetup(e),o=this.getOutput(e);this.userCode=`
        void main() {
          ${s} rc = getOutputCoords();

          if(${r}) {
            setOutput(vec4(0));
          } else {
            ${i}

            setOutput(vec4(${o}));
          }
        }
      `}}getSourceCoordsArr(t){const e=[];for(let s=0;s<=1;s++)for(let r=0;r<=1;r++){let i=`${s===0?"r":"rp1"}, ${r===0?"c":"cp1"}`;for(let o=2;o<this.rank;o++)i=`${t[t.length-1-o]},`+i;e.push(i)}return e}getOutOfBoundsCondition(t){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let e="";for(let s=this.rank-2;s<this.rank;s++)e+=`${t[s]} >= ${this.enableShapeUniforms?`outShape[${s}]`:this.outputShape[s]}`,s<this.rank-1&&(e+="||");return e}getSetup(t){if(this.rank===1)return"";const e=t.slice(-2),s=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],r=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${e[0]};
      int c = ${e[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${s};
      bool rEdge = rp1 >= ${r};
    `}getOutput(t){const e=this.getSourceCoordsArr(t);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${e[0]}),
            cEdge ? 0. : getA(${e[1]}),
            rEdge ? 0. : getA(${e[2]}),
            rEdge || cEdge ? 0. : getA(${e[3]})`}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class PS{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=t,this.enableShapeUniforms=Ue(this.outputShape.length);let s="";for(let r=0;r<4;r++){let i="thisRC = rc;";r%2===1&&(i+="thisRC.z += 1;"),r>1&&(i+="thisRC.y += 1;"),s+=`
        ${i}
        ${r>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${r}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${r>0?"}":""}
      `}this.userCode=`
      ${X4(e,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?Rg():Eg(t)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":t[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":t[2]};

        ${s}

        setOutput(result);
      }
    `}}function X4(n,t){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${t?GU(["r","c","d"],"inputShape"):fi(["r","c","d"],n)}
      return ivec3(r, c, d);
    }
  `}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class j4{constructor(t){this.gpgpu=t,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(t,e,s){const r=_y(e,s),i=Sy(t,r,s);i in this.freeTextures||(this.freeTextures[i]=[]),i in this.usedTextures||(this.usedTextures[i]=[]);const o=Cy(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,s);if(this.freeTextures[i].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=o,this.log();const l=this.freeTextures[i].pop();return this.usedTextures[i].push(l),l}let a;return r===Re.PACKED_2X2_FLOAT32?a=this.gpgpu.createPackedMatrixTexture(t[0],t[1]):r===Re.PACKED_2X2_FLOAT16?a=this.gpgpu.createFloat16PackedMatrixTexture(t[0],t[1]):r===Re.UNPACKED_FLOAT32?a=this.gpgpu.createFloat32MatrixTexture(t[0],t[1]):r===Re.UNPACKED_FLOAT16?a=this.gpgpu.createFloat16MatrixTexture(t[0],t[1]):r===Re.PACKED_4X1_UNSIGNED_BYTE&&(a=this.gpgpu.createUnsignedBytesMatrixTexture(t[0],t[1])),this.usedTextures[i].push(a),this.numUsedTextures++,this._numBytesAllocated+=o,this.log(),a}releaseTexture(t,e,s,r){if(this.freeTextures==null)return;const i=_y(s,r),o=Sy(e,i,r);o in this.freeTextures||(this.freeTextures[o]=[]);const a=Cy(e,i,this.gpgpu.gl,this.gpgpu.textureConfig,r),l=O().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");l!==-1&&this._numBytesAllocated>l?(this.gpgpu.deleteMatrixTexture(t.texture),this._numBytesAllocated-=a):(this.freeTextures[o].push(t),this.numFreeTextures++,this._numBytesFree+=a),this.numUsedTextures--;const c=this.usedTextures[o],u=c&&c.indexOf(t);if(u==null||u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");c[u]=c[c.length-1],c.pop(),this.log()}log(){if(!this.logEnabled)return;const t=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${t})`);const e=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*e)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(const t in this.freeTextures)this.freeTextures[t].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});for(const t in this.usedTextures)this.usedTextures[t].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function q4(n,t){const e=n;if(t===e.R32F)return 4;if(t===e.R16F)return 2;if(t===e.RGBA32F)return 16;if(t===n.RGBA)return 16;if(t===e.RGBA16F)return 8;if(t===e.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}function Cy(n,t,e,s,r){const i=K4(t,s);let o;if(r){const[l,c]=uo(n[0],n[1]);o=l*c}else{const[l,c]=Cl(n[0],n[1]);o=l*c}const a=q4(e,i);return o*a}function K4(n,t){switch(n){case Re.PACKED_2X2_FLOAT32:return ES(t);case Re.PACKED_2X2_FLOAT16:return RS(t);case Re.UNPACKED_FLOAT32:return $S(t);case Re.UNPACKED_FLOAT16:return TS(t);case Re.PACKED_4X1_UNSIGNED_BYTE:return NS(t);default:throw new Error(`Unknown physical texture type ${n}`)}}function Y4(n){return O().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?n?Re.PACKED_2X2_FLOAT32:Re.UNPACKED_FLOAT32:n?Re.PACKED_2X2_FLOAT16:Re.UNPACKED_FLOAT16}function _y(n,t){if(n===yn.UPLOAD)return Re.PACKED_2X2_FLOAT32;if(n===yn.RENDER||n==null)return Y4(t);if(n===yn.DOWNLOAD||n===yn.PIXELS)return Re.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${n}`)}function Sy(n,t,e){return`${n[0]}_${n[1]}_${t}_${e}`}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hs{constructor(t,e){this.variableNames=["A"],this.outputShape=t,this.enableShapeUniforms=Ue(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${e}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}}const Bn="if (isnan(x)) return x;",J4="return x;",Iy="return abs(x);",Z4="return (x >= 0.0) ? x : (exp(x) - 1.0);",Q4=Bn+`
  return (x < 0.0) ? 0.0 : x;
`,tG=Bn+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,js="return x;",eG="return 1.0 / (1.0 + exp(-1.0 * x));";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nG="return x;",sG=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,rG=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,iG=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,oG="return 1.0 / (1.0 + exp(-1.0 * x));";class Qs{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.enableShapeUniforms=Ue(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${e}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class aG{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=t,this.enableShapeUniforms=Ue(this.outputShape.length);const e=t.length,s=Xe("rc",e),r=Wt(e),i=G4(e,s),o=s.slice(-2),a=e<=1?"rc":`vec2(${o.join(",")})`;this.userCode=`
      void main() {
        ${r} rc = getOutputCoords();
        vec4 packedInput = getA(${i});

        setOutput(getChannel(packedInput, ${a}));
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lG=rw,cG=1e-7,uG=1e-4,Hl={};function hG(n){return n in Hl||(Hl[n]={}),Hl[n]}const dG=O().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),pG=600;function fG(){return O().global.screen==null?1024:O().global.screen.height*O().global.screen.width*window.devicePixelRatio*pG/1024/1024}class fh extends Xd{nextDataId(){return fh.nextDataId++}constructor(t){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!O().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let e;if(t!=null){if(t instanceof Xh)e=t;else{const s=ns(O().getNumber("WEBGL_VERSION"),t);e=new Xh(s)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const s=ns(O().getNumber("WEBGL_VERSION"));e=new Xh(s),this.binaryCache=hG(O().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=e,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new j4(this.gpgpu),this.numMBBeforeWarning=fG(),this.texData=new vb(this,os())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(t,e,s,r,i,o){const a=this.makeTensorInfo(e,s),l=this.texData.get(a.dataId);l.isPacked=!1,l.texture={texture:t,texShape:[r,i]},l.texShape=[r,i];const c=Wl(e),u=new wy(c,!1,o),h=this.runWebGLProgram(u,[a],s,[[r,i]]);return h.shape=e,l.texture=null,this.disposeIntermediateTensorInfo(a),h.dataId}write(t,e,s){if((O().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||O().getBool("DEBUG"))&&this.checkNumericalProblems(t),s==="complex64"&&t!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:e,dtype:s,values:t,usage:yn.UPLOAD,refCount:1}),r}refCount(t){return this.texData.has(t)?this.texData.get(t).refCount:0}incRef(t){const e=this.texData.get(t);e.refCount++}decRef(t){if(this.texData.has(t)){const e=this.texData.get(t);e.refCount--}}move(t,e,s,r,i){if(O().getBool("DEBUG")&&this.checkNumericalProblems(e),r==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(t,{shape:s,dtype:r,values:e,usage:yn.UPLOAD,refCount:i})}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}readSync(t){const e=this.texData.get(t),{values:s,dtype:r,complexTensorInfos:i,slice:o,shape:a,isPacked:l}=e;if(o!=null){let d;l?d=new Qs(a,js):d=new hs(a,js);const p=this.runWebGLProgram(d,[{dataId:t,shape:a,dtype:r}],r),f=this.readSync(p.dataId);return this.disposeIntermediateTensorInfo(p),f}if(s!=null)return this.convertAndCacheOnCPU(t);if(r==="string")return s;const c=this.activeTimers!=null;let u;c&&(u=Ye());let h;if(r==="complex64"){const d=this.readSync(i.real.dataId),p=this.readSync(i.imag.dataId);h=As(d,p)}else h=this.getValuesFromTexture(t);return c&&(this.downloadWaitMs+=Ye()-u),this.convertAndCacheOnCPU(t,h)}async read(t){if(this.pendingRead.has(t)){const f=this.pendingRead.get(t);return new Promise(m=>f.push(m))}const e=this.texData.get(t),{values:s,shape:r,slice:i,dtype:o,complexTensorInfos:a,isPacked:l}=e;if(i!=null){let f;l?f=new Qs(r,js):f=new hs(r,js);const m=this.runWebGLProgram(f,[{dataId:t,shape:r,dtype:o}],o),g=this.read(m.dataId);return this.disposeIntermediateTensorInfo(m),g}if(s!=null)return this.convertAndCacheOnCPU(t);if(O().getBool("DEBUG")&&!O().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&O().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let c=null,u;if(o!=="complex64"&&O().get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(t);const f=this.texData.get(u.dataId);c=this.gpgpu.createBufferFromTexture(f.texture.texture,...Vl(r))}this.pendingRead.set(t,[]),o!=="complex64"&&await this.gpgpu.createAndWaitForFence();let h;if(o==="complex64"){const f=await Promise.all([this.read(a.real.dataId),this.read(a.imag.dataId)]),m=f[0],g=f[1];h=As(m,g)}else if(c==null)h=this.getValuesFromTexture(t);else{const f=W(r);h=this.gpgpu.downloadFloat32MatrixFromBuffer(c,f)}if(u!=null&&this.disposeIntermediateTensorInfo(u),c!=null){const f=this.gpgpu.gl;st(f,()=>f.deleteBuffer(c))}const d=this.convertAndCacheOnCPU(t,h),p=this.pendingRead.get(t);return this.pendingRead.delete(t),p.forEach(f=>f(d)),this.pendingDisposal.has(t)&&(this.pendingDisposal.delete(t),this.disposeData(t)&&os().removeDataId(t,this),this.pendingDeletes--),d}readToGPU(t,e={}){const s=this.texData.get(t),{values:r,shape:i,slice:o,dtype:a,isPacked:l,texture:c}=s;if(a==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(o!=null){let p;l?p=new Qs(i,js):p=new hs(i,js);const f=this.runWebGLProgram(p,[{dataId:t,shape:i,dtype:a}],a),m=this.readToGPU(f,e);return this.disposeIntermediateTensorInfo(f),m}if(c==null)throw r!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const u=this.decode(t,e.customTexShape),h=os().makeTensorFromTensorInfo(u),d=this.texData.get(u.dataId);return Object.assign({tensorRef:h},d.texture)}bufferSync(t){const e=this.readSync(t.dataId);if(t.dtype==="string")try{const s=e.map(r=>or(r));return kt(t.shape,t.dtype,s)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return kt(t.shape,t.dtype,e)}checkNumericalProblems(t){if(t!=null)for(let e=0;e<t.length;e++){const s=t[e];if(!xU(s))throw O().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${s} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${s} cannot be represented on this device.`)}}getValuesFromTexture(t){const{shape:e,dtype:s,isPacked:r}=this.texData.get(t),i=W(e);if(O().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const d=this.decode(t),p=this.texData.get(d.dataId),f=this.gpgpu.downloadMatrixFromPackedTexture(p.texture.texture,...Vl(e)).subarray(0,i);return this.disposeIntermediateTensorInfo(d),f}const o=O().getBool("WEBGL_PACK")&&r===!0,a=o?Wl(e):e,l=o?new AW(a):new DW(a),c=this.runWebGLProgram(l,[{shape:a,dtype:s,dataId:t}],"float32"),u=this.texData.get(c.dataId),h=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture.texture,u.texShape[0],u.texShape[1]).subarray(0,i);return this.disposeIntermediateTensorInfo(c),h}timerAvailable(){return O().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(t){const e=this.activeTimers,s=[];let r=!1;this.programTimersStack==null?(this.programTimersStack=s,r=!0):this.activeTimers.push(s),this.activeTimers=s,t();const i=Hr(this.activeTimers.map(l=>l.query)).filter(l=>l!=null),o=Hr(this.activeTimers.map(l=>l.name)).filter(l=>l!=null);this.activeTimers=e,r&&(this.programTimersStack=null);const a={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(O().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const l=await Promise.all(i);a.kernelMs=Rk(l),a.getExtraProfileInfo=()=>l.map((c,u)=>({name:o[u],ms:c})).map(c=>`${c.name}: ${c.ms}`).join(", ")}else a.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,a})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return O().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:Ye(),endMs:null}}endTimer(t){return O().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),t):(t.endMs=Ye(),t)}async getQueryTime(t){if(O().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(t);const e=t;return e.endMs-e.startMs}disposeData(t,e=!1){if(this.pendingDisposal.has(t))return!1;if(!this.texData.has(t))return!0;if(e?this.texData.get(t).refCount=0:this.texData.get(t).refCount--,!e&&this.texData.get(t).refCount>0)return!1;if(this.pendingRead.has(t))return this.pendingDisposal.add(t),this.pendingDeletes++,!1;this.releaseGPUData(t);const{complexTensorInfos:s}=this.texData.get(t);return s!=null&&(this.disposeData(s.real.dataId,e),this.disposeData(s.imag.dataId,e)),this.texData.delete(t),!0}releaseGPUData(t){const{texture:e,dtype:s,texShape:r,usage:i,isPacked:o,slice:a}=this.texData.get(t),l=a&&a.origDataId||t,c=this.dataRefCount.get(l);c>1?this.dataRefCount.set(l,c-1):(this.dataRefCount.delete(l),e!=null&&(this.numBytesInGPU-=this.computeBytes(r,s),this.textureManager.releaseTexture(e,r,i,o)));const u=this.texData.get(t);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(t){return this.uploadToGPU(t),this.texData.get(t).texture.texture}getDataInfo(t){return this.texData.get(t)}shouldExecuteOnCPU(t,e=dG){return O().getBool("WEBGL_CPU_FORWARD")&&t.every(s=>this.texData.get(s.dataId).texture==null&&W(s.shape)<e)}getGPGPUContext(){return this.gpgpu}where(t){mn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const e=t.dataSync();return lG(t.shape,e)}packedUnaryOp(t,e,s){const r=new Qs(t.shape,e),i=this.compileAndRun(r,[t],s);return os().makeTensorFromTensorInfo(i)}abs(t){if(this.shouldExecuteOnCPU([t])&&t.dtype!=="complex64"){const r=AS(this.texData.get(t.dataId).values);return this.makeOutput(t.shape,t.dtype,r)}if(O().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,Iy,t.dtype);const e=new hs(t.shape,Iy),s=this.compileAndRun(e,[t]);return os().makeTensorFromTensorInfo(s)}makeTensorInfo(t,e,s){let r;if(e==="string"&&s!=null&&s.length>0&&la(s[0])){const i=s.map(o=>nr(o));r=this.write(i,t,e)}else r=this.write(s,t,e);return this.texData.get(r).usage=null,{dataId:r,shape:t,dtype:e}}makeOutput(t,e,s){return os().makeTensorFromTensorInfo(this.makeTensorInfo(t,e,s),this)}unpackTensor(t){const e=new aG(t.shape);return this.runWebGLProgram(e,[t],t.dtype)}packTensor(t){const e=new H4(t.shape);return this.runWebGLProgram(e,[t],t.dtype,null,!0)}packedReshape(t,e){const s=[to(t.shape),...eo(t.shape)],r={dtype:t.dtype,shape:s,dataId:t.dataId},i=[to(e),...eo(e)],o=new PS(i,s),a=!0,l=[s],c=this.runWebGLProgram(o,[r],t.dtype,l,a);return{dataId:c.dataId,shape:e,dtype:c.dtype}}decode(t,e){const s=this.texData.get(t),{isPacked:r,shape:i,dtype:o}=s;if(e!=null){const d=W(i),p=e[0]*e[1]*4;S(d<=p,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}const a=Wl(i);let l;r?l=new RW(a):l=new EW(a);const c=!0,u=[e??Vl(a)],h=this.runWebGLProgram(l,[{shape:a,dtype:o,dataId:t}],o,u,c,e);return{dtype:o,shape:i,dataId:h.dataId}}runWebGLProgram(t,e,s,r,i=!1,o){const a=this.makeTensorInfo(t.outputShape,s),l=this.texData.get(a.dataId);if(t.packedOutput&&(l.isPacked=!0),t.outPackingScheme===na.DENSE){const x=o??Vl(t.outputShape);l.texShape=x.map(y=>y*2)}if(t.outTexUsage!=null&&(l.usage=t.outTexUsage),W(a.shape)===0)return l.values=Oe(a.dtype,0),a;const c=[],u=e.map(x=>{if(x.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let y=this.texData.get(x.dataId);if(y.texture==null){if(!t.packedInputs&&W(x.shape)<=O().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:x.shape,texData:null,isUniform:!0,uniformValues:y.values};t.packedInputs&&(y.isPacked=!0,y.shape=x.shape)}if(this.uploadToGPU(x.dataId),!!y.isPacked!=!!t.packedInputs)x=y.isPacked?this.unpackTensor(x):this.packTensor(x),c.push(x),y=this.texData.get(x.dataId);else if(y.isPacked&&!Fc(y.shape,x.shape)){const w=x,b=x.shape;x.shape=y.shape,x=this.packedReshape(x,b),c.push(x),y=this.texData.get(x.dataId),w.shape=b}return{shape:x.shape,texData:y,isUniform:!1}});this.uploadToGPU(a.dataId);const h={shape:a.shape,texData:l,isUniform:!1},d=NW(t,u,h),p=this.getAndSaveBinary(d,()=>$W(this.gpgpu,t,u,h)),f=this.activeTimers!=null;let m;f&&(m=this.startTimer()),O().get("ENGINE_COMPILE_ONLY")||TW(this.gpgpu,p,u,h,r),c.forEach(x=>this.disposeIntermediateTensorInfo(x)),f&&(m=this.endTimer(m),this.activeTimers.push({name:t.constructor.name,query:this.getQueryTime(m)}));const g=O().getNumber("WEBGL_FLUSH_THRESHOLD");if(g>0){const x=Ye();x-this.lastGlFlushTime>g&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=x)}if(!O().getBool("WEBGL_LAZILY_UNPACK")&&l.isPacked&&i===!1){const x=this.unpackTensor(a);return this.disposeIntermediateTensorInfo(a),x}return a}compileAndRun(t,e,s,r,i=!1){return s=s||e[0].dtype,this.runWebGLProgram(t,e,s,r,i)}getAndSaveBinary(t,e){return t in this.binaryCache||(this.binaryCache[t]=e()),this.binaryCache[t]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(O().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=M(()=>{if(!O().get("WEBGL_RENDER_FLOAT32_ENABLED")){const t=O().getBool("DEBUG");O().set("DEBUG",!1);const e=this.abs(Mt(1e-8)).dataSync()[0];if(O().set("DEBUG",t),e>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?cG:uG}uploadToGPU(t){const e=this.texData.get(t),{shape:s,dtype:r,values:i,texture:o,usage:a,isPacked:l}=e;if(o!=null)return;const c=this.activeTimers!=null;let u;c&&(u=Ye());let h=e.texShape;if(h==null&&(h=MU(s,l),e.texShape=h),i!=null){const d=Wl(s);let p,f=h[1],m=h[0];const g=i instanceof Uint8Array||i instanceof Uint8ClampedArray;(l||!g)&&([f,m]=uo(h[0],h[1])),l?p=new MW(d,g):p=new wy(d,g);const x=g?[m,f]:h,y=this.makeTensorInfo(x,r),w=this.texData.get(y.dataId);g?w.usage=yn.PIXELS:w.usage=yn.UPLOAD,w.texShape=x,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(y.dataId),f,m,i);const b=[[m,f]],_=this.runWebGLProgram(p,[y],r,b,!0),I=this.texData.get(_.dataId);e.texShape=I.texShape,e.isPacked=I.isPacked,e.usage=I.usage,O().get("ENGINE_COMPILE_ONLY")?this.disposeData(_.dataId):(e.texture=I.texture,e.values=null,this.texData.delete(_.dataId)),this.disposeIntermediateTensorInfo(y),c&&(this.uploadWaitMs+=Ye()-u)}else{const d=this.acquireTexture(h,a,r,l);e.texture=d}}convertAndCacheOnCPU(t,e){const s=this.texData.get(t),{dtype:r}=s;return e!=null&&(s.values=gG(e,r)),s.values}acquireTexture(t,e,s,r){if(this.numBytesInGPU+=this.computeBytes(t,s),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){const i=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${i} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(t,e,r)}computeBytes(t,e){return t[0]*t[1]*ac(e)}checkCompileCompletion(){for(const[,t]of Object.entries(this.binaryCache))this.checkCompletion_(t)}async checkCompileCompletionAsync(){const t=[];if(this.gpgpu.parallelCompilationExtension){for(const[,e]of Object.entries(this.binaryCache))t.push(this.checkCompletionAsync_(e));return Promise.all(t)}else{for(const[,e]of Object.entries(this.binaryCache)){const s=new Promise(r=>{try{this.checkCompletion_(e),r(!0)}catch(i){throw i}});t.push(s)}return Promise.all(t)}}async checkCompletionAsync_(t){return this.gpgpu.gl.getProgramParameter(t.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(t):(await Sw(),this.checkCompletionAsync_(t))}checkCompletion_(t){if(this.gpgpu.gl.getProgramParameter(t.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw console.log(this.gpgpu.gl.getProgramInfoLog(t.webGLProgram)),this.gpgpu.gl.getShaderParameter(t.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?(CS(t.source,this.gpgpu.gl.getShaderInfoLog(t.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(const t of Object.values(this.binaryCache)){this.gpgpu.buildVao(t.webGLProgram);const{variablesLocations:e,customUniformLocations:s,infLoc:r,nanLoc:i,outShapeLocation:o,outShapeStridesLocation:a,outTexShapeLocation:l}=kS(this.gpgpu,t.program,t.webGLProgram);t.variablesLocations=e,t.customUniformLocations=s,t.infLoc=r,t.nanLoc=i,t.outShapeLocation=o,t.outShapeStridesLocation=a,t.outTexShapeLocation=l}}createTensorFromGPUData(t,e,s){t.channels=t.channels||"RGBA";const{texture:r,height:i,width:o,channels:a}=t,l=os().backend;if(!l.gpgpu.gl.isTexture(r))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const c=l.writeTexture(r,e,s,i,o,a);return os().makeTensorFromDataId(c,e,s,l)}}fh.nextDataId=0;function gG(n,t){if(t==="float32"||t==="complex64")return n;if(t==="int32"||t==="bool"){const e=t==="int32"?new Int32Array(n.length):new Uint8Array(n.length);for(let s=0;s<e.length;++s)e[s]=Math.round(n[s]);return e}else throw new Error(`Unknown dtype ${t}`)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */y0()&&C0("webgl",()=>new fh,2);/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fg=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;class ri{constructor(t,e,s){this.variableNames=["A","B"],this.outputShape=Ct(e,s),this.enableShapeUniforms=Ue(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${t}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mi=`
  result.r = isNaN.r ? NAN : result.r;
  result.g = isNaN.g ? NAN : result.g;
  result.b = isNaN.b ? NAN : result.b;
  result.a = isNaN.a ? NAN : result.a;
`;class mo{constructor(t,e,s,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=Ct(e,s);const i=this.outputShape.length;this.enableShapeUniforms=Ue(i);let o="";if(r)if(i===0||W(this.outputShape)===1)o=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(o=`
          ${Wt(i)} coords = getOutputCoords();
        `,i===1)this.enableShapeUniforms?o+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:o+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{const l=Xe("coords",i);this.enableShapeUniforms?o+=`
            bool nextRowOutOfBounds =
              (${l[i-2]} + 1) >= outShape[${i} - 2];
            bool nextColOutOfBounds =
              (${l[i-1]} + 1) >= outShape[${i} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:o+=`
            bool nextRowOutOfBounds =
              (${l[i-2]} + 1) >= ${this.outputShape[i-2]};
            bool nextColOutOfBounds =
              (${l[i-1]} + 1) >= ${this.outputShape[i-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${t}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${o}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hn(n){const{inputs:t,backend:e}=n,{x:s}=t;return e.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const mG={kernelName:Na,backendName:"webgl",kernelFunc:hn};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _r(n){const{inputs:t,backend:e}=n,{real:s,imag:r}=t,i=e.makeTensorInfo(s.shape,"complex64"),o=e.texData.get(i.dataId),a=hn({inputs:{x:s},backend:e}),l=hn({inputs:{x:r},backend:e});return o.complexTensorInfos={real:a,imag:l},i}const xG={kernelName:ip,backendName:"webgl",kernelFunc:_r};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OS="return (a < 0.) ? b * a : a;",BS=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function yG(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{alpha:i}=s,o=e.makeTensorInfo([],"float32",pr(i,"float32")),a=O().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new mo(BS,r.shape,o.shape):new ri(OS,r.shape,o.shape),l=e.runWebGLProgram(a,[r,o],"float32");return e.disposeIntermediateTensorInfo(o),l}const bG={kernelName:lu,backendName:"webgl",kernelFunc:yG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LS="return (a < 0.) ? b * a : a;",VS=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function wG(n){const{inputs:t,backend:e}=n,{x:s,alpha:r}=t,i=O().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new mo(VS,s.shape,r.shape):new ri(LS,s.shape,r.shape);return e.runWebGLProgram(i,[s,r],"float32")}const CG={kernelName:$u,backendName:"webgl",kernelFunc:wG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xo="if (isnan(x)) return x;";function Dt({opSnippet:n,packedOpSnippet:t,cpuKernelImpl:e,dtype:s}){return({inputs:r,backend:i})=>{const{x:o}=r,a=i,l=s||o.dtype;if(a.shouldExecuteOnCPU([o])&&e!=null){const h=a.texData.get(o.dataId),d=e(h.values,l);return a.makeTensorInfo(o.shape,l,d)}const c=O().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&t!=null;let u;return c?u=new Qs(o.shape,t):u=new hs(o.shape,n),a.runWebGLProgram(u,[o],l)}}function Me({opSnippet:n,packedOpSnippet:t,checkOutOfBounds:e=!1,supportsComplex:s=!1,cpuKernelImpl:r,dtype:i}){return({inputs:o,backend:a})=>{const{a:l,b:c}=o,u=a;if(s&&l.dtype==="complex64"){const f=u.texData.get(l.dataId),m=u.texData.get(c.dataId),[g,x]=[[f.complexTensorInfos.real,m.complexTensorInfos.real],[f.complexTensorInfos.imag,m.complexTensorInfos.imag]].map(w=>{const[b,C]=w,_={dataId:b.dataId,dtype:b.dtype,shape:l.shape},I={dataId:C.dataId,dtype:C.dtype,shape:c.shape},v=new ri(n,l.shape,c.shape);return u.runWebGLProgram(v,[_,I],cn(b.dtype,C.dtype))}),y=_r({inputs:{real:g,imag:x},backend:u});return u.disposeIntermediateTensorInfo(g),u.disposeIntermediateTensorInfo(x),y}const h=i||cn(l.dtype,c.dtype);if((l.dtype==="string"||c.dtype==="string"||u.shouldExecuteOnCPU([l,c]))&&r!=null){const f=u.texData.get(l.dataId).values,m=u.texData.get(c.dataId).values,g=l.dtype==="string"?Fs(f):f,x=l.dtype==="string"?Fs(m):m,[y,w]=r(l.shape,c.shape,g,x,h),b=u.makeTensorInfo(w,h),C=u.texData.get(b.dataId);return C.values=y,b}const d=O().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&t!=null;let p;return d?p=new mo(t,l.shape,c.shape,e):p=new ri(n,l.shape,c.shape),u.runWebGLProgram(p,[l,c],h)}}function sa(n,t=!1){if(n==="linear")return t?nG:J4;if(n==="relu")return t?rG:Q4;if(n==="elu")return t?sG:Z4;if(n==="relu6")return t?iG:tG;if(n==="prelu")return t?VS:LS;if(n==="leakyrelu")return t?BS:OS;if(n==="sigmoid")return t?oG:eG;throw new Error(`Activation ${n} has not been implemented for the WebGL backend.`)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zS{constructor(t,e,s,r=!1,i=!1,o=!1,a=null,l=!1,c=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s,this.enableShapeUniforms=Ue(this.outputShape.length);const u=r?t[1]:t[2],h=Math.ceil(u/2),d=r?"i * 2, rc.y":"rc.y, i * 2",p=i?"rc.z, i * 2":"i * 2, rc.z",f=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],m=i?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let g="",x="";a&&(l?g=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${a}
        }`:c?g=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${a}
        }`:g=`vec4 activation(vec4 x) {
          ${a}
        }`,x="result = activation(result);");const y=o?"result += getBiasAtOutCoords();":"";o&&this.variableNames.push("bias"),l&&this.variableNames.push("preluActivationWeights"),c&&this.variableNames.push("leakyreluAlpha");let w="rc.x",b="rc.x";t[0]<e[0]?w=`imod(rc.x, ${t[0]})`:e[0]<t[0]&&(b=`imod(rc.x, ${e[0]})`),this.userCode=`
      ${g}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${h}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        int batchA = ${w};
        int batchB = ${b};
        for (int i = 0; i < ${h}; i++) {
          vec4 a = getMatrixA(batchA, ${d});
          vec4 b = getMatrixB(batchB, ${p});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${f[0]} * ${m[0]});
          result += (${f[1]} * ${m[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${y}

        ${x}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vy={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class ky{constructor(t,e,s){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=Ct(e,s),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${t}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $y="return a * b;";function Mg(n){const{inputs:t,backend:e}=n,{a:s,b:r}=t,i=cn(s.dtype,r.dtype);if(s.dtype==="complex64"){const a=e.texData.get(s.dataId),l=e.texData.get(r.dataId),c=new ky(vy.REAL,s.shape,r.shape),u=new ky(vy.IMAG,s.shape,r.shape),h=[{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:s.shape},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:s.shape},{dataId:l.complexTensorInfos.real.dataId,dtype:l.complexTensorInfos.real.dtype,shape:r.shape},{dataId:l.complexTensorInfos.imag.dataId,dtype:l.complexTensorInfos.imag.dtype,shape:r.shape}],d=e.runWebGLProgram(c,h,"float32"),p=e.runWebGLProgram(u,h,"float32"),f=_r({inputs:{real:d,imag:p},backend:e});return e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(p),f}if(e.shouldExecuteOnCPU([s,r])){const a=e.texData.get(s.dataId),l=e.texData.get(r.dataId),[c,u]=w4(s.shape,r.shape,a.values,l.values,i),h=e.makeTensorInfo(u,i),d=e.texData.get(h.dataId);return d.values=c,h}let o;return O().getBool("WEBGL_PACK_BINARY_OPERATIONS")?o=new mo($y,s.shape,r.shape):o=new ri($y,s.shape,r.shape),e.runWebGLProgram(o,[s,r],i)}const _G={kernelName:Ba,backendName:"webgl",kernelFunc:Mg};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SG(n,t,e){const s=[to(n.shape),...eo(n.shape)],r={dtype:n.dtype,shape:s,dataId:n.dataId},i=[to(t),...eo(t)],o=new PS(i,s),a=!0,l=[s],c=e.runWebGLProgram(o,[r],n.dtype,l,a);return{dataId:c.dataId,shape:t,dtype:c.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tt(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{shape:i}=s,o=e,a=W(r.shape),l=$b(i,a),c=W(l);S(a===c,()=>`The new shape (${l}) has ${c} elements and the old shape (${r.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`);const u=o.texData.get(r.dataId);return u.isPacked&&!Fc(r.shape,l)&&!(u.texture!==null&&Fc(u.shape,l))?SG(r,l,o):(o.incRef(r.dataId),{dataId:r.dataId,shape:l,dtype:r.dtype})}const IG={kernelName:Nu,backendName:"webgl",kernelFunc:tt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ty{constructor(t,e){this.variableNames=["x"];const{windowSize:s,batchSize:r,inSize:i,outSize:o}=t;this.outputShape=[r,o];const a=Math.floor(s/4)*4,l=s%4;let c="sumValue += dot(values, ones);";if(e!=null){const h=1/e;c=`sumValue += dot(values * ${Gi(h)?h.toPrecision(2):h}, ones);`}let u="";i%s>0&&(u=`
        if (inIdx < 0 || inIdx >= ${i}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${u}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        float sumValue = 0.0;

        for (int i = 0; i < ${a}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${c}
        }

        int inIdx = inOffset + ${a};
        if (${l===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${c}
        } else if (${l===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${c}
        } else if (${l===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${c}
        }
        setOutput(sumValue);
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vG{constructor(t,e){this.variableNames=["x"];const{windowSize:s,batchSize:r,inSize:i,outSize:o}=t;this.outputShape=[r,o];let a="0.0",l="";e==="prod"?a="1.0":e==="min"?(a="1.0 / 1e-20",l="min"):e==="max"&&(a="-1.0 / 1e-20",l="max");let c=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;e==="sum"?c="sumValue":e==="prod"?c="prodValue":e==="all"?c="allValue":e==="any"&&(c="anyValue");const u=Math.floor(s/4)*4,h=s%4;let d=`
      if (${e==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${e==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${l}(values, minMaxValue);
        if (${e==="min"} || ${e==="max"}) {
          minMaxValue = ${l}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,p="vec4";e==="all"?(a="1.0",d=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,p="bvec4"):e==="any"&&(a="0.0",d=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,p="bvec4");let f="";i%s>0&&(f=`
        if (inIdx < 0 || inIdx >= ${i}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${a};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${f}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        vec4 minMaxValue = vec4(${a});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${u}; i += 4) {
          int inIdx = inOffset + i;
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${d}
        }

        int inIdx = inOffset + ${u};
        if (${h===1}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${h===2}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${h===3}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${d}
        }
        setOutput(${c});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kG(n){const t=[];for(;t.length===0||t[t.length-1].outSize!==1;){const e=t.length?t[t.length-1].outSize:n[1],s=Zu(e);t.push({inSize:e,windowSize:s,outSize:Math.ceil(e/s)})}return t}function xi(n,t,e,s){const r=kG(n.shape);let i=n;for(let o=0;o<r.length;o++){const{inSize:a,windowSize:l,outSize:c}=r[o];let u,h;e==="mean"?u=o===0?new Ty({windowSize:l,inSize:a,batchSize:n.shape[0],outSize:c},a):new Ty({windowSize:l,inSize:a,batchSize:n.shape[0],outSize:c}):u=new vG({windowSize:l,inSize:a,batchSize:n.shape[0],outSize:c},e),h=i,i=s.runWebGLProgram(u,[i],t),h.dataId!==n.dataId&&s.disposeIntermediateTensorInfo(h)}return i}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $G{constructor(t,e){this.variableNames=["A"];const s=new Array(t.length);for(let o=0;o<s.length;o++)s[o]=t[e[o]];this.outputShape=s,this.rank=s.length;const r=Wt(this.rank),i=TG(e);this.userCode=`
    void main() {
      ${r} resRC = getOutputCoords();
      setOutput(getA(${i}));
    }
    `}}function TG(n){const t=n.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const e=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],s=new Array(t);for(let r=0;r<n.length;r++)s[n[r]]=e[r];return s.join()}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class NG{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const s=new Array(t.length);for(let u=0;u<s.length;u++)s[u]=t[e[u]];if(this.outputShape=s,this.rank=s.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=Wt(this.rank),i=MS("rc",this.rank),o=new Array(this.rank);for(let u=0;u<e.length;u++)o[e[u]]=i[u];const a=`vec2(${o.slice(-2).join()})`,l=`++${i[this.rank-1]} < ${s[this.rank-1]}`,c=`getChannel(getA(${o.join()}), ${a})`;this.userCode=`
    void main() {
      ${r} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${c};
      if(${l}) {
        result[1] = ${c};
      }
      --${i[this.rank-1]};
      if(++${i[this.rank-2]} < ${s[this.rank-2]}) {
        result[2] = ${c};
        if(${l}) {
          result[3] = ${c};
        }
      }
      setOutput(result);
    }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gh(n,t,e){const s=O().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new NG(n.shape,t):new $G(n.shape,t);return e.runWebGLProgram(s,[n],n.dtype)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EG(n,t,e,s){const r=t,i=n.shape.length,o=$t(r,n.shape);let a=o;const l=oe(a,i),c=l!=null;let u=n;c&&(u=gh(n,l,s),a=he(a.length,i)),Fe("sum",a,i);const[h,d]=Ne(u.shape,a);let p=h;e&&(p=xe(h,o));const f=W(d),g=W(n.shape)/f,x=tt({inputs:{x:u},attrs:{shape:[g,f]},backend:s}),y=Vp(n.dtype),w=xi(x,y,"sum",s),b=tt({inputs:{x:w},attrs:{shape:p},backend:s});return s.disposeIntermediateTensorInfo(x),s.disposeIntermediateTensorInfo(w),c&&s.disposeIntermediateTensorInfo(u),b}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mh(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:i,keepDims:o}=s;return EG(r,i,o,e)}const RG={kernelName:Mu,backendName:"webgl",kernelFunc:mh};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qe(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{perm:i}=s,o=e,a=r.shape.length,l=new Array(a);for(let u=0;u<l.length;u++)l[u]=r.shape[i[u]];let c;if(o.shouldExecuteOnCPU([r])){const h=o.texData.get(r.dataId).values,d=Ag(h,r.shape,r.dtype,i,l);c=o.makeTensorInfo(l,r.dtype);const p=o.texData.get(c.dataId);p.values=d}else c=gh(r,i,o);return c}const DG={kernelName:Bi,backendName:"webgl",kernelFunc:qe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const US=1e3;function Mc({a:n,b:t,transposeA:e,transposeB:s,backend:r,bias:i=null,preluActivationWeights:o=null,leakyreluAlpha:a=0,activation:l=null}){const c=n.shape.length,u=t.shape.length,h=e?n.shape[c-2]:n.shape[c-1],d=s?t.shape[u-1]:t.shape[u-2],p=e?n.shape[c-1]:n.shape[c-2],f=s?t.shape[u-2]:t.shape[u-1],m=n.shape.slice(0,-2),g=t.shape.slice(0,-2),x=W(m),y=W(g),b=Ct(n.shape.slice(0,-2),t.shape.slice(0,-2)).concat([p,f]);S(h===d,()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${n.shape} and ${t.shape} and transposeA=${e} and transposeB=${s} must match.`);const C=e?[x,h,p]:[x,p,h],_=s?[y,f,d]:[y,d,f],I=tt({inputs:{x:n},backend:r,attrs:{shape:C}}),v=tt({inputs:{x:t},backend:r,attrs:{shape:_}}),k=[I,v],T=Math.max(x,y),D=e?I.shape[1]:I.shape[2],P=i!=null,B=o!=null,V=l==="leakyrelu",L=l!=null?sa(l,!0):null,z=P||B||V||L!=null;let H;if((p===1||f===1)&&D>US&&z===!1){let X=I,q=v;e&&(X=qe({inputs:{x:I},backend:r,attrs:{perm:[0,2,1]}}),k.push(X)),s&&(q=qe({inputs:{x:v},backend:r,attrs:{perm:[0,2,1]}}),k.push(q));const K=f!==1,Z=f===1;let J=X;K&&(J=tt({inputs:{x:X},backend:r,attrs:{shape:[T,D,1]}}),k.push(J));const nt=f===1?2:1;let Q=q;Z&&(Q=tt({inputs:{x:q},backend:r,attrs:{shape:[T,1,D]}}),k.push(Q));const it=Mg({inputs:{a:J,b:Q},backend:r});H=mh({inputs:{x:it},backend:r,attrs:{axis:nt,keepDims:!0}}),k.push(it)}else{const X=cn(n.dtype,t.dtype),q=new zS(C,_,[T,p,f],e,s,P,L,B,V),K=[I,v];if(i!=null&&K.push(i),B&&K.push(o),V){const Z=r.makeTensorInfo([],"float32",pr(a,"float32"));K.push(Z),k.push(Z)}H=r.runWebGLProgram(q,K,X)}const G=tt({inputs:{x:H},backend:r,attrs:{shape:b}});k.push(H);for(const X of k)r.disposeIntermediateTensorInfo(X);return G}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AG(n){const{inputs:t,backend:e,attrs:s}=n,{a:r,b:i,bias:o,preluActivationWeights:a}=t,{transposeA:l,transposeB:c,activation:u,leakyreluAlpha:h}=s;return Mc({a:r,b:i,transposeA:l,transposeB:c,backend:e,bias:o,preluActivationWeights:a,leakyreluAlpha:h,activation:u})}const FG={kernelName:lc,backendName:"webgl",kernelFunc:AG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ny="return abs(x);";function MG(n){const{inputs:t,backend:e}=n,{x:s}=t;if(e.shouldExecuteOnCPU([s])&&s.dtype!=="complex64"){const i=e.texData.get(s.dataId),o=AS(i.values);return e.makeTensorInfo(s.shape,s.dtype,o)}let r;return O().getBool("WEBGL_PACK_UNARY_OPERATIONS")?r=new Qs(s.shape,Ny):r=new hs(s.shape,Ny),e.runWebGLProgram(r,[s],s.dtype)}const PG={kernelName:Uc,backendName:"webgl",kernelFunc:MG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OG=Bn+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,BG=Dt({opSnippet:OG}),LG={kernelName:ca,backendName:"webgl",kernelFunc:BG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VG=Bn+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,zG=Dt({opSnippet:VG}),UG={kernelName:ua,backendName:"webgl",kernelFunc:zG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ey="return a + b;",WG=Me({opSnippet:Ey,packedOpSnippet:Ey,supportsComplex:!0,cpuKernelImpl:QW}),GG={kernelName:ro,backendName:"webgl",kernelFunc:WG};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class HG{constructor(t,e){this.outputShape=[],this.outputShape=t,this.variableNames=e.map((i,o)=>`T${o}`);const s=[];this.variableNames.forEach(i=>{s.push(`float v${i} = get${i}AtOutCoords();`)});const r=this.variableNames.map(i=>`v${i}`).join(" + ");this.userCode=`
      void main() {
        ${s.join(`
        `)}

        float result = ${r};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class XG{constructor(t,e){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.variableNames=e.map((i,o)=>`T${o}`);const s=[];this.variableNames.forEach(i=>{s.push(`vec4 v${i} = get${i}AtOutCoords();`)});const r=this.variableNames.map(i=>`v${i}`).join(" + ");this.userCode=`
      void main() {
        ${s.join(`
        `)}

        vec4 result = ${r};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jl(n){const{inputs:t,backend:e}=n,s=t;if(s.length===1)return hn({inputs:{x:s[0]},backend:e});if(s.length>O().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const l=Math.floor(s.length/2),c=Jl({inputs:s.slice(0,l),backend:e}),u=Jl({inputs:s.slice(l),backend:e});return Jl({inputs:[c,u],backend:e})}const r=s.map(l=>l.dtype).reduce((l,c)=>cn(l,c)),i=s.map(l=>l.shape),a=O().getBool("WEBGL_PACK")?new XG(s[0].shape,i):new HG(s[0].shape,i);return e.runWebGLProgram(a,s,r)}const jG={kernelName:Zd,backendName:"webgl",kernelFunc:Jl};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qG(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:i,keepDims:o}=s,a=r.shape.length,l=$t(i,r.shape);let c=l;const u=oe(c,a);let h=r;u!=null&&(h=qe({inputs:{x:r},backend:e,attrs:{perm:u}}),c=he(c.length,a)),Fe("all",c,a);const[d,p]=Ne(h.shape,c),f=W(p),m=tt({inputs:{x:h},backend:e,attrs:{shape:[-1,f]}}),g=xi(m,m.dtype,"all",e);let x;if(o){const y=xe(d,l);x=tt({inputs:{x:g},backend:e,attrs:{shape:y}})}else x=tt({inputs:{x:g},backend:e,attrs:{shape:d}});return e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(g),u!=null&&e.disposeIntermediateTensorInfo(h),x}const KG={kernelName:Qd,backendName:"webgl",kernelFunc:qG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YG(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:i,keepDims:o}=s,a=r.shape.length,l=$t(i,r.shape);let c=l;const u=oe(c,a);let h=r;u!=null&&(h=qe({inputs:{x:r},backend:e,attrs:{perm:u}}),c=he(c.length,a)),Fe("any",c,a);const[d,p]=Ne(h.shape,c),f=W(p),m=tt({inputs:{x:h},backend:e,attrs:{shape:[-1,f]}}),g=xi(m,m.dtype,"any",e);let x;if(o){const y=xe(d,l);x=tt({inputs:{x:g},backend:e,attrs:{shape:y}})}else x=tt({inputs:{x:g},backend:e,attrs:{shape:d}});return e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(g),u!=null&&e.disposeIntermediateTensorInfo(h),x}const JG={kernelName:tp,backendName:"webgl",kernelFunc:YG};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ZG{constructor(t,e,s){this.variableNames=["A"];const{windowSize:r,batchSize:i,outSize:o}=t;s||this.variableNames.push("bestIndicesA"),this.outputShape=[i,o];const a=e==="max"?">":"<",l=s?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${r};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${r}; i++) {
          int inIdx = ${l};
          float candidate = getA(batch, inIdx);
          if (candidate ${a} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class QG{constructor(t,e,s,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,S(t.length>2,()=>`Packed arg${s.charAt(0).toUpperCase()+s.slice(1)} supports only inputs with rank above 2.`);const i=t[t.length-1],o=Math.ceil(i/e);this.outputShape=t.slice(0,-1),o>1&&this.outputShape.push(o),r||this.variableNames.push("bestIndicesA");const a=this.outputShape,l=a.length,c=Wt(l),u=Xe("coords",l);let h,d;if(o===1){d=l+1;const v=Wt(d);h=`
        ${v} sourceLocR = ${v}(${u.join()}, 0);
        ++${u[l-1]};
        ${v} sourceLocG = ${v}(${u.join()}, 0);
        ++${u[l-2]};
        ${v} sourceLocA = ${v}(${u.join()}, 0);
        --${u[l-1]};
        ${v} sourceLocB = ${v}(${u.join()}, 0);
        --${u[l-2]};`}else d=l,h=`
        ${c} sourceLocR = coords;
        ++${u[l-1]};
        ${c} sourceLocG = coords;
        ++${u[l-2]};
        ${c} sourceLocA = coords;
        --${u[l-1]};
        ${c} sourceLocB = coords;
        --${u[l-2]};`;const p=["x","y","z","w","u","v"].slice(0,d),f="."+p[d-1],m=p.map(v=>"int "+v),g=Xe("sourceLocR",d-1).concat("inIdx.r"),x=Xe("sourceLocG",d-1).concat("inIdx.g"),y=Xe("sourceLocB",d-1).concat("inIdx.b"),w=Xe("sourceLocA",d-1).concat("inIdx.a"),b=s==="max"?"greaterThan":"lessThan",C=r?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${g.join()}),
                             getBestIndicesAChannel(${x.join()}),
                             getBestIndicesAChannel(${y.join()}),
                             getBestIndicesAChannel(${w.join()})));`,_=`vec4(
            getAChannel(${g.join()}),
            hasNextCol ? getAChannel(${x.join()}) : 0.,
            hasNextRow ? getAChannel(${y.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${w.join()}) : 0.)`,I=r?"":`
      float getBestIndicesAChannel(${m.join()}) {
        return getChannel(getBestIndicesA(${p.join()}),
                                          vec2(${p.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${m.join()}) {
        return getChannel(getA(${p.join()}),
                               vec2(${p.slice(-2).join()}));
      }
      ${I}
      void main() {
        ${c} coords = getOutputCoords();
        bool hasNextCol = ${u[l-1]} < ${a[l-1]-1};
        bool hasNextRow = ${u[l-2]} < ${a[l-2]-1};
        ${h}
        ivec4 srcIdx = ivec4(sourceLocR${f}, sourceLocG${f},
          sourceLocB${f}, sourceLocA${f}) * ${e};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${_};

        for (int i = 0; i < ${e}; i++) {
          inIdx = srcIdx;
          ${C}
          vec4 candidate = ${_};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${b}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WS(n,t,e,s=null){let r=t.shape[0],i=t.shape[1];s!=null&&(r=s.shape[0],i=s.shape[1]);const o=Zu(i),a={windowSize:o,inSize:i,batchSize:r,outSize:Math.ceil(i/o)},l=new ZG(a,e,s==null),c=[t];s!=null&&c.push(s);const u=n.runWebGLProgram(l,c,"int32");if(u.shape[1]===1)return u;const h=WS(n,t,e,u);return n.disposeIntermediateTensorInfo(u),h}function GS(n,t,e,s=null){const r=s!=null?s.shape:t.shape,i=r[r.length-1],o=Zu(i),a=new QG(r,o,e,s==null),l=s==null?[t]:[t,s],c=n.runWebGLProgram(a,l,"int32");if(c.shape.length===t.shape.length){const u=GS(n,t,e,c);return n.disposeIntermediateTensorInfo(c),u}return c}function HS(n,t,e,s){const r=[e];if(Fe("arg"+s.charAt(0).toUpperCase()+s.slice(1),r,t.shape.length),!O().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const i=[],o=n.texData.get(t.dataId),a=o!==null&&o.isPacked;let l=t;a&&(l=n.unpackTensor(t),i.push(l));const[c,u]=Ne(l.shape,r),h=W(u),d=tt({inputs:{x:l},backend:n,attrs:{shape:[-1,h]}});i.push(d);const p=WS(n,d,s);i.push(p);const f=tt({inputs:{x:p},backend:n,attrs:{shape:c}});return i.forEach(m=>n.disposeIntermediateTensorInfo(m)),f}return GS(n,t,s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tH(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:i}=s;let o=$t(i,r.shape);const a=oe(o,r.shape.length);let l=r;const c=[];a!=null&&(l=qe({inputs:{x:r},backend:e,attrs:{perm:a}}),c.push(l),o=he(o.length,l.shape.length)),Fe("argMax",[o[0]],l.shape.length);const u=HS(e,l,o[0],"max");return c.forEach(h=>e.disposeIntermediateTensorInfo(h)),u}const eH={kernelName:Wc,backendName:"webgl",kernelFunc:tH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nH(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:i}=s;let o=$t(i,r.shape);const a=oe(o,r.shape.length);let l=r;const c=[];a!=null&&(l=qe({inputs:{x:r},backend:e,attrs:{perm:a}}),c.push(l),o=he(o.length,l.shape.length)),Fe("argMin",[o[0]],l.shape.length);const u=HS(e,l,o[0],"min");return c.forEach(h=>e.disposeIntermediateTensorInfo(h)),u}const sH={kernelName:Gc,backendName:"webgl",kernelFunc:nH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rH=Bn+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,iH=Dt({opSnippet:rH}),oH={kernelName:ha,backendName:"webgl",kernelFunc:iH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aH=Bn+"return log(x + sqrt(x * x + 1.0));",lH=Dt({opSnippet:aH}),cH={kernelName:da,backendName:"webgl",kernelFunc:lH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uH=Bn+`
  return atan(x);
`,hH=Dt({opSnippet:uH}),dH={kernelName:pa,backendName:"webgl",kernelFunc:hH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pH=Fg+`
  return atan(a, b);
`,fH=`
  vec4 result = atan(a, b);
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+mi+`
  return result;
`,gH=Me({opSnippet:pH,packedOpSnippet:fH}),mH={kernelName:ga,backendName:"webgl",kernelFunc:gH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xH=Bn+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,yH=Dt({opSnippet:xH}),bH={kernelName:fa,backendName:"webgl",kernelFunc:yH};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ra{constructor(t,e,s,r=!1,i=!1){if(this.variableNames=["x"],e==="avg"&&s)throw new Error("Cannot compute positions for average pool.");const o=t.filterWidth,a=t.strideHeight,l=t.strideWidth,c=t.dilationHeight,u=t.dilationWidth,h=t.effectiveFilterHeight,d=t.effectiveFilterWidth,p=t.padInfo.top,f=t.padInfo.left;this.outputShape=t.outShape;const m=e==="avg",g=`((batch  * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + d`,x=`(xR * ${t.inWidth} + xC) * ${t.inChannels} + d`;let y="0.0";if(m||(y="-1.0 / 1e-20"),s){const v=">=";this.userCode=`
        const ivec2 strides = ivec2(${a}, ${l});
        const ivec2 pads = ivec2(${p}, ${f});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${h};
              wR += ${c}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${d};
                wC += ${u}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${v} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${r?i?g:x:`wR * ${d} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const w="max";let b=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;e==="avg"&&(b="avgValue / max(count, 1.0)");const C=Math.floor(o/4)*4,_=o%4,I=`
      if (${m}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${w}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${a}, ${l});
      const ivec2 pads = ivec2(${p}, ${f});
      const float initializationValue = ${y};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${t.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${y});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${h};
            wR += ${c}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${t.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${C}; wC += 4) {
            int xC = xCCorner + wC * ${u};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              getValue(batch, xR, xC + 2 * ${u}, d),
              getValue(batch, xR, xC + 3 * ${u}, d)
            );

            ${I}
          }

          int xC = xCCorner + ${C};
          if (${_===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${I}
          } else if (${_===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              initializationValue,
              initializationValue
            );

            ${I}
          } else if (${_===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              getValue(batch, xR, xC + 2 * ${u}, d),
              initializationValue
            );

            ${I}
          }
        }
        setOutput(${b});
      }
    `}}class Pg{constructor(t,e,s,r=!1,i=!1){if(this.variableNames=["x"],e==="avg"&&s)throw new Error("Cannot compute positions for average pool.");const o=t.filterWidth,a=t.strideDepth,l=t.strideHeight,c=t.strideWidth,u=t.dilationDepth,h=t.dilationHeight,d=t.dilationWidth,p=t.effectiveFilterDepth,f=t.effectiveFilterHeight,m=t.effectiveFilterWidth,g=t.padInfo.front,x=t.padInfo.top,y=t.padInfo.left;this.outputShape=t.outShape;const w=e==="avg";let b="0.0";if(w||(b="-1.0 / 1e-20"),s){const T=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${a}, ${l}, ${c});
        const ivec3 pads = ivec3(${g}, ${x}, ${y});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${p};
              wD += ${u}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${t.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${f};
                wR += ${h}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${t.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${m};
                  wC += ${d}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${t.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${T} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${r?i?`(((batch * ${t.inDepth} + xD) * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`((xD * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`wD * ${f} * ${m} +
                      wR * ${m} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const C="max";let _=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;e==="avg"&&(_="avgValue / max(count, 1.0)");const I=Math.floor(o/4)*4,v=o%4,k=`
      if (${w}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${C}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${a}, ${l}, ${c});
      const ivec3 pads = ivec3(${g}, ${x}, ${y});
      const float initializationValue = ${b};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${t.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${b});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${p};
            wD += ${u}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${t.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${f};
            wR += ${h}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${I}; wC += 4) {
              int xC = xCCorner + wC * ${d};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                getValue(batch, xD, xR, xC + 3 * ${d}, ch)
              );

              ${k}
            }

            int xC = xCCorner + ${I};
            if (${v===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${k}
            } else if (${v===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                initializationValue,
                initializationValue
              );

              ${k}
            } else if (${v===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                initializationValue
              );

              ${k}
            }
          }
        }
        setOutput(${_});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wH(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t;_l(r,"avgPool");const{filterSize:i,strides:o,pad:a,dimRoundingMode:l}=s,c=1;S(Ve(o,c),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`);const u=Pn(r.shape,i,o,c,a,l);if(u.filterWidth===1&&u.filterHeight===1&&Pt(u.inShape,u.outShape))return hn({inputs:{x:r},backend:e});const h=new ra(u,"avg",!1);return e.runWebGLProgram(h,[r],"float32")}const CH={kernelName:Hc,backendName:"webgl",kernelFunc:wH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _H(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{filterSize:i,strides:o,pad:a,dimRoundingMode:l,dataFormat:c}=s,u=[1,1,1],h=Ps(r.shape,i,o,u,a,l,c),d=new Pg(h,"avg",!1);return e.runWebGLProgram(d,[r],"float32")}const SH={kernelName:Xc,backendName:"webgl",kernelFunc:_H};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class IH{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterHeight,s=t.filterWidth,r=t.strideHeight,i=t.strideWidth,o=t.dilationHeight,a=t.dilationWidth,l=t.effectiveFilterHeight,c=t.effectiveFilterWidth,u=l-1-t.padInfo.top,h=c-1-t.padInfo.left,d=1/(e*s);this.userCode=`
      const ivec2 pads = ivec2(${u}, ${h});
      const float avgMultiplier = float(${d});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${l};
            wR += ${o}) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${c};
            wC+= ${a}) {
            float dyC = float(dyCCorner + wC) / ${i}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}}class vH{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterDepth,s=t.filterHeight,r=t.filterWidth,i=t.strideDepth,o=t.strideHeight,a=t.strideWidth,l=t.dilationDepth,c=t.dilationHeight,u=t.dilationWidth,h=t.effectiveFilterDepth,d=t.effectiveFilterHeight,p=t.effectiveFilterWidth,f=h-1-t.padInfo.front,m=d-1-t.padInfo.top,g=p-1-t.padInfo.left,x=1/(e*s*r);this.userCode=`
      const ivec3 pads = ivec3(${f}, ${m}, ${g});
      const float avgMultiplier = float(${x});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${h};
            wD += ${l}) {
          float dyD = float(dyDCorner + wD) / ${i}.0;

          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${d};
              wR += ${c}) {
            float dyR = float(dyRCorner + wR) / ${o}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${p};
                wC += ${u}) {
              float dyC = float(dyCCorner + wC) / ${a}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kH(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,input:i}=t,o=i,{filterSize:a,strides:l,pad:c,dimRoundingMode:u}=s,h=[1,1,1],d=Ps(o.shape,a,l,h,c,u),p=new vH(d);return e.runWebGLProgram(p,[r],o.dtype)}const $H={kernelName:np,backendName:"webgl",kernelFunc:kH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TH(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,input:i}=t,o=i;_l([r,i],"avgPoolGrad");const{filterSize:a,strides:l,pad:c}=s,u=Pn(o.shape,a,l,1,c),h=new IH(u);return e.runWebGLProgram(h,[r],o.dtype)}const NH={kernelName:ep,backendName:"webgl",kernelFunc:TH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EH(n){const{inputs:t,backend:e,attrs:s}=n,{a:r,b:i}=t,{transposeA:o,transposeB:a}=s;return Mc({a:r,b:i,transposeA:o,transposeB:a,backend:e})}const RH={kernelName:jc,backendName:"webgl",kernelFunc:EH};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class DH{constructor(t,e,s,r,i,o){this.outputShape=[],this.variableNames=["x","mean","variance"],Ct(t,e),Ct(t,s);let a="0.0";r!=null&&(Ct(t,r),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let l="1.0";i!=null&&(Ct(t,i),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${a};
        float scale = ${l};
        float inv = scale * inversesqrt(variance + float(${o}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class AH{constructor(t,e,s,r,i,o){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],Ct(t,e),Ct(t,s);let a="vec4(0.0)";r!=null&&(Ct(t,r),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let l="vec4(1.0)";i!=null&&(Ct(t,i),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`
      void main() {
        vec4 offset = ${a};
        vec4 scale = ${l};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${o}));

        setOutput((x - mean) * inv + offset);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FH=({inputs:n,backend:t,attrs:e})=>{const{x:s,mean:r,variance:i,offset:o,scale:a}=n;S(r.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),S(o==null||r.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),S(a==null||r.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:l}=e;l==null&&(l=.001);const c=[s,r,i];let u=null;o!=null&&(u=o.shape,c.push(o));let h=null;a!=null&&(h=a.shape,c.push(a));const d=O().getBool("WEBGL_PACK_NORMALIZATION")?new AH(s.shape,r.shape,i.shape,u,h,l):new DH(s.shape,r.shape,i.shape,u,h,l);return t.runWebGLProgram(d,c,c[0].dtype)},MH={kernelName:iu,backendName:"webgl",kernelFunc:FH};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class PH{constructor(t){this.variableNames=["source"],this.outputShape=t,this.rank=t.length;const e=Wt(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const s=OH(this.rank);let r;const i=t.map((o,a)=>`sourceLoc.${Ad[a]} = start[${a}] + coords.${Ad[a]};`);r=`
        ${e} sourceLoc;
        ${e} coords = getOutputCoords();
        ${i.join(`
`)}
      `,this.userCode=`
      void main() {
        ${r}
        setOutput(getSource(${s}));
      }
    `}}const Ad=["x","y","z","w","u","v"];function OH(n){if(n===1)return"sourceLoc";if(n<=6)return Ad.slice(0,n).map(t=>"sourceLoc."+t).join(",");throw Error(`Slicing for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class BH{constructor(t){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.rank=t.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const e=Wt(this.rank),s=Xe("coords",this.rank),r=Xe("sourceLoc",this.rank),i=this.rank===1?"sourceLoc":`vec2(${r.slice(-2).join()})`,o=`getChannel(getSource(${r.join()}), ${i})`,a=`
      result.x = ${o};
      if (++${s[this.rank-1]} < ${t[this.rank-1]}) {
        ++${r[this.rank-1]};
        result.y = ${o};
        --${r[this.rank-1]};
      }
    `,l=this.rank===1?"":`
      --${s[this.rank-1]};
      if (++${s[this.rank-2]} < ${t[this.rank-2]}) {
        ++${r[this.rank-2]};
        result.z = ${o};
        if (++${s[this.rank-1]} < ${t[this.rank-1]}) {
          ++${r[this.rank-1]};
          result.w = ${o};
        }
      }
    `,c=this.rank<=4?`sourceLoc = coords +
            ${e}(${t.map((u,h)=>`start[${h}]`).join()});`:t.map((u,h)=>`${r[h]} = ${s[h]} + start[${h}];`).join(`
`);this.userCode=`
      void main() {
        ${e} coords = getOutputCoords();
        ${e} sourceLoc;
        ${c}
        vec4 result = vec4(0.);
        ${a}
        ${l}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LH(n,t,e,s){const r=s.texData.get(n.dataId),i=s.makeTensorInfo(e,n.dtype),o=s.texData.get(i.dataId);Object.assign(o,r),o.refCount=1,o.shape=e,o.dtype=n.dtype;let a=Rf(t,ht(n.shape));r.slice&&(a+=r.slice.flatOffset),o.slice={flatOffset:a,origDataId:r.slice&&r.slice.origDataId||n.dataId};const l=s.dataRefCount.get(o.slice.origDataId)||1;return s.dataRefCount.set(o.slice.origDataId,l+1),i}function yo(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{begin:i,size:o}=s,[a,l]=Ju(r,i,o);if(Tf(r,a,l),W(l)===0)return e.makeTensorInfo(l,r.dtype,[]);if(e.shouldExecuteOnCPU([r])||r.dtype==="string"){const h=e.texData.get(r.dataId),d=R4(h.values,a,l,r.shape,r.dtype);return e.makeTensorInfo(l,r.dtype,d)}const{isPacked:c}=e.texData.get(r.dataId),u=Ef(r.shape,a,l);if(c||!u){const h=O().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new BH(l):new PH(l),d=[a];return e.runWebGLProgram(h,[r],r.dtype,d)}return e.uploadToGPU(r.dataId),LH(r,a,l,e)}const VH={kernelName:Fu,backendName:"webgl",kernelFunc:yo};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zH=n=>{const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{blockShape:i,crops:o}=s;S(r.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const a=i.reduce((y,w)=>y*w),l=cl(r.shape,i,a),c=ul(l.length,i.length),u=hl(r.shape,i,a),h=Pf(o,i.length),d=Of(u,o,i.length),p=[],f=tt({inputs:{x:r},backend:e,attrs:{shape:l}}),m=qe({inputs:{x:f},backend:e,attrs:{perm:c}}),g=tt({inputs:{x:m},backend:e,attrs:{shape:u}}),x=yo({inputs:{x:g},backend:e,attrs:{begin:h,size:d}});return p.push(f),p.push(m),p.push(g),p.forEach(y=>e.disposeIntermediateTensorInfo(y)),x},UH={kernelName:qc,backendName:"webgl",kernelFunc:zH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WH(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,weights:i}=t,{size:o}=s,a=e.readSync(r.dataId),l=e.readSync(i.dataId),c=DS(a,l,i.dtype,i.shape,o);return e.makeTensorInfo([o],i.dtype,c)}const GH={kernelName:sp,backendName:"webgl",kernelFunc:WH};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HH=`
  int r = int(a.r) & int(b.r);
  int g = int(a.g) & int(b.g);
  int rb = int(a.b) & int(b.b);
  int ra = int(a.a) & int(b.a);
  return vec4(r, g, rb, ra);
`,XH=`
  return float(int(a.r) & int(b.r));
`;function jH(n){const{inputs:t,backend:e}=n,{a:s,b:r}=t,i=O().getBool("WEBGL_PACK_BINARY_OPERATIONS"),o=O().getNumber("WEBGL_VERSION");if(e.shouldExecuteOnCPU([s,r])||o===1){const l=e.texData.get(s.dataId).values,c=e.texData.get(r.dataId).values,[u,h]=e4(s.shape,r.shape,l,c,s.dtype),d=e.makeTensorInfo(h,s.dtype),p=e.texData.get(d.dataId);return p.values=u,d}let a;return i?a=new mo(HH,s.shape,r.shape,!1):a=new ri(XH,s.shape,r.shape),e.runWebGLProgram(a,[s,r],s.dtype)}const qH={kernelName:rp,backendName:"webgl",kernelFunc:jH};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KH(n){const{inputs:t,backend:e}=n,{s0:s,s1:r}=t,i=e.readSync(s.dataId),o=e.readSync(r.dataId),a=Ct(Array.from(i),Array.from(o));return e.makeTensorInfo([a.length],"int32",Int32Array.from(a))}const YH={kernelName:Ab,backendName:"webgl",kernelFunc:KH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JH="return float(a != b);",XS=Me({opSnippet:JH,cpuKernelImpl:_4,dtype:"bool"}),ZH={kernelName:_u,backendName:"webgl",kernelFunc:XS};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Il(n){const{inputs:t,backend:e}=n,{input:s}=t,r=e.texData.get(s.dataId);return hn({inputs:{x:r.complexTensorInfos.real},backend:e})}const QH={kernelName:Np,backendName:"webgl",kernelFunc:Il};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tX="return float(int(x));";function eX(n,t){const e=new hs(n.shape,tX),s=t.runWebGLProgram(e,[n],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fd(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{dtype:i}=s;if(i==="complex64"){if(r.dtype==="complex64")return hn({inputs:{x:r},backend:e});const o=$e(r.shape),a=Fd({inputs:{x:r},backend:e,attrs:{dtype:"float32"}}),l=_r({inputs:{real:a,imag:o},backend:e});return o.dispose(),e.disposeIntermediateTensorInfo(a),l}if(r.dtype==="complex64"){const o=Il({inputs:{input:r},backend:e}),a=Fd({inputs:{x:o},backend:e,attrs:{dtype:i}});return e.disposeIntermediateTensorInfo(o),a}if(!Tb(r.dtype,i)){const o=hn({inputs:{x:r},backend:e});return{dataId:o.dataId,shape:o.shape,dtype:i}}if(e.shouldExecuteOnCPU([r])){const o=e.texData.get(r.dataId).values,[a,l,c]=n4(o,r.shape,r.dtype,i);return e.makeTensorInfo(a,l,c)}if(i==="int32")return eX(r,e);if(i==="bool"){const o=e.makeTensorInfo([],"bool",Oe("bool",1)),l=XS({inputs:{a:r,b:o},backend:e});return e.disposeIntermediateTensorInfo(o),l}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${i}`)}const nX={kernelName:ma,backendName:"webgl",kernelFunc:Fd};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ry="return ceil(x);",sX=Dt({opSnippet:Ry,packedOpSnippet:Ry,cpuKernelImpl:s4}),rX={kernelName:xa,backendName:"webgl",kernelFunc:sX};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class iX{constructor(t){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=t,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class oX{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=t,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aX(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{clipValueMin:i,clipValueMax:o}=s;let a;O().getBool("WEBGL_PACK_CLIP")?a=new oX(r.shape):a=new iX(r.shape);const l=[[i],[o]];return e.runWebGLProgram(a,[r],r.dtype,l)}const lX={kernelName:ya,backendName:"webgl",kernelFunc:aX};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cX{constructor(t){this.variableNames=["real","imag"],this.outputShape=t,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dy(n,t){return{dataId:t.dataId,dtype:t.dtype,shape:n.shape}}function uX(n){const{inputs:t,backend:e}=n,{x:s}=t,r=e.texData.get(s.dataId),i=new cX(s.shape),o=[Dy(s,r.complexTensorInfos.real),Dy(s,r.complexTensorInfos.imag)];return e.runWebGLProgram(i,o,o[0].dtype)}const hX={kernelName:Kc,backendName:"webgl",kernelFunc:uX};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dX{constructor(t){this.outputShape=[],this.outputShape=fs(t,1),this.variableNames=t.map((o,a)=>`T${a}`);const e=new Array(t.length-1);e[0]=t[0][1];for(let o=1;o<e.length;o++)e[o]=e[o-1]+t[o][1];const s=[`if (yC < ${e[0]}) setOutput(getT0(yR, yC));`];for(let o=1;o<e.length;o++){const a=e[o-1];s.push(`else if (yC < ${e[o]}) setOutput(getT${o}(yR, yC-${a}));`)}const r=e.length,i=e[e.length-1];s.push(`else setOutput(getT${r}(yR, yC-${i}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${s.join(`
        `)}
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pX{constructor(t,e){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=fs(t,e);const s=this.outputShape,r=s.length,i=Wt(r),o=Xe("coords",r),a=["x","y","z","w","u","v"].slice(0,r);this.variableNames=t.map((m,g)=>`T${g}`);const l=new Array(t.length-1);l[0]=t[0][e];for(let m=1;m<l.length;m++)l[m]=l[m-1]+t[m][e];const c=a[e],u=a.slice(-2),h=a.join();let d=`if (${c} < ${l[0]}) {
        return getChannel(
            getT0(${h}), vec2(${u.join()}));
        }`;for(let m=1;m<l.length;m++){const g=l[m-1];d+=`
        if (${c} < ${l[m]}  && ${c} >= ${l[m-1]}) {
          return getChannel(
            getT${m}(${Xl(a,c,g)}),
            vec2(${Xl(u,c,g)}));
        }`}const p=l.length,f=l[l.length-1];d+=`
        return getChannel(
          getT${p}(${Xl(a,c,f)}),
          vec2(${Xl(u,c,f)}));`,this.userCode=`
      float getValue(${a.map(m=>"int "+m)}) {
        ${d}
      }

      void main() {
        ${i} coords = getOutputCoords();
        vec4 result = vec4(getValue(${o}), 0., 0., 0.);

        ${o[r-1]} = ${o[r-1]} + 1;
        if (${o[r-1]} < ${s[r-1]}) {
          result.g = getValue(${o});
        }

        ${o[r-2]} = ${o[r-2]} + 1;
        if (${o[r-2]} < ${s[r-2]}) {
          result.a = getValue(${o});
        }

        ${o[r-1]} = ${o[r-1]} - 1;
        if (${o[r-2]} < ${s[r-2]} &&
            ${o[r-1]} < ${s[r-1]}) {
          result.b = getValue(${o});
        }
        setOutput(result);
      }
    `}}function Xl(n,t,e){const s=n.indexOf(t);return n.map((i,o)=>o===s?`${i} - ${e}`:i).join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xh(n){const{inputs:t,backend:e}=n,{input:s}=t,r=e.texData.get(s.dataId);return hn({inputs:{x:r.complexTensorInfos.imag},backend:e})}const fX={kernelName:Cp,backendName:"webgl",kernelFunc:xh};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ao(n,t,e){const s=n[0].dtype;if(s==="complex64"){const p=n.map(y=>Il({inputs:{input:y},backend:e})),f=n.map(y=>xh({inputs:{input:y},backend:e})),m=Ao(p,t,e),g=Ao(f,t,e),x=_r({inputs:{real:m,imag:g},backend:e});return p.forEach(y=>e.disposeIntermediateTensorInfo(y)),f.forEach(y=>e.disposeIntermediateTensorInfo(y)),e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(g),x}let r=e.shouldExecuteOnCPU(n);if(s==="string"&&(r=!0),r){const p=n.map(b=>{const _=[-1,W(b.shape.slice(t))];return tt({inputs:{x:b},backend:e,attrs:{shape:_}})}),f=p.map(b=>({vals:e.readSync(b.dataId),shape:b.shape})),m=fs(p.map(b=>b.shape),1),g=p[0].shape[0]===1,x=r4(f,m,s,g),y=fs(n.map(b=>b.shape),t),w=e.makeTensorInfo(y,s,x);return p.forEach(b=>e.disposeIntermediateTensorInfo(b)),w}const i=n.filter(p=>W(p.shape)>0),o=O().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&i[0].shape.length>1;if(i.length===1){const p=o?new hs(n[0].shape,js):new Qs(n[0].shape,js);return e.runWebGLProgram(p,n,s)}const a=O().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(i.length>a){const p=[];for(let m=0;m<i.length;m+=a){const g=i.slice(m,m+a);p.push(Ao(g,t,e))}const f=Ao(p,t,e);for(const m of p)e.disposeIntermediateTensorInfo(m);return f}if(o){const p=new pX(i.map(f=>f.shape),t);return e.runWebGLProgram(p,i,s)}const{tensors2D:l,outShape:c}=gX(i,t,e),u=new dX(l.map(p=>p.shape)),h=e.runWebGLProgram(u,l,s);l.forEach(p=>e.disposeIntermediateTensorInfo(p));const d=tt({inputs:{x:h},attrs:{shape:c},backend:e});return e.disposeIntermediateTensorInfo(h),d}function gX(n,t,e){const s=fs(n.map(i=>i.shape),t);return{tensors2D:n.map(i=>tt({inputs:{x:i},attrs:{shape:[-1,W(i.shape.slice(t))]},backend:e})),outShape:s}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jS(n){const{inputs:t,backend:e,attrs:s}=n,{axis:r}=s,i=$t(r,t[0].shape)[0],o=t.map(c=>c.shape);Af(o,i);const a=fs(t.map(c=>c.shape),i);if(W(a)===0)return e.makeTensorInfo(a,t[0].dtype,[]);const l=t.filter(c=>W(c.shape)>0);return l.length===1?hn({inputs:{x:l[0]},backend:e}):Ao(l,i,e)}const mX={kernelName:Yc,backendName:"webgl",kernelFunc:jS};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qS{constructor(t,e=!1,s=null,r=!1,i=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;const o=t.padInfo.top,a=t.padInfo.left,l=t.strideHeight,c=t.strideWidth,u=t.dilationHeight,h=t.dilationWidth,d=t.filterHeight,p=t.filterWidth,f=Math.floor(t.inChannels/4)*4,m=t.inChannels%4,g=t.dataFormat==="channelsLast",x=g?1:2,y=g?2:3,w=g?3:1;let b="",C="";s&&(r?b=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:i?b=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:b=`
          float activation(float x) {
            ${s}
          }
        `,C="result = activation(result);");const _=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),i&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${b}

      const ivec2 strides = ivec2(${l}, ${c});
      const ivec2 pads = ivec2(${o}, ${a});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${w}];

        ivec2 xRCCorner =
            ivec2(coords[${x}], coords[${y}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${d}; wR++) {
          int xR = xRCorner + wR * ${u};

          if (xR < 0 || xR >= ${t.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${p}; wC++) {
            int xC = xCCorner + wC * ${h};

            if (xC < 0 || xC >= ${t.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${f}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${g}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${m===1}) {

              if (${g}) {
                dotProd +=
                    getX(batch, xR, xC, ${f}) *
                    getW(wR, wC, ${f}, d2);
              } else {
                dotProd +=
                    getX(batch, ${f}, xR, xC) *
                    getW(wR, wC, ${f}, d2);
              }

            } else if (${m===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${f}, d2),
                getW(wR, wC, ${f} + 1, d2)
              );

              if (${g}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${f}),
                  getX(batch, xR, xC, ${f} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${f}, xR, xC),
                  getX(batch, ${f} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${m===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${f}, d2),
                getW(wR, wC, ${f} + 1, d2),
                getW(wR, wC, ${f} + 2, d2)
              );

              if (${g}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${f}),
                  getX(batch, xR, xC, ${f} + 1),
                  getX(batch, xR, xC, ${f} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${f}, xR, xC),
                  getX(batch, ${f} + 1, xR, xC),
                  getX(batch, ${f} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${_}
        ${C}
        setOutput(result);
      }
    `}}class xX{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const e=t.padInfo.front,s=t.padInfo.top,r=t.padInfo.left,i=t.strideDepth,o=t.strideHeight,a=t.strideWidth,l=t.dilationDepth,c=t.dilationHeight,u=t.dilationWidth,h=t.filterDepth,d=t.filterHeight,p=t.filterWidth,f=Math.floor(t.inChannels/4)*4,m=t.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${i}, ${o}, ${a});
      const ivec3 pads = ivec3(${e}, ${s}, ${r});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${h}; wF++) {
          int xF = xFCorner + wF * ${l};

          if (xF < 0 || xF >= ${t.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${d}; wR++) {
            int xR = xRCorner + wR * ${c};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${p}; wC++) {
              int xC = xCCorner + wC * ${u};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${f}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${m===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${f}) *
                  getW(wF, wR, wC, ${f}, d2);
              } else if (${m===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${f}),
                  getX(batch, xF, xR, xC, ${f} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${f}, d2),
                  getW(wF, wR, wC, ${f} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${m===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${f}),
                  getX(batch, xF, xR, xC, ${f} + 1),
                  getX(batch, xF, xR, xC, ${f} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${f}, d2),
                  getW(wF, wR, wC, ${f} + 1, d2),
                  getW(wF, wR, wC, ${f} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class KS{constructor(t,e=!1,s=null,r=!1,i=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=Ue(this.outputShape.length);const o=t.padInfo.left,a=t.strideWidth,l=t.dilationWidth,c=t.filterHeight,u=t.filterWidth,h=u;let d=`
       int xR; int xC; int xCOffset;
       vec4 wTexel; vec4 previous; vec4 final;`;for(let g=0;g<u;g++)d+=`
           vec4 xTexelC${g*2};
           int xTexelC${g*2}Ready;
           vec4 xTexelC${g*2+1};
           int xTexelC${g*2+1}Ready;
           vec4 xC${g};`;d+=`
     for (int r = 0; r < ${c}; r++) {
      for (int d1 = 0; d1 < ${t.inChannels}; d1 += 2) {
       `;for(let g=0;g<u;g++)d+=`
           xTexelC${g*2} = vec4(0.0);
           xTexelC${g*2}Ready = 0;
           xTexelC${g*2+1} = vec4(0.0);
           xTexelC${g*2+1}Ready = 0;
           xC${g} = vec4(0.0);`;d+=`
         xR = xRCorner + r * dilations[0];
         if (xR >=0 && xR < inDims[0]) {
       `;for(let g=0;g<(h+1)/2;g++){const x=g*2;if(d+=`
           xC = xCCorner + ${x*l};
           `,a===1){if(x<u&&(o%2===1?(d+=`
                 xCOffset = xC + 1;
                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x}Ready == 0) {
                   xTexelC${x} = getX(batch, xR, xCOffset, d1);

                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${x}.zw = vec2(0.0);
                   }
                   xTexelC${x}Ready = 1;
                 }
               `,l===1&&x>0?d+=`
                 xC${x} = vec4(xTexelC${x-2}.zw, xTexelC${x}.xy);
                 `:d+=`
                   xCOffset = xC + 1 - 2;

                   if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       previous.zw = vec2(0.0);
                     }

                     xC${x} = vec4(previous.zw, xTexelC${x}.xy);
                   } else {
                     xC${x} = vec4(0.0, 0.0, xTexelC${x}.xy);
                   }
                   `):d+=`
                 if (xC >= 0 && xC < inDims[1] && xTexelC${x}Ready == 0) {
                   xTexelC${x} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${x}.zw = vec2(0.0);
                   }
                   xTexelC${x}Ready = 1;
                 }

                 xC${x} = xTexelC${x};
                 `,x+1<u)){const y=o%2===0?jd(l):l;l%2===0&&o%2===1||l%2!==0&&o%2!==1?(d+=`
                   xCOffset = xC + imod(pads[1], 2) + ${y};

                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                     xTexelC${x+1} = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       xTexelC${x+1}.zw = vec2(0.0);
                     }
                     xTexelC${x+1}Ready = 1;
                   }
                   `,l>1?d+=`
                     xCOffset -= 2;
                     if (xCOffset >= 0 && xCOffset < inDims[1]) {
                      previous = getX(batch, xR, xCOffset, d1);
                      xC${x+1} = vec4(previous.zw, xTexelC${x+1}.xy);
                     } else {
                      xC${x+1} = vec4(0.0, 0.0, xTexelC${x+1}.xy);
                     }
                     `:d+=`
                     xC${x+1} = vec4(xTexelC${x}.zw, xTexelC${x+1}.xy);
                     `):y===1?d+=`
                     xC${x+1} = xTexelC${x};
                     `:d+=`
                     xCOffset = xC + ${y};

                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                       xTexelC${x+1} = getX(batch, xR, xCOffset, d1);
                       if (xCOffset + 1 >= inDims[1]) {
                         xTexelC${x+1}.zw = vec2(0.0);
                       }
                       xTexelC${x+1}Ready = 1;
                     }

                     xC${x+1} = xTexelC${x+1};
                     `}}else x<u&&(o%2===1?(d+=`
                 xCOffset = xC + 1 - strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x}Ready == 0) {
                   xTexelC${x} = getX(batch, xR, xCOffset, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${x}.zw = vec2(0.0);
                   }
                   xTexelC${x}Ready = 1;
                 }

                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${x+1}Ready == 0) {
                   xTexelC${x+1} = getX(batch, xR, xC + 1, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xC + 2 >= inDims[1]) {
                     xTexelC${x+1}.zw = vec2(0.0);
                   }
                   xTexelC${x+1}Ready = 1;
                 }

                 xC${x} = vec4(xTexelC${x}.zw, xTexelC${x+1}.zw);
               `,x+1<u&&(d+=`
                   final = vec4(0.0);
                   xCOffset = xC + 1 + strides[1];
                   if(xCOffset >= 0 && xCOffset < inDims[1]) {
                     final = getX(batch, xR, xCOffset, d1);
                   }
                   xC${x+1} = vec4(xTexelC${x+1}.xy, final.xy);
                 `)):(d+=`
                 if(xC >= 0 && xC < inDims[1] && xTexelC${x}Ready == 0) {
                   xTexelC${x} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${x}.zw = vec2(0.0);
                   }
                   xTexelC${x}Ready = 1;
                 }

                 xCOffset = xC + strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                   xTexelC${x+1} = getX(batch, xR, xCOffset, d1);
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${x+1}.zw = vec2(0.);
                   }
                   xTexelC${x+1}Ready = 1;
                 }

                 xC${x} = vec4(
                   xTexelC${x}.xy, xTexelC${x+1}.xy);
               `,x+1<u&&(d+=`
                   xC${x+1} = vec4(xTexelC${x}.zw, xTexelC${x+1}.zw);
                 `)));x<u&&(d+=`
             wTexel = getW(r, ${x}, d1, d2);
             dotProd += xC${x}.xxzz * vec4(wTexel.xy, wTexel.xy);
             if(d1 + 1 < ${t.inChannels}) {
               dotProd += xC${x}.yyww * vec4(wTexel.zw, wTexel.zw);
             }
           `,x+1<u&&(d+=`
               wTexel = getW(r, ${x+1}, d1, d2);
               dotProd += xC${x+1}.xxzz * vec4(wTexel.xy, wTexel.xy);
               if(d1 + 1 < ${t.inChannels}) {
                 dotProd += xC${x+1}.yyww * vec4(wTexel.zw, wTexel.zw);
               }
             `))}d+=`
     }
   `,d+=`
     }
   `,d+=`
     }
   `;let p="",f="";s&&(r?p=`vec4 activation(vec4 a) {
           vec4 b = getPreluActivationWeightsAtOutCoords();
           ${s}
         }`:i?p=`vec4 activation(vec4 a) {
           vec4 b = getLeakyreluAlphaAtOutCoords();
           ${s}
         }`:p=`vec4 activation(vec4 x) {
           ${s}
         }`,f="result = activation(result);");const m=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),i&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
       ${p}

       void main() {
         ivec4 coords = getOutputCoords();
         int batch = coords.x;
         ivec2 xRCCorner = coords.yz * strides - pads;
         int d2 = coords.w;
         int xRCorner = xRCCorner.x;
         int xCCorner = xRCCorner.y;

         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
         vec4 dotProd = vec4(0.000000000000001);

         ${d}

         vec4 result = dotProd - vec4(0.000000000000001);
         ${m}
         ${f}
         setOutput(result);
       }
     `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yX{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=t,this.enableShapeUniforms=Ue(this.outputShape.length);const{dataFormat:s}=e,r=Ke(),i=s==="channelsLast",o=i?1:2,a=i?2:3,l=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${t[2]} && pos < ${t[1]}) {`;let c="";for(let u=0;u<=1;u++)for(let h=0;h<=1;h++)c+=`
          blockIndex = rc.z + ${h};
          pos = rc.y + ${u};

          ${l}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${o}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${a}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${i}) {
                  innerDims = vec2(d1, ch);
                  result[${u*2+h}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${u*2+h}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${c}

        ${r.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pc(n,t){const e=n.length;return e>=3?t?[...n.slice(0,-3),n[e-3]*n[e-2],n[e-1]]:[...n.slice(0,-3),n[e-3],n[e-2]*n[e-1]]:!t&&e===1&&n[0]>1?[n[0],1]:null}function YS({x:n,filter:t,convInfo:e,backend:s,bias:r=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:a=null}){const l=n.shape,c=s.texData.get(n.dataId),u=e.inChannels,h=l[0]*l[1]*l[2],d=e.outChannels,p=e.dataFormat==="channelsLast",f=!1,m=!1;let g;const x=[];if(i!=null){const b=Pc(i.shape,p);b!=null&&(i=tt({inputs:{x:i},backend:s,attrs:{shape:b}}),x.push(i))}if(r!=null){const b=Pc(r.shape,p);b!=null&&(r=tt({inputs:{x:r},backend:s,attrs:{shape:b}}),x.push(r))}if(!((h===1||d===1)&&u>US)&&c.isPacked&&p&&c.texture!=null&&l[2]%2!==0&&Pt(c.shape.slice(-3),l.slice(-3))){const b=l[0]*l[1]*(l[2]+1),C={dataId:n.dataId,shape:[1,b,e.inChannels],dtype:n.dtype},_=c.shape;c.shape=c.shape.slice(),c.shape[c.shape.length-2]++,S(Fc(c.shape,C.shape),()=>`packed reshape ${c.shape} to ${C.shape} isn't free`);const I=tt({inputs:{x:t},backend:s,attrs:{shape:[1,e.inChannels,e.outChannels]}});x.push(I);const v=Mc({a:C,b:I,backend:s,transposeA:f,transposeB:m,bias:r,activation:a,preluActivationWeights:i,leakyreluAlpha:o}),k=s.texData.get(v.dataId);S(k.isPacked,()=>"batchMatMul result is expected to be packed"),c.shape=_,k.shape=e.outShape,g=hn({inputs:{x:v},backend:s}),g.shape=e.outShape,x.push(v)}else{const b=e.outHeight*e.outWidth,C=tt({inputs:{x:n},backend:s,attrs:{shape:p?[e.batchSize,b,e.inChannels]:[e.batchSize,e.inChannels,b]}}),_=tt({inputs:{x:t},backend:s,attrs:{shape:[1,e.inChannels,e.outChannels]}}),I=Mc({a:p?C:_,b:p?_:C,transposeA:!p,transposeB:m,backend:s,bias:r,activation:a,preluActivationWeights:i,leakyreluAlpha:o});g=tt({inputs:{x:I},backend:s,attrs:{shape:e.outShape}}),x.push(C),x.push(_),x.push(I)}for(const b of x)s.disposeIntermediateTensorInfo(b);return g}function JS({x:n,filter:t,convInfo:e,backend:s,bias:r=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:a=null}){const{filterWidth:l,filterHeight:c,inChannels:u,outWidth:h,outHeight:d,dataFormat:p}=e,f=p==="channelsLast",m=l*c*u,g=d*h,x=[e.batchSize,m,g],y=!0,w=!1,b=[];if(i!=null){const G=Pc(i.shape,f);G!=null&&(i=tt({inputs:{x:i},backend:s,attrs:{shape:G}}),b.push(i))}if(r!=null){const G=Pc(r.shape,f);G!=null&&(r=tt({inputs:{x:r},backend:s,attrs:{shape:G}}),b.push(r))}const C=tt({inputs:{x:t},backend:s,attrs:{shape:[1,m,W(t.shape)/m]}});b.push(C);const _=new yX(x,e),I=[n.shape,[e.padInfo.top,e.padInfo.left],[e.strideHeight,e.strideWidth],[e.dilationHeight,e.dilationWidth],[e.inChannels],[e.filterWidth*e.inChannels],[e.outWidth]],v=s.runWebGLProgram(_,[n],"float32",I),k=tt({inputs:{x:v},backend:s,attrs:{shape:x}});b.push(v),b.push(k);const T=r!=null,D=i!=null,P=a==="leakyrelu",B=a?sa(a,!0):null,V=new zS(f?k.shape:C.shape,f?C.shape:k.shape,f?[e.batchSize,g,e.outChannels]:[e.batchSize,e.outChannels,g],y,w,T,B,D,P),L=f?[k,C]:[C,k];if(r&&L.push(r),D&&L.push(i),P){const G=s.makeTensorInfo([],"float32",pr(o,"float32"));L.push(G),b.push(G)}const z=s.runWebGLProgram(V,L,"float32"),H=tt({inputs:{x:z},backend:s,attrs:{shape:e.outShape}});b.push(z);for(const G of b)s.disposeIntermediateTensorInfo(G);return H}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bX(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:i}=t,{strides:o,pad:a,dataFormat:l,dilations:c,dimRoundingMode:u}=s,h=Os(l),d=Ae(r.shape,i.shape,o,c,a,u,!1,h);let p;if(d.filterHeight===1&&d.filterWidth===1&&d.dilationHeight===1&&d.dilationWidth===1&&d.strideHeight===1&&d.strideWidth===1&&(d.padInfo.type==="SAME"||d.padInfo.type==="VALID"))p=YS({x:r,filter:i,convInfo:d,backend:e});else if(d.strideWidth<=2&&h==="channelsLast"&&O().getBool("WEBGL_EXP_CONV")){const m=new KS(d),g=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];p=e.runWebGLProgram(m,[r,i],"float32",g)}else if(O().getBool("WEBGL_CONV_IM2COL"))p=JS({x:r,filter:i,convInfo:d,backend:e});else{const m=new qS(d);p=e.runWebGLProgram(m,[r,i],"float32")}const f=tt({inputs:{x:p},backend:e,attrs:{shape:d.outShape}});return e.disposeIntermediateTensorInfo(p),f}const wX={kernelName:Jc,backendName:"webgl",kernelFunc:bX};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class CX{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,s=t.strideWidth,r=t.padInfo.top,i=t.padInfo.left,o=t.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yR = 0; yR < ${t.outHeight}; yR++) {
            int xR = wR + yR * ${e} - ${r};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${t.outWidth}; yC++) {
              int xC = wC + yC * ${s} - ${i};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              ${o?`float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);`:`float dyValue = getDy(b, d2, yR, yC);
              float xValue = getX(b, d1, xR, xC);
              dotProd += (xValue * dyValue);`}
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class _X{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,s=t.filterWidth,r=t.strideHeight,i=t.strideWidth,o=t.dataFormat==="channelsLast",a=e-1-t.padInfo.top,l=s-1-t.padInfo.left,c=o?1:2,u=o?2:3,h=o?3:1;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${h}];

        ivec2 dyCorner = ivec2(coords[${c}], coords[${u}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${e}; wR++) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${e} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${i}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${s} - 1 - wC;

            for (int d2 = 0; d2 < ${t.outChannels}; d2++) {

              if (${o}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class SX{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideDepth,s=t.strideHeight,r=t.strideWidth,i=t.padInfo.front,o=t.padInfo.top,a=t.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yF = 0; yF < ${t.outDepth}; yF++) {
            int xF = wF + yF * ${e} - ${i};

            if (xF < 0 || xF >= ${t.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${t.outHeight}; yR++) {
              int xR = wR + yR * ${s} - ${o};

              if (xR < 0 || xR >= ${t.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${t.outWidth}; yC++) {
                int xC = wC + yC * ${r} - ${a};

                if (xC < 0 || xC >= ${t.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class IX{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterDepth,s=t.filterHeight,r=t.filterWidth,i=t.strideDepth,o=t.strideHeight,a=t.strideWidth,l=e-1-t.padInfo.front,c=s-1-t.padInfo.top,u=r-1-t.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${l}, ${c}, ${u});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${e}; wF++) {
          float dyF = float(dyFCorner + wF) / ${i}.0;

          if (dyF < 0.0 || dyF >= ${t.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${e} - 1 - wF;

          for (int wR = 0; wR < ${s}; wR++) {
            float dyR = float(dyRCorner + wR) / ${o}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${s} - 1 - wR;

            for (int wC = 0; wC < ${r}; wC++) {
              float dyC = float(dyCCorner + wC) / ${a}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${r} - 1 - wC;

              for (int d2 = 0; d2 < ${t.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vX(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,dy:i}=t,{strides:o,pad:a,dataFormat:l,dimRoundingMode:c,filterShape:u}=s,h=Os(l),d=Ae(r.shape,u,o,1,a,c,!1,h),p=new CX(d);return e.runWebGLProgram(p,[r,i],"float32")}const kX={kernelName:op,backendName:"webgl",kernelFunc:vX};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $X{constructor(t){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=t.inShape,this.enableShapeUniforms=Ue(this.outputShape.length);const e=t.filterHeight,s=t.filterWidth,r=e-1-t.padInfo.top,i=s-1-t.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${r}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];

        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        vec4 result = vec4(0.);
        for (int wR = 0; wR < ${e}; wR++) {
          float dyR = float(dyRCorner + wR) / strides[0];
          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);
          int wRPerm = ${e} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            int wCPerm = ${s} - 1 - wC;

            float dyC = float(dyCCorner + wC) / strides[1];
            bool idyCVal = (dyC >= 0.0) && (dyC < ${t.outWidth}.0)
              && (fract(dyC) == 0.0);
            int idyC = int(dyC);

            float dyC2 = float(dyCCorner + wC + 1) / strides[1];
            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${t.outWidth}.0)
              && (fract(dyC2) == 0.0);
            int idyC2 = int(dyC2);

            if (idyCVal && idyCVal2) {
              for (int d2 = 0; d2 < ${t.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?
                  dySample : getDy(batch, idyR, idyC2, d2);

                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));

                dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample2.xy : dySample2.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal) {
              for (int d2 = 0; d2 < ${t.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal2) {
              for (int d2 = 0; d2 < ${t.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC2, d2);
                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            }
          }
        }
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TX(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,filter:i}=t,{inputShape:o,strides:a,pad:l,dataFormat:c,dimRoundingMode:u}=s,h=Os(c),d=Ae(o,i.shape,a,1,l,u,!1,h);if(O().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&h==="channelsLast"){const p=[[d.strideHeight,d.strideWidth]],f=new $X(d);return e.runWebGLProgram(f,[r,i],"float32",p)}else{const p=new _X(d);return e.runWebGLProgram(p,[r,i],"float32")}}const NX={kernelName:Zc,backendName:"webgl",kernelFunc:TX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EX(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:i}=t,{strides:o,pad:a,dilations:l}=s,c=gr(r.shape,i.shape,o,l,a),u=new xX(c);return e.runWebGLProgram(u,[r,i],"float32")}const RX={kernelName:Qc,backendName:"webgl",kernelFunc:EX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DX(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,dy:i}=t,{strides:o,pad:a,filterShape:l}=s,c=gr(r.shape,l,o,1,a),u=new SX(c);return e.runWebGLProgram(u,[r,i],"float32")}const AX={kernelName:ap,backendName:"webgl",kernelFunc:DX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FX(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,filter:i}=t,{pad:o,strides:a,inputShape:l}=s,c=gr(l,i.shape,a,1,o),u=new IX(c);return e.runWebGLProgram(u,[r,i],"float32")}const MX={kernelName:lp,backendName:"webgl",kernelFunc:FX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PX=xo+`
  return cos(x);
`,OX=`
  vec4 result = cos(x);
  bvec4 isNaN = isnan(x);
  ${mi}
  return result;
`,BX=Dt({opSnippet:PX,packedOpSnippet:OX}),LX={kernelName:ba,backendName:"webgl",kernelFunc:BX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VX=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,zX=Dt({opSnippet:VX}),UX={kernelName:wa,backendName:"webgl",kernelFunc:zX};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class WX{constructor(t,e,s,r,i){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[o,a,l,c]=t,[u]=e,[h,d]=s;this.outputShape=[u,h,d,c];const p=r==="bilinear"?1:0,[f,m]=[`${a-1}.0`,`${l-1}.0`],[g,x,y]=h>1?[`${(a-1)/(h-1)}`,"(y2-y1) * height_ratio",`y1*${f} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${f}`],[w,b,C]=d>1?[`${(l-1)/(d-1)}`,"(x2-x1) * width_ratio",`x1*${m} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${m}`];this.userCode=`
      const float height_ratio = float(${g});
      const float width_ratio = float(${w});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${o}) {
          return;
        }

        float height_scale = ${x};
        float width_scale = ${b};

        float in_y = ${y};
        if( in_y < 0.0 || in_y > ${f} ) {
          setOutput(float(${i}));
          return;
        }
        float in_x = ${C};
        if( in_x < 0.0 || in_x > ${m} ) {
          setOutput(float(${i}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${p} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GX=n=>{const{inputs:t,backend:e,attrs:s}=n,{image:r,boxes:i,boxInd:o}=t,{cropSize:a,method:l,extrapolationValue:c}=s,u=new WX(r.shape,i.shape,a,l,c);return e.runWebGLProgram(u,[r,i,o],"float32")},HX={kernelName:up,backendName:"webgl",kernelFunc:GX};var ia;(function(n){n.Prod="*",n.Sum="+"})(ia||(ia={}));class Ay{constructor(t,e,s,r){this.op=t,this.outputShape=e,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const i=this.outputShape.length,o=this.op===ia.Prod?"1.0":"0.0",a=s?o:`getX(${Fy(i,"coords",this.op)})`,l=this.outputShape[this.outputShape.length-1];let c="",u="";s?(c=r?`end != ${l-1}`:"end != 0",u=r?"end + 1":"end - 1"):(c=r?`end + pow2 < ${l}`:"end >= pow2",u=r?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${Wt(i)} coords = getOutputCoords();
        int end = ${My(i,"coords",this.op)};
        float val = ${a};
        int pow2 = int(pow(2.0, index));
        if (${c}) {
          int idx = ${u};
          ${My(i,"coords",this.op)} = idx;
          val ${this.op}= getX(${Fy(i,"coords",this.op)});
        }
        setOutput(val);
      }
    `}}function Fy(n,t,e){if(n===1)return`${t}`;if(n===2)return`${t}.x, ${t}.y`;if(n===3)return`${t}.x, ${t}.y, ${t}.z`;if(n===4)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${e} for rank ${n} is not yet supported`)}function My(n,t,e){if(n===1)return`${t}`;if(n===2)return`${t}.y`;if(n===3)return`${t}.z`;if(n===4)return`${t}.w`;throw new Error(`Cumulative ${e} for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZS(n,t,e,s,r,i){const o=t.shape.length,a=oe([s],o);let l=t;a!=null&&(l=qe({inputs:{x:t},backend:e,attrs:{perm:a}}));const c=he(1,o)[0];if(c!==o-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${s}`);const u=l.shape[c];let h=hn({inputs:{x:l},backend:e});for(let d=0;d<=Math.ceil(Math.log2(u))-1;d++){const p=new Ay(n,l.shape,!1,i),f=[[d]],m=h;h=e.runWebGLProgram(p,[h],h.dtype,f),e.disposeIntermediateTensorInfo(m)}if(r){const d=new Ay(n,l.shape,r,i),p=h;h=e.runWebGLProgram(d,[h],h.dtype),e.disposeIntermediateTensorInfo(p)}if(a!=null){const d=mr(a),p=qe({inputs:{x:h},backend:e,attrs:{perm:d}});return e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(l),p}return h}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XX(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:i,exclusive:o,reverse:a}=s;return ZS(ia.Prod,r,e,i,o,a)}const jX={kernelName:cp,backendName:"webgl",kernelFunc:XX};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qX(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:i,exclusive:o,reverse:a}=s;return ZS(ia.Sum,r,e,i,o,a)}const KX={kernelName:tu,backendName:"webgl",kernelFunc:qX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YX(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,weights:i}=t,{size:o,binaryOutput:a}=s;if(r.shape.length===1){const l=e.readSync(r.dataId),c=e.readSync(i.dataId),u=DS(l,c,i.dtype,i.shape,o);return e.makeTensorInfo([o],i.dtype,u)}else if(r.shape.length===2){const l=e.bufferSync(r),c=e.bufferSync(i),u=t4(l,c,o,a);return e.makeTensorInfo(u.shape,i.dtype,u.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}const JX={kernelName:hp,backendName:"webgl",kernelFunc:YX};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ZX{constructor(t,e,s){this.variableNames=["x"],this.outputShape=[],this.outputShape=t,this.blockSize=e,this.dataFormat=s,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${e};
      int offset_h = imod(h, ${e});
      int in_w = w / ${e};
      int offset_w = imod(w, ${e});
      int offset_d = (offset_h * ${e} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QX(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{blockSize:i,dataFormat:o}=s,a=r.shape[0],l=o==="NHWC"?r.shape[1]:r.shape[2],c=o==="NHWC"?r.shape[2]:r.shape[3],u=o==="NHWC"?r.shape[3]:r.shape[1],h=l*i,d=c*i,p=u/(i*i),f=o==="NHWC"?[a,h,d,p]:[a,p,h,d],m=new ZX(f,i,o);return e.runWebGLProgram(m,[r],r.dtype)}const tj={kernelName:dp,backendName:"webgl",kernelFunc:QX};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class QS{constructor(t,e=!1,s=null,r=!1,i=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=Ue(this.outputShape.length);const o=t.filterHeight,a=t.filterWidth,l=t.outChannels/t.inChannels;let c="",u="";s&&(r?c=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:i?c=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:c=`
          float activation(float x) {
            ${s}
          }
        `,u="result = activation(result);");const h=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),i&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${c}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${l};
        int q = d2 - d1 * ${l};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${o}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${a}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${h}
        ${u}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class tI{constructor(t,e=!1,s=null,r=!1,i=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=Ue(this.outputShape.length);const o=t.outChannels/t.inChannels,a=t.padInfo.left,l=t.strideWidth,c=t.dilationWidth,u=t.filterHeight,h=t.filterWidth,d=h;let p=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let x=0;x<h;x++)p+=`
          vec4 xTexelC${x*2};
          int xTexelC${x*2}Ready;
          vec4 xTexelC${x*2+1};
          int xTexelC${x*2+1}Ready;
          vec4 xC${x};`;p+=`
    for (int r = 0; r < ${u}; r++) {
      `;for(let x=0;x<h;x++)p+=`
          xTexelC${x*2} = vec4(0.0);
          xTexelC${x*2}Ready = 0;
          xTexelC${x*2+1} = vec4(0.0);
          xTexelC${x*2+1}Ready = 0;
          xC${x} = vec4(0.0);`;p+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let x=0;x<(d+1)/2;x++){const y=x*2;if(p+=`
          xC = xCCorner + ${y*c};
          `,l===1){if(y<h&&(a%2===1?(p+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }
              `,c===1&&y>0?p+=`
                xC${y} = vec4(xTexelC${y-2}.zw, xTexelC${y}.xy);
                `:p+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${y} = vec4(previous.zw, xTexelC${y}.xy);
                  } else {
                    xC${y} = vec4(0.0, 0.0, xTexelC${y}.xy);
                  }
                  `):p+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }

                xC${y} = xTexelC${y};
                `,y+1<h)){const w=a%2===0?jd(c):c;c%2===0&&a%2===1||c%2!==0&&a%2!==1?(p+=`
                  xCOffset = xC + imod(pads[1], 2) + ${w};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                    xTexelC${y+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${y+1}.zw = vec2(0.0);
                    }
                    xTexelC${y+1}Ready = 1;
                  }
                  `,c>1?p+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);
                     xC${y+1} = vec4(previous.zw, xTexelC${y+1}.xy);
                    } else {
                     xC${y+1} = vec4(0.0, 0.0, xTexelC${y+1}.xy);
                    }
                    `:p+=`
                    xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.xy);
                    `):w===1?p+=`
                    xC${y+1} = xTexelC${y};
                    `:p+=`
                    xCOffset = xC + ${w};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                      xTexelC${y+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${y+1}.zw = vec2(0.0);
                      }
                      xTexelC${y+1}Ready = 1;
                    }

                    xC${y+1} = xTexelC${y+1};
                    `}}else y<h&&(a%2===1?(p+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${y+1}Ready == 0) {
                  xTexelC${y+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${y+1}.zw = vec2(0.0);
                  }
                  xTexelC${y+1}Ready = 1;
                }

                xC${y} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);
              `,y+1<h&&(p+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${y+1} = vec4(xTexelC${y+1}.xy, final.xy);
                `)):(p+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                  xTexelC${y+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${y+1}.zw = vec2(0.);
                  }
                  xTexelC${y+1}Ready = 1;
                }

                xC${y} = vec4(
                  xTexelC${y}.xy, xTexelC${y+1}.xy);
              `,y+1<h&&(p+=`
                  xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);
                `)));y<h&&(p+=`
            wTexel = getW(r, ${y}, d1, q);
            dotProd += xC${y} * vec4(wTexel.xz, wTexel.xz);
          `,y+1<h&&(p+=`
              wTexel = getW(r, ${y+1}, d1, q);
              dotProd += xC${y+1} * vec4(wTexel.xz, wTexel.xz);
            `))}p+=`
    }
  `,p+=`
      }
    `;let f="",m="";s&&(r?f=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:i?f=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:f=`vec4 activation(vec4 x) {
          ${s}
        }`,m="result = activation(result);");const g=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),i&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${f}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${o};
        int q = d2 - d1 * ${o};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${p}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${g}
        ${m}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ej(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:i}=t,{strides:o,pad:a,dilations:l,dimRoundingMode:c}=s;let u=l;u==null&&(u=[1,1]),S(Ve(o,u),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${u}'`);const h=Ae(r.shape,i.shape,o,u,a,c,!0);let d;O().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels===1?d=new tI(h):d=new QS(h);const p=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return e.runWebGLProgram(d,[r,i],"float32",p)}const nj={kernelName:eu,backendName:"webgl",kernelFunc:ej};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sj{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,s=t.strideWidth,r=t.padInfo.top,i=t.padInfo.left,o=t.outChannels/t.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${o} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yR = 0; yR < ${t.outHeight}; yR++) {
            int xR = wR + yR * ${e} - ${r};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${t.outWidth}; yC++) {
              int xC = wC + yC * ${s} - ${i};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class rj{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,s=t.filterWidth,r=t.strideHeight,i=t.strideWidth,o=e-1-t.padInfo.top,a=s-1-t.padInfo.left,l=t.outChannels/t.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${o}, ${a});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${e}; wR++) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${e} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${i}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${s} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${l}; dm++) {
              int d2 = d1 * ${l} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ij(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,dy:i}=t,{strides:o,dilations:a,pad:l,dimRoundingMode:c,filterShape:u}=s,h=Ae(r.shape,u,o,a,l,c,!0),d=new sj(h);return e.runWebGLProgram(d,[r,i],"float32")}const oj={kernelName:pp,backendName:"webgl",kernelFunc:ij};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aj(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,filter:i}=t,{strides:o,dilations:a,pad:l,dimRoundingMode:c,inputShape:u}=s,h=Ae(u,i.shape,o,a,l,c,!0),d=new rj(h);return e.runWebGLProgram(d,[r,i],"float32")}const lj={kernelName:fp,backendName:"webgl",kernelFunc:aj};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cj{constructor(t){this.variableNames=["X"],this.outputShape=[t,t],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uj(n){const{inputs:t,backend:e}=n,{x:s}=t,r=[...s.shape,...s.shape],i=W(s.shape),o=tt({inputs:{x:s},backend:e,attrs:{shape:[i]}}),a=new cj(i),l=e.runWebGLProgram(a,[o],o.dtype),c=tt({inputs:{x:l},backend:e,attrs:{shape:r}});return e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(l),c}const hj={kernelName:Fb,backendName:"webgl",kernelFunc:uj};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dj{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const{inHeight:e,inWidth:s,padInfo:r,strideHeight:i,strideWidth:o,filterHeight:a,filterWidth:l,dilationHeight:c,dilationWidth:u}=t,{top:h,left:d}=r;this.userCode=`
      const ivec2 strides = ivec2(${i}, ${o});
      const ivec2 pads = ivec2(${h}, ${d});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${a}; h++) {
          int hIn = hBeg + h * ${c};

          if (hIn >= 0 && hIn < ${e}) {
            for (int w = 0; w < ${l}; w++) {
              int wIn = wBeg + w * ${u};

              if (wIn >= 0 && wIn < ${s}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pj(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:i}=t,{strides:o,pad:a,dilations:l}=s,c=rl(r.shape,i.shape,o,a,"NHWC",l);let u;const h=new dj(c);u=e.runWebGLProgram(h,[r,i],"float32");const d=tt({inputs:{x:u},backend:e,attrs:{shape:c.outShape}});return e.disposeIntermediateTensorInfo(u),d}const fj={kernelName:nu,backendName:"webgl",kernelFunc:pj};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gj(n){const{inputs:t,backend:e,attrs:s}=n,{equation:r}=s,i=t,{allDims:o,summedDims:a,idDims:l}=Hf(r,i.length);jf(o.length,l,i);const{path:c,steps:u}=qf(a,l),h=u.length;let d=null,p=o.length;const f=[];for(let m=0;m<h;++m){for(const g of u[m]){const{permutationIndices:x,expandDims:y}=Xf(p,l[g]);let w;Kf(x)?w=i[g]:(w=qe({inputs:{x:i[g]},backend:e,attrs:{perm:x}}),f.push(w));const b=w.shape.slice();for(let C=0;C<y.length;++C)b.splice(y[C],0,1);Pt(w.shape,b)||(w=tt({inputs:{x:w},backend:e,attrs:{shape:b}}),f.push(w)),d===null?d=w:(d=Mg({inputs:{a:w,b:d},backend:e}),f.push(d))}m<h-1&&(c[m]>=0&&(d=mh({inputs:{x:d},backend:e,attrs:{axis:c[m]-(o.length-p),keepDims:!1}}),f.push(d)),p--)}for(const m of f)m!==d&&e.disposeIntermediateTensorInfo(m);return d}const mj={kernelName:gp,backendName:"webgl",kernelFunc:gj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xj="return (x >= 0.0) ? x : (exp(x) - 1.0);",yj=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,bj=Dt({opSnippet:xj,packedOpSnippet:yj}),wj={kernelName:_a,backendName:"webgl",kernelFunc:bj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cj="return (b >= 0.0) ? a : a * (b + 1.0);",_j=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,Sj=n=>{const{inputs:t,backend:e}=n,{dy:s,y:r}=t,i=O().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new mo(_j,s.shape,r.shape):new ri(Cj,s.shape,r.shape);return e.runWebGLProgram(i,[s,r],s.dtype)},Ij={kernelName:mp,backendName:"webgl",kernelFunc:Sj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vj=`
  return vec4(equal(a, b));
`,kj="return float(a == b);",$j=Me({opSnippet:kj,packedOpSnippet:vj,dtype:"bool",cpuKernelImpl:i4}),Tj={kernelName:su,backendName:"webgl",kernelFunc:$j};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nj=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${Bf};
  float a1 = ${Lf};
  float a2 = ${Vf};
  float a3 = ${zf};
  float a4 = ${Uf};
  float a5 = ${Wf};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,Ej=Dt({opSnippet:Nj}),Rj={kernelName:Sa,backendName:"webgl",kernelFunc:Ej};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dj=xo+`
  return exp(x);
`,Aj=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,eI=Dt({opSnippet:Dj,packedOpSnippet:Aj,cpuKernelImpl:o4,dtype:"float32"}),Fj={kernelName:Ia,backendName:"webgl",kernelFunc:eI};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Md(n){const{inputs:t,attrs:e,backend:s}=n,{dim:r}=e,{input:i}=t,o=i.shape.length,a=i.shape.slice();let l=r;return r<0&&(S(-(o+1)<=r,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),l=o+r+1),a.splice(l,0,1),tt({inputs:{x:i},backend:s,attrs:{shape:a}})}const Mj={kernelName:ru,backendName:"webgl",kernelFunc:Md};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Py="return exp(x) - 1.0;",Pj=Dt({opSnippet:Py,packedOpSnippet:Py,cpuKernelImpl:a4}),Oj={kernelName:va,backendName:"webgl",kernelFunc:Pj};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Oy{constructor(t,e,s){this.variableNames=["real","imag"];const r=e[1];this.outputShape=e;const i=s?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,o=s?`${r}.0`:"1.0";let a;if(t==="real")a="return real * expR - imag * expI;";else if(t==="imag")a="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${t}.`);this.userCode=`
      const float exponentMultiplier = ${i};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${a}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${r});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${r}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${o};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nI(n,t,e){const s=e.texData.get(n.dataId),r=W(n.shape),i=n.shape[n.shape.length-1],o=r/i,a=tt({inputs:{x:n},backend:e,attrs:{shape:[o,i]}}),l=a.shape,c=new Oy("real",l,t),u=new Oy("imag",l,t),h=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:l},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:l}],d=e.runWebGLProgram(c,h,"float32"),p=e.runWebGLProgram(u,h,"float32"),f=_r({inputs:{real:d,imag:p},backend:e});e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(p);const m=tt({inputs:{x:f},backend:e,attrs:{shape:n.shape}});return e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(f),m}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bj(n){const{inputs:t,backend:e}=n,{input:s}=t;return nI(s,!1,e)}const Lj={kernelName:xp,backendName:"webgl",kernelFunc:Bj};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Vj{constructor(t,e){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=t,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vl(n){const{backend:t,attrs:e}=n,{shape:s,value:r}=e;let{dtype:i}=e;if(i=i||no(r),i==="string"){const o=le(i,W(s));return o.fill(r),t.makeTensorInfo(s,i,o)}else{const o=new Vj(s,r),a=[[r]];return t.runWebGLProgram(o,[],i,a)}}const zj={kernelName:yp,backendName:"webgl",kernelFunc:vl};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Uj{constructor(t){this.variableNames=["Image"],this.outputShape=[];const e=t[2];this.outputShape=t,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${e} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${e}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wj={kernelName:bp,backendName:"webgl",kernelFunc:({inputs:n,backend:t})=>{const{image:e}=n,s=t,r=new Uj(e.shape);return s.runWebGLProgram(r,[e],e.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const By="return floor(x);",Gj=Dt({opSnippet:By,packedOpSnippet:By,cpuKernelImpl:l4}),Hj={kernelName:ka,backendName:"webgl",kernelFunc:Gj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xj=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,jj=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,qj=Me({opSnippet:Xj,packedOpSnippet:jj,dtype:"int32"}),Kj={kernelName:$a,backendName:"webgl",kernelFunc:qj};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Yj{constructor(t){this.variableNames=["A"];const e=Ke(),[s,r]=t;this.outputShape=t,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${s}.0);

        vec4 values = ${e.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Jj{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const e=Ke(),[s,r]=t;this.outputShape=t,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${r}.0, ${s}.0);
            vec4 values = ${e.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${e.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zj={kernelName:Xk,backendName:"webgl",kernelFunc:Qj};let vi,jh=O().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function Qj(n){const{inputs:t,backend:e,attrs:s}=n;let{pixels:r}=t;const{numChannels:i}=s,o=typeof HTMLVideoElement<"u"&&r instanceof HTMLVideoElement,a=typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement,[l,c]=o?[r.videoWidth,r.videoHeight]:[r.width,r.height],u=[c,l],h=[c,l,i];if(a||o){const m=O().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(vi==null||m!==jh)&&(jh=m,vi=document.createElement("canvas").getContext("2d",{willReadFrequently:jh})),vi.canvas.width=l,vi.canvas.height=c,vi.drawImage(r,0,0,l,c),r=vi.canvas}const d=e.makeTensorInfo(u,"int32");e.texData.get(d.dataId).usage=yn.PIXELS,e.gpgpu.uploadPixelDataToTexture(e.getTexture(d.dataId),r);const p=O().getBool("WEBGL_PACK")?new Jj(h):new Yj(h),f=e.runWebGLProgram(p,[d],"int32");return e.disposeData(d.dataId),f}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tq(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:i,bias:o,preluActivationWeights:a}=t,{strides:l,pad:c,dataFormat:u,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s,m=Os(u),g=Ae(r.shape,i.shape,l,h,c,d,!1,m);let x;const y=[],w=o!=null,b=a!=null,C=p==="leakyrelu",_=()=>{const v=[r,i],k=(T,D)=>{if(D==="NCHW"&&T.shape.length===1&&T.shape[0]!==1){const P=tt({inputs:{x:T},backend:e,attrs:{shape:[T.shape[0],1,1]}});return y.push(P),P}return T};if(w&&v.push(k(o,u)),b&&v.push(k(a,u)),C){const T=e.makeTensorInfo([],"float32",pr(f,"float32"));v.push(T),y.push(T)}return v};if(g.filterHeight===1&&g.filterWidth===1&&g.dilationHeight===1&&g.dilationWidth===1&&g.strideHeight===1&&g.strideWidth===1&&(g.padInfo.type==="SAME"||g.padInfo.type==="VALID"))x=YS({x:r,filter:i,convInfo:g,backend:e,bias:o,activation:p,preluActivationWeights:a,leakyreluAlpha:f});else if(g.strideWidth<=2&&m==="channelsLast"&&O().getBool("WEBGL_EXP_CONV")){const v=p?sa(p,!0):null,k=new KS(g,w,v,b,C),T=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],D=_();x=e.runWebGLProgram(k,D,"float32",T)}else if(O().getBool("WEBGL_CONV_IM2COL"))x=JS({x:r,filter:i,convInfo:g,backend:e,bias:o,activation:p,preluActivationWeights:a,leakyreluAlpha:f});else{const v=p?sa(p,!1):null,k=new qS(g,w,v,b,C),T=_();x=e.runWebGLProgram(k,T,"float32")}const I=tt({inputs:{x},backend:e,attrs:{shape:g.outShape}});return y.push(x),y.forEach(v=>e.disposeIntermediateTensorInfo(v)),I}const eq={kernelName:cc,backendName:"webgl",kernelFunc:tq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nq(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:i,bias:o,preluActivationWeights:a}=t,{strides:l,pad:c,dilations:u,dimRoundingMode:h,activation:d,leakyreluAlpha:p}=s,f=[];let m=u;m==null&&(m=[1,1]),S(Ve(l,m),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${m}'`);const g=Ae(r.shape,i.shape,l,m,c,h,!0),x=O().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels===1,y=d?sa(d,x):null,w=[r,i],b=o!=null,C=a!=null,_=d==="leakyrelu";if(b&&w.push(o),C&&w.push(a),_){const T=e.makeTensorInfo([],"float32",pr(p,"float32"));w.push(T),f.push(T)}let I;x?I=new tI(g,b,y,C,_):I=new QS(g,b,y,C,_);const v=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],k=e.runWebGLProgram(I,w,"float32",v);return f.forEach(T=>e.disposeIntermediateTensorInfo(T)),k}const sq={kernelName:Qb,backendName:"webgl",kernelFunc:nq};class rq{constructor(t,e,s,r){this.sliceDim=t,this.strides=e,this.paramsShape=r,this.variableNames=["x","indices"],this.outputShape=s;const i=Wt(s.length);let o=`
    int index;`;for(let a=0;a<this.sliceDim;a++)o+=`
          index = round(getIndices(coords[0], ${a}));
          out_of_bounds = out_of_bounds || index < 0;
          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[a]};
          flattenIndex += index * ${this.strides[a]};`;this.userCode=`
         void main() {
          ${i} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;

          ${o}

          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iq(n){const{inputs:t,backend:e}=n,{params:s,indices:r}=t,i=r.shape,o=i[i.length-1],a=W(s.shape),[l,c,u,h]=$f(s,r),d=tt({inputs:{x:r},backend:e,attrs:{shape:[c,o]}}),p=tt({inputs:{x:s},backend:e,attrs:{shape:[W(s.shape)/u,u]}});if(e.shouldExecuteOnCPU([s,r])||s.dtype==="string"){const x=e.readSync(r.dataId),y=e.bufferSync(s),w=c4(x,y,s.dtype,c,o,u,h,s.shape,a);return e.makeTensorInfo(l,s.dtype,w.values)}const f=new rq(o,h,[c,u],s.shape),m=e.runWebGLProgram(f,[p,d],p.dtype),g=tt({inputs:{x:m},backend:e,attrs:{shape:l}});return e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(m),g}const oq={kernelName:Mb,backendName:"webgl",kernelFunc:iq};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class aq{constructor(t,e){this.variableNames=["A","indices"],this.outputShape=e,this.rank=e.length;const s=Wt(this.rank),r=lq(t);this.userCode=`
      void main() {
        ${s} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${t[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${r}));
      }
    `}}function lq(n,t){const e=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let r=0;r<n.length;r++)r===2?s.push("index"):s.push(`${e[r]}`);return s.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sI(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,indices:i}=t,{axis:o,batchDims:a}=s,l=$t(o,r.shape)[0];if(O().get("DEBUG")){const y=e.readSync(i.dataId),w=r.shape[l];for(let b=0;b<y.length;++b){const C=y[b];S(C<=w-1&&C>=0,()=>`GatherV2: the index value ${C} is not in [0, ${w-1}]`)}}const c=Jf(r,i,l,a),u=W(i.shape),h=[],d=tt({inputs:{x:r},backend:e,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),p=tt({inputs:{x:i},backend:e,attrs:{shape:[c.batchSize,u/c.batchSize]}});h.push(d),h.push(p);const f=[c.batchSize,c.outerSize,u/c.batchSize,c.sliceSize];if(e.shouldExecuteOnCPU([r,i])||r.dtype==="string"){const y=e.bufferSync(p),w=e.bufferSync(d),b=u4(w,y,f);return h.forEach(C=>e.disposeIntermediateTensorInfo(C)),e.makeTensorInfo(c.outputShape,b.dtype,b.values)}const m=new aq(d.shape,f),g=e.runWebGLProgram(m,[d,p],d.dtype);h.push(g);const x=tt({inputs:{x:g},backend:e,attrs:{shape:c.outputShape}});return h.forEach(y=>e.disposeIntermediateTensorInfo(y)),x}const cq={kernelName:ou,backendName:"webgl",kernelFunc:sI};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uq="return float(a > b);",hq=`
  return vec4(greaterThan(a, b));
`,dq=Me({opSnippet:uq,packedOpSnippet:hq,cpuKernelImpl:h4,dtype:"bool"}),pq={kernelName:au,backendName:"webgl",kernelFunc:dq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fq="return float(a >= b);",gq=`
  return vec4(greaterThanEqual(a, b));
`,mq=Me({opSnippet:fq,packedOpSnippet:gq,dtype:"bool",cpuKernelImpl:d4}),xq={kernelName:Ta,backendName:"webgl",kernelFunc:mq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yq(n){const{inputs:t,backend:e}=n,{input:s}=t;return nI(s,!0,e)}const bq={kernelName:wp,backendName:"webgl",kernelFunc:yq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wq="return float(!isnan(x) && !isinf(x));",Cq=Dt({opSnippet:wq,dtype:"bool"}),_q={kernelName:Ea,backendName:"webgl",kernelFunc:Cq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sq="return float(isinf(x));",Iq=Dt({opSnippet:Sq,dtype:"bool"}),vq={kernelName:Ra,backendName:"webgl",kernelFunc:Iq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kq="return float(isnan(x));",$q=Dt({opSnippet:kq,dtype:"bool"}),Tq={kernelName:Da,backendName:"webgl",kernelFunc:$q};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nq="return float(a < b);",Eq=`
  return vec4(lessThan(a, b));
`,Rq=Me({opSnippet:Nq,packedOpSnippet:Eq,cpuKernelImpl:p4,dtype:"bool"}),Dq={kernelName:cu,backendName:"webgl",kernelFunc:Rq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Aq="return float(a <= b);",Fq=`
  return vec4(lessThanEqual(a, b));
`,Mq=Me({opSnippet:Aq,packedOpSnippet:Fq,cpuKernelImpl:f4,dtype:"bool"}),Pq={kernelName:uu,backendName:"webgl",kernelFunc:Mq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oq(n){const{backend:t,attrs:e}=n,{start:s,stop:r,num:i}=e,o=g4(s,r,i);return t.makeTensorInfo([o.length],"float32",o)}const Bq={kernelName:Pb,backendName:"webgl",kernelFunc:Oq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lq=xo+`
  return x < 0.0 ? 0./0. : log(x);
`,Vq=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,zq=Dt({opSnippet:Lq,packedOpSnippet:Vq,cpuKernelImpl:m4}),Uq={kernelName:Aa,backendName:"webgl",kernelFunc:zq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wq=xo+`
  return log(1.0 + x);
`,Gq=Dt({opSnippet:Wq}),Hq={kernelName:Fa,backendName:"webgl",kernelFunc:Gq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xq="return float(a >= 1.0 && b >= 1.0);",jq=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,qq=Me({opSnippet:Xq,packedOpSnippet:jq,dtype:"bool"}),Kq={kernelName:hu,backendName:"webgl",kernelFunc:qq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yq="return float(!(x >= 1.0));",Jq=Dt({opSnippet:Yq}),Zq={kernelName:du,backendName:"webgl",kernelFunc:Jq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qq="return float(a >= 1.0 || b >= 1.0);",t6=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,e6=Me({opSnippet:Qq,packedOpSnippet:t6,dtype:"bool"}),n6={kernelName:pu,backendName:"webgl",kernelFunc:e6};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class s6{constructor(t,e,s,r,i){this.variableNames=["x"],this.outputShape=[];const o=e,a=t[3]-1;this.outputShape=t;let l;const c=`float(${s}) + float(${r}) * sum`;i===.5?l=`inversesqrt(${c})`:i===1?l=`1.0/(${c})`:l=`exp(log(${c}) * float(-${i}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${o}; j <= ${o}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${a}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${l};
        setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class r6{constructor(t,e,s,r,i){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const o=e,a=t[3]-1;this.outputShape=t;let l;const c=`float(${s}) + float(${r}) * sum`;i===.5?l=`inversesqrt(${c})`:i===1?l=`1.0/(${c})`:l=`exp(log(${c}) * float(-${i}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${o};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${o}; j <= ${o}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${a}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${l};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const i6=n=>{const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{depthRadius:i,bias:o,alpha:a,beta:l}=s,c=O().getBool("WEBGL_PACK_NORMALIZATION")?new r6(r.shape,i,o,a,l):new s6(r.shape,i,o,a,l);return e.runWebGLProgram(c,[r],r.dtype)},o6={kernelName:fu,backendName:"webgl",kernelFunc:i6};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class a6{constructor(t,e,s,r,i){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=t,this.depth=t[3],this.depthRadius=e,this.bias=s,this.alpha=r,this.beta=i,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${e})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${e} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${r}) * norm + float(${s});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${r})
                * float(${i})
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${i});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const l6=n=>{const{inputs:t,backend:e,attrs:s}=n,{x:r,y:i,dy:o}=t,{depthRadius:a,bias:l,alpha:c,beta:u}=s,h=new a6(r.shape,a,l,c,u);return e.runWebGLProgram(h,[r,i,o],r.dtype)},c6={kernelName:_p,backendName:"webgl",kernelFunc:l6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u6(n,t,e,s){const r=W(t),o=W(n.shape)/r,a=tt({inputs:{x:n},attrs:{shape:[o,r]},backend:s}),l=xi(a,n.dtype,"max",s),c=tt({inputs:{x:l},attrs:{shape:e},backend:s});return s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(l),c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rI(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{reductionIndices:i,keepDims:o}=s,a=r.shape.length,l=$t(i,r.shape);let c=l;const u=oe(c,a),h=u!=null,d=e.shouldExecuteOnCPU([r]);let p=r;if(h){if(d){const w=e.texData.get(p.dataId).values,b=new Array(a);for(let I=0;I<b.length;I++)b[I]=r.shape[u[I]];const C=Ag(w,r.shape,r.dtype,u,b);p=e.makeTensorInfo(b,r.dtype);const _=e.texData.get(p.dataId);_.values=C}else p=gh(r,u,e);c=he(c.length,a)}Fe("max",c,a);const[f,m]=Ne(p.shape,c);let g=f;o&&(g=xe(f,l));let x;if(d){const w=e.texData.get(p.dataId).values,b=x4(w,W(m),g,r.dtype);x=e.makeTensorInfo(g,r.dtype);const C=e.texData.get(x.dataId);C.values=b}else x=u6(p,m,g,e);return h&&e.disposeIntermediateTensorInfo(p),x}const h6={kernelName:gu,backendName:"webgl",kernelFunc:rI};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const d6=Fg+`
  return max(a, b);
`,p6=`
  vec4 result = vec4(max(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+mi+`
  return result;
`,f6=Me({opSnippet:d6,packedOpSnippet:p6,cpuKernelImpl:y4}),g6={kernelName:Ma,backendName:"webgl",kernelFunc:f6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m6(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t;_l(r,"maxPool");const{filterSize:i,strides:o,pad:a,dimRoundingMode:l}=s,c=1;S(Ve(o,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`);const u=Pn(r.shape,i,o,c,a,l);if(u.filterWidth===1&&u.filterHeight===1&&Pt(u.inShape,u.outShape))return hn({inputs:{x:r},backend:e});const h=new ra(u,"max",!1);return e.runWebGLProgram(h,[r],r.dtype)}const x6={kernelName:mu,backendName:"webgl",kernelFunc:m6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y6(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{filterSize:i,strides:o,pad:a,dataFormat:l,dimRoundingMode:c}=s,u=[1,1,1],h=Ps(r.shape,i,o,u,a,c,l),d=new Pg(h,"max",!1);return e.runWebGLProgram(d,[r],r.dtype)}const b6={kernelName:xu,backendName:"webgl",kernelFunc:y6};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class w6{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideHeight,s=t.strideWidth,r=t.dilationHeight,i=t.effectiveFilterHeight,o=t.effectiveFilterWidth,a=i-1-t.padInfo.top,l=o-1-t.padInfo.left,c=i*o-1;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${i};
          wR += ${r}) {
          float dyR = float(dyRCorner + wR) / ${e}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${o}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${c} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${o} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}}class C6{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideDepth,s=t.strideHeight,r=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,a=t.dilationWidth,l=t.effectiveFilterDepth,c=t.effectiveFilterHeight,u=t.effectiveFilterWidth,h=l-1-t.padInfo.front,d=c-1-t.padInfo.top,p=u-1-t.padInfo.left,f=l*c*u-1;this.userCode=`
      const ivec3 pads = ivec3(${h}, ${d}, ${p});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${l};
           wD += ${i}) {
          float dyD = float(dyDCorner + wD) / ${e}.0;

          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${c};
              wR += ${o}) {
            float dyR = float(dyRCorner + wR) / ${s}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${u};
                wC += ${a}) {
              float dyC = float(dyCCorner + wC) / ${r}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${f} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${c} * ${u} +
                  wR * ${u} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _6(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,input:i}=t,o=i,{filterSize:a,strides:l,pad:c,dimRoundingMode:u}=s,h=[1,1,1],d=Ps(o.shape,a,l,h,c,u),p=new Pg(d,"max",!0),f=e.runWebGLProgram(p,[o],o.dtype),m=new C6(d),g=e.runWebGLProgram(m,[r,f],o.dtype);return e.disposeIntermediateTensorInfo(f),g}const S6={kernelName:Ip,backendName:"webgl",kernelFunc:_6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I6(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,input:i,output:o}=t,a=i;_l([i,o],"maxPoolGrad");const{filterSize:l,strides:c,pad:u,dimRoundingMode:h}=s,d=Pn(a.shape,l,c,1,u,h),p=!0,f=new ra(d,"max",p),m=e.runWebGLProgram(f,[a],a.dtype),g=new w6(d),x=e.runWebGLProgram(g,[r,m],a.dtype);return e.disposeIntermediateTensorInfo(m),x}const v6={kernelName:Sp,backendName:"webgl",kernelFunc:I6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k6(n,t,e,s){let r=new ra(e,"max",!1);const i=s.runWebGLProgram(r,[n],"float32");r=new ra(e,"max",!0,!0,t);const o=s.runWebGLProgram(r,[n],"float32");return[i,o]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $6={kernelName:Ob,backendName:"webgl",kernelFunc:({inputs:n,attrs:t,backend:e})=>{const{x:s}=n,{filterSize:r,strides:i,pad:o,includeBatchInIndex:a}=t,l=e;S(s.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${s.shape.length}.`);const c=[1,1];S(Ve(i,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`);const u=Pn(s.shape,r,i,c,o),[h,d]=k6(s,a,u,l);return[h,d]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T6(n,t,e,s){const r=W(t),o=W(n.shape)/r,a=tt({inputs:{x:n},attrs:{shape:[o,r]},backend:s}),l=xi(a,"float32","mean",s),c=tt({inputs:{x:l},attrs:{shape:e},backend:s});return s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(l),c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const N6={kernelName:yu,backendName:"webgl",kernelFunc:({inputs:n,attrs:t,backend:e})=>{const{x:s}=n,{keepDims:r,axis:i}=t,o=e,a=s.shape.length,l=$t(i,s.shape);let c=l;const u=oe(c,a),h=u!=null,d=o.shouldExecuteOnCPU([s]),p=[];let f=s;if(h){if(d){const b=o.texData.get(f.dataId).values,C=new Array(a);for(let v=0;v<C.length;v++)C[v]=s.shape[u[v]];const _=Ag(b,s.shape,s.dtype,u,C);f=o.makeTensorInfo(C,s.dtype);const I=o.texData.get(f.dataId);I.values=_}else f=gh(s,u,o);p.push(f),c=he(c.length,a)}Fe("sum",c,a);const[m,g]=Ne(f.shape,c);let x=m;r&&(x=xe(m,l));const y=T6(f,g,x,o);for(const w of p)o.disposeIntermediateTensorInfo(w);return y}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E6(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:i,keepDims:o}=s,a=r.shape.length,l=$t(i,r.shape);let c=l;const u=oe(c,a);let h=r;u!=null&&(h=qe({inputs:{x:r},backend:e,attrs:{perm:u}}),c=he(c.length,r.shape.length)),Fe("min",c,a);const[d,p]=Ne(h.shape,c),f=W(p),m=tt({inputs:{x:h},backend:e,attrs:{shape:[-1,f]}}),g=xi(m,m.dtype,"min",e);let x;if(o){const y=xe(d,l);x=tt({inputs:{x:g},backend:e,attrs:{shape:y}})}else x=tt({inputs:{x:g},backend:e,attrs:{shape:d}});return e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(g),u!=null&&e.disposeIntermediateTensorInfo(h),x}const R6={kernelName:bu,backendName:"webgl",kernelFunc:E6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const D6=Fg+`
  return min(a, b);
`,A6=`
  vec4 result = vec4(min(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+mi+`
  return result;
`,F6=Me({opSnippet:D6,packedOpSnippet:A6,cpuKernelImpl:b4}),M6={kernelName:Pa,backendName:"webgl",kernelFunc:F6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class P6{constructor(t,e,s){this.variableNames=["x"],this.outputShape=e.map((u,h)=>u[0]+t[h]+u[1]);const r=t.length,i=Wt(r),o=e.map(u=>u[0]).join(","),a=e.map((u,h)=>u[0]+t[h]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),c=s==="reflect"?0:1;if(r===1){this.userCode=`
        int start = ${o};
        int end = ${a};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${c};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${c};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${i} start = ${i}(${o});
      ${i} end = ${i}(${a});

      void main() {
        ${i} outC = getOutputCoords();
        for (int i = 0; i < ${r}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${c};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${c};
          }
        }
        ${i} coords = outC - start;
        setOutput(getX(${l}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class O6{constructor(t,e,s){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map((f,m)=>f[0]+t[m]+f[1]);const r=t.length,i=Wt(r),o=e.map(f=>f[0]).join(","),a=e.map((f,m)=>f[0]+t[m]).join(","),l=Xe("rc",r),c=Xe("source",r),u=`${l[r-1]} < ${this.outputShape[r-1]}`,h=r===1?"source":`vec2(${c.slice(-2).join()})`,d=s==="reflect"?0:1;let p="";if(r===1){const f=`
        ${i} source = rc;
        if (source < start) {
          source = start * 2 - source - ${d};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${d};
        }
        source -= start;
      `;p=`
        ${i} rc = outputLoc;
        ${f}
        result[0] = getChannel(getX(${c.join()}), ${h});
        ${l[r-1]} += 1;
        if(${u}) {
          ${f}
          result[1] = getChannel(getX(${c.join()}), ${h});
        }
      `}else{const f=`
        ${i} source = rc;
        ${i} lt = ${i}(lessThan(source, start));
        ${i} gte = ${i}(greaterThanEqual(source, end));
        ${i} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${d}) +
                gte * ((end - 1) * 2 - source + ${d});
        source -= start;
      `;p=`
        ${i} rc = outputLoc;
        ${f}
        result[0] = getChannel(getX(${c.join()}), ${h});
        ${l[r-1]} += 1;
        if(${u}) {
          ${f}
          result[1] = getChannel(getX(${c.join()}), ${h});
        }
        rc = outputLoc;
        ${l[r-2]} += 1;
        if(${l[r-2]} < ${this.outputShape[r-2]}) {
          ${f}
          result[2] = getChannel(getX(${c.join()}), ${h});
          ${l[r-1]} += 1;
          if(${u}) {
            ${f}
            result[3] = getChannel(getX(${c.join()}), ${h});
          }
        }
      `}this.userCode=`
      const ${i} start = ${i}(${o});
      const ${i} end = ${i}(${a});

      void main() {
        ${i} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${p}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const B6=({inputs:n,backend:t,attrs:e})=>{const{x:s}=n,{paddings:r,mode:i}=e,o=O().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new O6(s.shape,r,i):new P6(s.shape,r,i);return t.runWebGLProgram(o,[s],s.dtype)},L6={kernelName:wu,backendName:"webgl",kernelFunc:B6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const V6=`if (b == 0.0) return NAN;
  return mod(a, b);`,z6=`
  vec4 result = mod(a, b);
  bvec4 isNaN = equal(b, vec4(0.0));
  `+mi+`
  return result;
`,U6=Me({opSnippet:V6,packedOpSnippet:z6}),W6={kernelName:Oa,backendName:"webgl",kernelFunc:U6};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class G6{constructor(t,e,s){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[t,s],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${e-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${e-1}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const H6=`
if (a == b) {
  return 1.0;
};
return a / b;`,X6=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,iI=Me({opSnippet:H6,packedOpSnippet:X6,checkOutOfBounds:!0}),j6={kernelName:Ca,backendName:"webgl",kernelFunc:iI};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ly="return a - b;",oI=Me({opSnippet:Ly,packedOpSnippet:Ly,supportsComplex:!0,cpuKernelImpl:V4}),q6={kernelName:Qa,backendName:"webgl",kernelFunc:oI};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aI(n){const{inputs:t,backend:e,attrs:s}=n,{logits:r}=t,{dim:i}=s,o=$t([i],r.shape),a=rI({inputs:{x:r},backend:e,attrs:{reductionIndices:o,keepDims:!1}}),l=xe(a.shape,o),c=tt({inputs:{x:a},backend:e,attrs:{shape:l}}),u=oI({inputs:{a:r,b:c},backend:e}),h=eI({inputs:{x:u},backend:e}),d=mh({inputs:{x:h},backend:e,attrs:{axis:o,keepDims:!1}}),p=tt({inputs:{x:d},backend:e,attrs:{shape:l}}),f=iI({inputs:{a:h,b:p},backend:e});return e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(u),e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(p),f}const K6={kernelName:Bu,backendName:"webgl",kernelFunc:aI};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y6(n){const{inputs:t,backend:e,attrs:s}=n,{logits:r}=t,{numSamples:i,seed:o,normalized:a}=s,l=a?r:aI({inputs:{logits:r},backend:e,attrs:{dim:r.shape.length-1}}),c=l.shape[0],u=l.shape[1],h=new G6(c,u,i),d=[[o]],p=e.runWebGLProgram(h,[l],"int32",d);return a||e.disposeIntermediateTensorInfo(l),p}const J6={kernelName:Bb,backendName:"webgl",kernelFunc:Y6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Z6=Bn+`
  return -x;
`,Q6=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function tK(n){const{inputs:t,backend:e}=n,{x:s}=t;if(e.shouldExecuteOnCPU([s])){const i=e.texData.get(s.dataId),[o,a]=C4(i.values,s.shape,s.dtype);return e.makeTensorInfo(a,s.dtype,o)}let r;return O().getBool("WEBGL_PACK_UNARY_OPERATIONS")?r=new Qs(s.shape,Q6):r=new hs(s.shape,Z6),e.runWebGLProgram(r,[s],s.dtype)}const eK={kernelName:Cu,backendName:"webgl",kernelFunc:tK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nK=Cf;function sK(n){mn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:e,attrs:s}=n,{boxes:r,scores:i}=t,{maxOutputSize:o,iouThreshold:a,scoreThreshold:l}=s,c=e.readSync(r.dataId),u=e.readSync(i.dataId),{selectedIndices:h}=nK(c,u,o,a,l);return e.makeTensorInfo([h.length],"int32",new Int32Array(h))}const rK={kernelName:vp,backendName:"webgl",kernelFunc:sK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iK=_f;function oK(n){mn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:e,attrs:s}=n,{boxes:r,scores:i}=t,{maxOutputSize:o,iouThreshold:a,scoreThreshold:l,padToMaxOutputSize:c}=s,u=e.readSync(r.dataId),h=e.readSync(i.dataId),{selectedIndices:d,validOutputs:p}=iK(u,h,o,a,l,c);return[e.makeTensorInfo([d.length],"int32",new Int32Array(d)),e.makeTensorInfo([],"int32",new Int32Array([p]))]}const aK={kernelName:kp,backendName:"webgl",kernelFunc:oK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lK=Sf;function cK(n){mn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:e,attrs:s}=n,{boxes:r,scores:i}=t,{maxOutputSize:o,iouThreshold:a,scoreThreshold:l,softNmsSigma:c}=s,u=e.readSync(r.dataId),h=e.readSync(i.dataId),d=o,p=a,f=l,m=c,{selectedIndices:g,selectedScores:x}=lK(u,h,d,p,f,m);return[e.makeTensorInfo([g.length],"int32",new Int32Array(g)),e.makeTensorInfo([x.length],"float32",new Float32Array(x))]}const uK={kernelName:$p,backendName:"webgl",kernelFunc:cK};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hK{constructor(t,e,s,r){this.variableNames=["indices"],this.outputShape=[t,e],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${r}), float(${s}),
                      float(index == coords.y)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dK=n=>{const{inputs:t,backend:e,attrs:s}=n,{indices:r}=t,{dtype:i,depth:o,onValue:a,offValue:l}=s,c=W(r.shape),u=new hK(c,o,a,l),h=tt({inputs:{x:r},backend:e,attrs:{shape:[c]}}),d=e.runWebGLProgram(u,[h],i);e.disposeIntermediateTensorInfo(h);const p=[...r.shape,o],f=tt({inputs:{x:d},backend:e,attrs:{shape:p}});return e.disposeIntermediateTensorInfo(d),f},pK={kernelName:Iu,backendName:"webgl",kernelFunc:dK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oc(n){const{inputs:t,backend:e}=n,{x:s}=t;if(s.dtype==="complex64"){const r=Il({inputs:{input:s},backend:e}),i=Oc({inputs:{x:r},backend:e}),o=xh({inputs:{input:s},backend:e}),a=Oc({inputs:{x:o},backend:e}),l=_r({inputs:{real:i,imag:a},backend:e});return e.disposeIntermediateTensorInfo(r),e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(a),l}else return vl({attrs:{shape:s.shape,dtype:s.dtype,value:s.dtype==="string"?"":0},backend:e})}const fK={kernelName:zu,backendName:"webgl",kernelFunc:Oc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lI(n){const{inputs:t,backend:e}=n,{x:s}=t;if(s.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(s.dtype==="complex64"){const r=Il({inputs:{input:s},backend:e}),i=lI({inputs:{x:r},backend:e}),o=xh({inputs:{input:s},backend:e}),a=Oc({inputs:{x:o},backend:e}),l=_r({inputs:{real:i,imag:a},backend:e});return e.disposeIntermediateTensorInfo(r),e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(a),l}else return vl({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:e})}const gK={kernelName:Su,backendName:"webgl",kernelFunc:lI};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mK(n){const{inputs:t,backend:e,attrs:s}=n,{axis:r}=s;if(t.length===1)return Md({inputs:{input:t[0]},backend:e,attrs:{dim:r}});const i=t[0].shape,o=t[0].dtype;t.forEach(u=>{qd(i,u.shape,"All tensors passed to stack must have matching shapes"),S(o===u.dtype,()=>"All tensors passed to stack must have matching dtypes")});const a=[],l=t.map(u=>{const h=Md({inputs:{input:u},backend:e,attrs:{dim:r}});return a.push(h),h}),c=jS({inputs:l,backend:e,attrs:{axis:r}});return a.forEach(u=>e.disposeIntermediateTensorInfo(u)),c}const xK={kernelName:vu,backendName:"webgl",kernelFunc:mK};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yK{constructor(t,e,s){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=e.map((c,u)=>c[0]+t[u]+c[1]);const r=t.length,i=Wt(r),o=e.map(c=>c[0]).join(","),a=e.map((c,u)=>c[0]+t[u]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);if(r===1){this.userCode=`
        int start = ${o};
        int end = ${a};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${i} start = ${i}(${o});
      ${i} end = ${i}(${a});

      void main() {
        ${i} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${i} coords = outC - start;
          setOutput(getX(${l}));
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class bK{constructor(t,e,s){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=e.map((m,g)=>m[0]+t[g]+m[1]);const r=t.length,i=Wt(r),o=e.map(m=>m[0]).join(","),a=e.map((m,g)=>m[0]+t[g]).join(","),l=Xe("rc",r),c=Xe("source",r),u=`${l[r-1]} < ${this.outputShape[r-1]}`,h=r===1?"source":`vec2(${c.slice(-2).join()})`,d=[`${i} rc = outputLoc;`,`${l[r-1]} += 1;
       if(${u}) {
      `,r===1?"":`}
       rc = outputLoc;
       ${l[r-2]} += 1;
       if(${l[r-2]} < ${this.outputShape[r-2]}) {`,r===1?"":`  ${l[r-1]} += 1;
         if(${u}) {`],p=r===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let f="";for(let m=0,g=r===1?2:4;m<g;m++)f+=`
        ${d[m]}
        if (${p}) {
          result[${m}] = float(value);
        } else {
          ${i} source = rc - start;
          result[${m}] = getChannel(getX(${c.join()}), ${h});
        }
      `;f+=r===1?"} ":"}}",this.userCode=`
      const ${i} start = ${i}(${o});
      const ${i} end = ${i}(${a});

      void main() {
        ${i} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${f}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cI=n=>{const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{paddings:i,constantValue:o}=s;if(W(r.shape)===0){const c=i.map((u,h)=>u[0]+r.shape[h]+u[1]);return vl({backend:e,attrs:{shape:c,value:o,dtype:r.dtype}})}const a=O().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new bK(r.shape,i,o):new yK(r.shape,i,o),l=[[o]];return e.runWebGLProgram(a,[r],r.dtype,l)},wK={kernelName:ku,backendName:"webgl",kernelFunc:cI};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CK=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,_K=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  bvec4 isNaN1 = lessThan(a, vec4(0.0));
  bvec4 isNaN2 = lessThan(floor(b), b);
  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);
  `+mi+`
  return result;
`,SK=Me({opSnippet:CK,packedOpSnippet:_K}),IK={kernelName:La,backendName:"webgl",kernelFunc:SK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vK(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:i,keepDims:o}=s,a=r.shape.length,l=[],c=$t(i,r.shape);let u=c;const h=oe(u,a);let d=r;h!=null&&(d=qe({inputs:{x:r},backend:e,attrs:{perm:h}}),u=he(u.length,a),l.push(d)),Fe("prod",u,a);let p;if(e.shouldExecuteOnCPU([d])){const f=e.texData.get(d.dataId).values,{outVals:m,outShape:g,outDtype:x}=S4(d.shape,d.dtype,f,u);p=e.makeTensorInfo(g,x,m)}else{const[f,m]=Ne(d.shape,u),g=W(m),x=tt({inputs:{x:d},backend:e,attrs:{shape:[-1,g]}}),y=Vp(r.dtype),w=xi(x,y,"prod",e);p=tt({inputs:{x:w},backend:e,attrs:{shape:f}}),l.push(x),l.push(w)}if(o){l.push(p);const f=xe(p.shape,c);p=tt({inputs:{x:p},backend:e,attrs:{shape:f}})}return l.forEach(f=>e.disposeIntermediateTensorInfo(f)),p}const kK={kernelName:Tu,backendName:"webgl",kernelFunc:vK};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $K(n){const{inputs:t,backend:e,attrs:s}=n,{paramsNestedSplits:r,paramsDenseValues:i,indices:o}=t,{outputRaggedRank:a}=s,l=r.map(x=>e.readSync(x.dataId)),c=r.map(x=>x.shape),u=e.readSync(i.dataId),h=e.readSync(o.dataId),[d,p,f]=I4(l,c,u,i.shape,i.dtype,h,o.shape,a),m=d.map(x=>e.makeTensorInfo([x.length],"int32",x)),g=e.makeTensorInfo(f,i.dtype,p);return m.concat([g])}const TK={kernelName:Lb,backendName:"webgl",kernelFunc:$K};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NK(n){const{inputs:t,backend:e}=n,{starts:s,limits:r,deltas:i}=t,o=e.readSync(s.dataId),a=e.readSync(r.dataId),l=e.readSync(i.dataId),[c,u]=v4(o,s.shape,s.dtype,a,r.shape,l,i.shape),h=e.makeTensorInfo([c.length],"int32",c),d=e.makeTensorInfo([u.length],s.dtype,u);return[h,d]}const EK={kernelName:Vb,backendName:"webgl",kernelFunc:NK};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RK(n){const{inputs:t,backend:e,attrs:s}=n,{shape:r,values:i,defaultValue:o,rowPartitionTensors:a}=t,{rowPartitionTypes:l}=s,c=e.readSync(r.dataId),u=e.readSync(i.dataId),h=e.readSync(o.dataId),d=a.map(g=>e.readSync(g.dataId)),p=a.map(g=>g.shape),[f,m]=k4(c,r.shape,u,i.shape,i.dtype,h,o.shape,d,p,l);return e.makeTensorInfo(f,i.dtype,m)}const DK={kernelName:zb,backendName:"webgl",kernelFunc:RK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uI=n=>{const{backend:t,attrs:e}=n,{start:s,stop:r,step:i,dtype:o}=e,a=$4(s,r,i,o);return t.makeTensorInfo([a.length],o,a)},AK={kernelName:Tp,backendName:"webgl",kernelFunc:uI};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FK="return 1.0 / x;",MK=Dt({opSnippet:FK}),PK={kernelName:Va,backendName:"webgl",kernelFunc:MK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OK=Bn+`
  return (x < 0.0) ? 0.0 : x;
`,BK=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,LK=Dt({opSnippet:OK,packedOpSnippet:BK}),VK={kernelName:za,backendName:"webgl",kernelFunc:LK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zK=Bn+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,UK=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,WK=Dt({opSnippet:zK,packedOpSnippet:UK}),GK={kernelName:Ua,backendName:"webgl",kernelFunc:WK};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class HK{constructor(t,e,s,r,i){this.variableNames=["A"],this.outputShape=[];const[o,a,l,c]=t;this.outputShape=[o,e,s,c];const u=[r&&e>1?a-1:a,r&&s>1?l-1:l],h=[r&&e>1?e-1:e,r&&s>1?s-1:s];let d;i?d="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":d="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${u[0]/h[0]},
          ${u[1]/h[1]});
      const vec2 inputShapeRC = vec2(${a}.0, ${l}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class XK{constructor(t,e,s,r,i){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[o,a,l,c]=t;this.outputShape=[o,e,s,c];const u=[r&&e>1?a-1:a,r&&s>1?l-1:l],h=[r&&e>1?e-1:e,r&&s>1?s-1:s];let d;i?d="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":d="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${u[0]/h[0]},
          ${u[1]/h[1]},
          ${u[1]/h[1]});
      const vec3 inputShapeRC = vec3(${a}.0, ${l}.0,
                                     ${l}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${c-1};
        bool hasNextRow = coords.z < ${s-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jK(n){const{inputs:t,backend:e,attrs:s}=n,{images:r}=t,{alignCorners:i,halfPixelCenters:o,size:a}=s,[l,c]=a,u=O().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new XK(r.shape,l,c,i,o):new HK(r.shape,l,c,i,o);return e.runWebGLProgram(u,[r],"float32")}const qK={kernelName:Ru,backendName:"webgl",kernelFunc:jK};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class KK{constructor(t,e,s){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;const[,r,i]=e,[,o,a]=t,l=[s&&o>1?r-1:r,s&&a>1?i-1:i],c=[s&&o>1?o-1:o,s&&a>1?a-1:a],u=l[0]/c[0],h=l[1]/c[1],d=1/u,p=1/h,f=Math.ceil(d)*2+2,m=Math.ceil(p)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${u});
        const float widthScale = float(${h});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${p});

        const int winHeight = int(${f});
        const int winWidth = int(${m});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${o}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${a}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${i-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YK(n){const{inputs:t,backend:e,attrs:s}=n,{images:r,dy:i}=t,{alignCorners:o}=s,a=new KK(i.shape,r.shape,o);return e.runWebGLProgram(a,[i],i.dtype)}const JK={kernelName:Rp,backendName:"webgl",kernelFunc:YK};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ZK{constructor(t,e,s,r,i){this.variableNames=["A"],this.outputShape=[];const[o,a,l,c]=t;this.outputShape=[o,e,s,c];const u=[r&&e>1?a-1:a,r&&s>1?l-1:l],h=[r&&e>1?e-1:e,r&&s>1?s-1:s],d=r?"0.5":"0.0";let p;i?p="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":p="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${u[0]/h[0]},
          ${u[1]/h[1]});
      const vec2 inputShapeRC = vec2(${a}.0, ${l}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${p};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class QK{constructor(t,e,s,r,i){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[o,a,l,c]=t;this.outputShape=[o,e,s,c];const u=[r&&e>1?a-1:a,r&&s>1?l-1:l],h=[r&&e>1?e-1:e,r&&s>1?s-1:s],d=r?"0.5":"0.0";let p;i?p="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":p="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${u[0]/h[0]},
          ${u[1]/h[1]},
          ${u[1]/h[1]});
      const vec3 inputShapeRC = vec3(${a}.0, ${l}.0,
                                     ${l}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${p};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${c-1};
        bool hasNextRow = coords.z < ${s-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t5(n){const{inputs:t,backend:e,attrs:s}=n,{images:r}=t,{alignCorners:i,halfPixelCenters:o,size:a}=s,[l,c]=a,u=O().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new QK(r.shape,l,c,i,o):new ZK(r.shape,l,c,i,o);return e.runWebGLProgram(u,[r],r.dtype)}const e5={kernelName:Eu,backendName:"webgl",kernelFunc:t5};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class n5{constructor(t,e,s){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;const[,r,i]=e,[,o,a]=t,l=[s&&o>1?r-1:r,s&&a>1?i-1:i],c=[s&&o>1?o-1:o,s&&a>1?a-1:a],u=l[0]/c[0],h=l[1]/c[1],d=1/u,p=1/h,f=Math.ceil(d)*2+2,m=Math.ceil(p)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${u});
        const float widthScale = float(${h});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${p});

        const int winHeight = int(${f});
        const int winWidth = int(${m});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${o}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${a}) {
              continue;
            }

            float sourceFracRow =
              float(${l[0]}) *
                (float(dyR) / float(${c[0]}));

            float sourceFracCol =
                float(${l[1]}) *
                  (float(dyC) / float(${c[1]}));

            int sourceNearestRow = int(min(
                float(int(${r}) - 1),
                ${s} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${i}) - 1),
                ${s} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s5(n){const{inputs:t,backend:e,attrs:s}=n,{images:r,dy:i}=t,{alignCorners:o}=s,a=new n5(i.shape,r.shape,o);return e.runWebGLProgram(a,[i],i.dtype)}const r5={kernelName:Ep,backendName:"webgl",kernelFunc:s5};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class i5{constructor(t,e){this.variableNames=["x"];const s=t.length;if(s>4)throw new Error(`WebGL backend: Reverse of rank-${s} tensor is not yet supported`);if(this.outputShape=t,s===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${t[0]} - coord - 1));
        }
      `;return}const r=a=>e.indexOf(a)!==-1&&t[a]!==1?`${t[a]} - coords[${a}] - 1`:`coords[${a}]`,i=t.map((a,l)=>r(l)).join(","),o=Wt(s);this.userCode=`
      void main() {
        ${o} coords = getOutputCoords();
        setOutput(getX(${i}));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class o5{constructor(t,e){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const s=t.length;if(s>4)throw new Error(`WebGL backend: Reverse of rank-${s} tensor is not yet supported`);this.outputShape=t;const r=Xe("rc",s),i=`${r[s-1]} + 1 < ${this.outputShape[s-1]}`,o=`${r[s-2]} + 1 < ${this.outputShape[s-2]}`,a=Wt(s);s===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${t[0]} - rc - 1),
            ${t[0]} - rc - 1);
          if(${i}){
              result.g = getChannel(getX(${t[0]} - (rc  + 1) - 1),
                ${t[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${a} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${l(r.slice())};
          if(${i}){
            result.g = ${c(r.slice())};
          }
          if(${o}) {
            result.b = ${u(r.slice())};
            if(${i}) {
              result.a = ${h(r.slice())};
            }
          }
          setOutput(result);
        }
    `;function l(f){return d(f)}function c(f){return f[s-1]="("+f[s-1]+" + 1)",d(f)}function u(f){return f[s-2]="("+f[s-2]+" + 1)",d(f)}function h(f){return f[s-1]="("+f[s-1]+" + 1)",f[s-2]="("+f[s-2]+" + 1)",d(f)}function d(f){const m=t.map((y,w)=>p(w,f)),g=m.join(","),x=m.slice(-2).join(",");return`getChannel(getX(${g}), vec2(${x}))`}function p(f,m){return e.indexOf(f)!==-1&&t[f]!==1?`${t[f]} - ${m[f]} - 1`:`${m[f]}`}}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a5(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{dims:i}=s,o=r.shape.length,a=$t(i,r.shape);if(o===0)return hn({inputs:{x:r},backend:e});const l=O().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new o5(r.shape,a):new i5(r.shape,a);return e.runWebGLProgram(l,[r],r.dtype)}const l5={kernelName:Du,backendName:"webgl",kernelFunc:a5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class c5{constructor(t,e){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const s=t[1],r=t[2];this.outputShape=t;let i="";typeof e=="number"?i=`float outputValue = ${e.toFixed(2)};`:i=`
        vec3 fill = vec3(${e.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${i}
          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${s}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const u5={kernelName:Bp,backendName:"webgl",kernelFunc:({inputs:n,attrs:t,backend:e})=>{const{image:s}=n,{radians:r,fillValue:i,center:o}=t,a=e,l=new c5(s.shape,i),[c,u]=Mf(o,s.shape[1],s.shape[2]),h=[[c,u,Math.sin(r),Math.cos(r)]];return a.runWebGLProgram(l,[s],s.dtype,h)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const h5=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,d5=Dt({opSnippet:h5}),p5={kernelName:Wa,backendName:"webgl",kernelFunc:d5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const f5="return inversesqrt(x);",g5=Dt({opSnippet:f5,cpuKernelImpl:T4}),m5={kernelName:Ga,backendName:"webgl",kernelFunc:g5};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Og{constructor(t,e,s,r,i,o,a=!0,l=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=o;const c=Wt(i.length),u=Wt(o.length);let h="";s===1?h="i":s===2&&(h="i, j");const d=`getIndices(${h})`;let p="";r===1?p="i":r===2&&(p="i, coords[1]");const f=`getUpdates(${p})`;let m="";l&&(m="coords[0], coords[1]");const g=`getDefaultValue(${m})`,x=e>1?"strides[j]":"strides";this.userCode=`
        ${c} strides = ${c}(${i});

        void main() {
          ${u} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${t}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${e}; j++) {
              int index = round(${d});
              flattenedIndex += index * ${x};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${f};
              found = true;
            }
          }
          setOutput(mix(${g}, sum, float(found)));
        }
      `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class x5{constructor(t,e,s,r,i,o,a=!0,l=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=o;const c=Wt(i.length),u=Wt(o.length);let h="";s===1?h="i":s===2&&(h="i, j");const d=`getIndices(${h})`;let p="";r===1?p="i":r===2&&(p="i, coords[1]");const f=`getUpdates(${p})`;let m="";l&&(m="coords[0], coords[1]");const g=`getDefaultValue(${m})`,x=e>1?"strides[j]":"strides",y=e>1?"strides[j + 1]":"strides";this.userCode=`
        ${c} strides = ${c}(${i});

        void main() {
          ${u} coords = getOutputCoords();
          vec4 sum = vec4(0.);
          vec4 found = vec4(0.);
          for (int i = 0; i < ${t}; i+=2) {
            ivec2 flattenedIndex = ivec2(0);
            for (int j = 0; j < ${e}; j+=2) {
              ivec4 index = round(${d});
              flattenedIndex += index.xz * ${x};
              if (j + 1 < ${e}) {
                flattenedIndex += index.yw * ${y};
              }
            }
            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||
                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {
              vec4 updVals = ${f};
              if (flattenedIndex[0] == coords[0]) {
                sum.xy += updVals.xy;
                found.xy = vec2(1.);
              } else if (flattenedIndex[0] == coords[0] + 1) {
                sum.zw += updVals.xy;
                found.zw = vec2(1.);
              }
              if (flattenedIndex[1] == coords[0]) {
                sum.xy += updVals.zw;
                found.xy = vec2(1.);
              } else if (flattenedIndex[1] == coords[0] + 1) {
                sum.zw += updVals.zw;
                found.zw = vec2(1.);
              }
            }
          }
          setOutput(mix(${g}, sum, found));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y5(n){const{inputs:t,backend:e,attrs:s}=n,{indices:r,updates:i}=t,{shape:o}=s,{sliceRank:a,numUpdates:l,sliceSize:c,strides:u,outputSize:h}=hi(i,r,o),d=[h/c,c];if(h===0)return e.makeTensorInfo(o,r.dtype);const p=tt({inputs:{x:r},backend:e,attrs:{shape:[l,a]}}),f=tt({inputs:{x:i},backend:e,attrs:{shape:[l,c]}}),m=e.makeTensorInfo([],"float32",new Float32Array([0]));let g;O().getBool("WEBGL_PACK")?g=new x5(l,a,p.shape.length,f.shape.length,u,d):g=new Og(l,a,p.shape.length,f.shape.length,u,d);const x=e.runWebGLProgram(g,[f,p,m],f.dtype),y=tt({inputs:{x},backend:e,attrs:{shape:o}});return e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(x),e.disposeIntermediateTensorInfo(m),y}const b5={kernelName:Ub,backendName:"webgl",kernelFunc:y5};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class w5{constructor(t,e,s,r){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[t,s];const i="while (left < right) {",o=`for (int i = 0; i < ${Math.ceil(Math.log2(e+1))}; ++i) { if (left >= right) break;`,a=O().getNumber("WEBGL_VERSION")===2?i:o,l=r==="left"?"<":"<=";this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${a}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${l} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C5(n){const{inputs:t,backend:e,attrs:s}=n,{sortedSequence:r,values:i}=t,{side:o}=s,a=new w5(r.shape[0],r.shape[1],i.shape[1],o),l=[[r.shape[1]]];return e.runWebGLProgram(a,[r,i],"int32",l)}const _5={kernelName:Gb,backendName:"webgl",kernelFunc:C5};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class S5{constructor(t,e,s){this.variableNames=["c","a","b"],this.outputShape=e;let r,i;if(s>4)throw Error(`Where for rank ${s} is not yet supported`);if(s===1)i="resRC",r="resRC";else{const a=["resRC.x","resRC.y","resRC.z","resRC.w"],l=[],c=[];for(let u=0;u<e.length;u++)c.push(`${a[u]}`),u<t&&l.push(`${a[u]}`);r=l.join(),i=c.join()}const o=Wt(s);this.userCode=`
      void main() {
        ${o} resRC = getOutputCoords();
        float cVal = getC(${r});
        if (cVal >= 1.0) {
          setOutput(getA(${i}));
        } else {
          setOutput(getB(${i}));
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I5(n){const{inputs:t,backend:e}=n,{condition:s,t:r,e:i}=t,o=new S5(s.shape.length,r.shape,r.shape.length);return e.runWebGLProgram(o,[s,r,i],cn(r.dtype,i.dtype))}const v5={kernelName:Au,backendName:"webgl",kernelFunc:I5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const k5=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${Qu};
  float scale = ${th};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,$5=Dt({opSnippet:k5}),T5={kernelName:Ha,backendName:"webgl",kernelFunc:$5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const N5=xo+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,E5=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,R5=Dt({opSnippet:N5,packedOpSnippet:E5,cpuKernelImpl:E4}),D5={kernelName:Ka,backendName:"webgl",kernelFunc:R5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const A5=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,F5=Dt({opSnippet:A5}),M5={kernelName:qa,backendName:"webgl",kernelFunc:F5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const P5=xo+`
  return sin(x);
`,O5=`
  vec4 result = sin(x);
  bvec4 isNaN = isnan(x);
  ${mi}
  return result;
`,B5=Dt({opSnippet:P5,packedOpSnippet:O5}),L5={kernelName:Xa,backendName:"webgl",kernelFunc:B5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const V5=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,z5=Dt({opSnippet:V5}),U5={kernelName:ja,backendName:"webgl",kernelFunc:z5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const W5=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,G5=Dt({opSnippet:W5}),H5={kernelName:Ya,backendName:"webgl",kernelFunc:G5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const X5=n=>{const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{blockShape:i,paddings:o}=s;S(r.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const a=i.reduce((x,y)=>x*y),l=[[0,0]];l.push(...o);for(let x=1+i.length;x<r.shape.length;++x)l.push([0,0]);const c=[],u=cI({inputs:{x:r},backend:e,attrs:{paddings:l,constantValue:0}}),h=cl(u.shape,i,a,!1),d=ul(h.length,i.length,!1),p=hl(u.shape,i,a,!1),f=tt({inputs:{x:u},backend:e,attrs:{shape:h}}),m=qe({inputs:{x:f},backend:e,attrs:{perm:d}}),g=tt({inputs:{x:m},backend:e,attrs:{shape:p}});return c.push(u),c.push(f),c.push(m),c.forEach(x=>e.disposeIntermediateTensorInfo(x)),g},j5={kernelName:Pu,backendName:"webgl",kernelFunc:X5};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q5(n){const{inputs:t,backend:e}=n,{indices:s,values:r,denseShape:i,defaultValue:o}=t;if(i.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${i.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${s.shape}`);if(r.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${r.shape}`);if(o.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${o.shape}`);const a=e.readSync(s.dataId),l=e.readSync(r.dataId),c=e.readSync(i.dataId),u=e.readSync(o.dataId)[0],[h,d,p,f,m]=D4(a,s.shape,s.dtype,l,r.dtype,c,u);return[e.makeTensorInfo(d,s.dtype,h),e.makeTensorInfo([d[0]],r.dtype,p),e.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),e.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}const K5={kernelName:Hb,backendName:"webgl",kernelFunc:q5};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y5(n){const{inputs:t,backend:e}=n,{inputIndices:s,inputShape:r,newShape:i}=t;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${s.shape}`);if(r.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${r.shape}`);if(i.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${i.shape}`);const o=Array.from(e.readSync(r.dataId)),a=e.readSync(s.dataId),l=Array.from(e.readSync(i.dataId)),[c,u,h]=A4(a,s.shape,s.dtype,o,l);return[e.makeTensorInfo(u,s.dtype,c),e.makeTensorInfo([h.length],i.dtype,new Int32Array(h))]}const J5={kernelName:Xb,backendName:"webgl",kernelFunc:Y5};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z5(n){const{inputs:t,backend:e}=n,{data:s,indices:r,segmentIds:i}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${r.shape}`);if(i.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${i.shape}`);const o=e.readSync(s.dataId),a=e.readSync(r.dataId),l=e.readSync(i.dataId),[c,u]=FS(o,s.shape,s.dtype,a,l,!0);return e.makeTensorInfo(u,s.dtype,c)}const Q5={kernelName:jb,backendName:"webgl",kernelFunc:Z5};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tY(n){const{inputs:t,backend:e}=n,{data:s,indices:r,segmentIds:i}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${r.shape}`);if(i.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${i.shape}`);const o=e.readSync(s.dataId),a=e.readSync(r.dataId),l=e.readSync(i.dataId),[c,u]=FS(o,s.shape,s.dtype,a,l);return e.makeTensorInfo(u,s.dtype,c)}const eY={kernelName:qb,backendName:"webgl",kernelFunc:tY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nY(n){const{inputs:t,backend:e,attrs:s}=n,{sparseIndices:r,sparseValues:i,defaultValue:o}=t,{outputShape:a}=s,{sliceRank:l,numUpdates:c,sliceSize:u,strides:h,outputSize:d}=hi(i,r,a),p=!1;if(i.dtype==="string"){const x=e.bufferSync(r),y=e.bufferSync(i),w=or(e.readSync(o.dataId)[0]),b=N4(x,y,a,d,u,c,l,h,w,p);return e.makeTensorInfo(a,b.dtype,b.values)}const f=new Og(c,l,r.shape.length,i.shape.length,h,[d,1],p),m=e.runWebGLProgram(f,[i,r,o],i.dtype),g=tt({inputs:{x:m},backend:e,attrs:{shape:a}});return e.disposeIntermediateTensorInfo(m),g}const sY={kernelName:Kb,backendName:"webgl",kernelFunc:nY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rY(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{numOrSizeSplits:i,axis:o}=s,a=$t(o,r.shape)[0],l=Yf(r,i,a),c=r.shape.length,u=new Array(c).fill(0),h=r.shape.slice();return l.map(d=>{const p=[...h];p[a]=d;const f=yo({inputs:{x:r},backend:e,attrs:{begin:u,size:p}});return u[a]+=d,f})}const iY={kernelName:Ou,backendName:"webgl",kernelFunc:rY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vy="return sqrt(x);",oY=Dt({opSnippet:Vy,packedOpSnippet:Vy,cpuKernelImpl:F4}),aY={kernelName:Ja,backendName:"webgl",kernelFunc:oY};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lY="return x * x;",cY=Dt({opSnippet:lY}),uY={kernelName:Dp,backendName:"webgl",kernelFunc:cY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zy="return (a - b) * (a - b);",hY=Me({opSnippet:zy,packedOpSnippet:zy}),dY={kernelName:Za,backendName:"webgl",kernelFunc:hY};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pY(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t;if(r.dtype!=="string")throw new Error("Input must be of datatype string");const i=e.readSync(r.dataId),o=Fs(i),a=M4(o,"string",s);return e.makeTensorInfo(r.shape,"string",a)}const fY={kernelName:Ap,backendName:"webgl",kernelFunc:pY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gY({inputs:n,attrs:t,backend:e}){const{x:s}=n,r=Bn+`
    return x > 0.0 ? 1.0 : float(${t.alpha});
  `,i=new hs(s.shape,r);return e.runWebGLProgram(i,[s],s.dtype)}const mY={kernelName:sl,backendName:"webgl",kernelFunc:gY};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xY{constructor(t,e,s){this.variableNames=["x"],this.outputShape=s;const r=s.length,i=Wt(s.length),o=Wt(s.length);let a="";if(r===1)a="coords * strides + begin";else{let l=0;a=s.map((c,u)=>(l++,s.length===1?`coords * strides[${u}] + begin[${u}]`:`coords[${l-1}] * strides[${u}] + begin[${u}]`)).join(",")}this.userCode=`
      ${i} begin = ${i}(${t});
      ${i} strides = ${i}(${e});

      void main() {
        ${o} coords = getOutputCoords();
        setOutput(getX(${a}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yY(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{begin:i,end:o,strides:a,beginMask:l,endMask:c,ellipsisMask:u,newAxisMask:h,shrinkAxisMask:d}=s,{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:x,begin:y,end:w,strides:b}=Df(r.shape,i,o,a,l,c,u,h,d);let C;if(m)C=tt({inputs:{x:r},backend:e,attrs:{shape:f}});else if(g||x){S(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);const I=Nf(y,w,b),v=yo({inputs:{x:r},backend:e,attrs:{begin:y,size:I}});C=tt({inputs:{x:v},backend:e,attrs:{shape:f}}),e.disposeIntermediateTensorInfo(v)}else if(e.shouldExecuteOnCPU([r])){const v=e.readSync(r.dataId),k=kt(r.shape,r.dtype,v),T=P4(p,k,b,y);C=e.makeTensorInfo(f,r.dtype,T.values)}else{const v=new xY(y,b,p);C=e.runWebGLProgram(v,[r],r.dtype)}const _=tt({inputs:{x:C},backend:e,attrs:{shape:f}});return e.disposeIntermediateTensorInfo(C),_}const bY={kernelName:Fp,backendName:"webgl",kernelFunc:yY};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wY(n){const{inputs:t,backend:e,attrs:s}=n,{separator:r,nGramWidths:i,leftPad:o,rightPad:a,padWidth:l,preserveShortSequences:c}=s,{data:u,dataSplits:h}=t,d=e.readSync(u.dataId),p=e.readSync(h.dataId),[f,m]=O4(d,p,r,i,o,a,l,c);return[e.makeTensorInfo([f.length],"string",f),e.makeTensorInfo(h.shape,"int32",m)]}const CY={kernelName:Yb,backendName:"webgl",kernelFunc:wY};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _Y(n){const{inputs:t,backend:e,attrs:s}=n,{skipEmpty:r}=s,{input:i,delimiter:o}=t;if(i.dtype!=="string")throw new Error("Input must be of datatype string");if(i.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${i.shape}`);if(o.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${o.shape}`);const a=e.readSync(i.dataId),l=e.readSync(o.dataId)[0],[c,u,h]=B4(a,l,r),d=u.length;return[e.makeTensorInfo([d,2],"int32",c),e.makeTensorInfo([d],"string",u),e.makeTensorInfo([2],"int32",new Int32Array(h))]}const SY={kernelName:Jb,backendName:"webgl",kernelFunc:_Y};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IY(n){const{inputs:t,backend:e,attrs:s}=n,{numBuckets:r}=s,{input:i}=t;if(i.dtype!=="string")throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const o=e.readSync(i.dataId),a=L4(o,r);return e.makeTensorInfo(i.shape,"int32",a)}const vY={kernelName:Zb,backendName:"webgl",kernelFunc:IY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kY="return tan(x);",$Y=Dt({opSnippet:kY}),TY={kernelName:tl,backendName:"webgl",kernelFunc:$Y};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NY=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,EY=Dt({opSnippet:NY}),RY={kernelName:el,backendName:"webgl",kernelFunc:EY};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DY(n){const{inputs:t,backend:e,attrs:s}=n,{tensor:r,indices:i,updates:o}=t,{sliceRank:a,numUpdates:l,sliceSize:c,strides:u,outputSize:h}=hi(o,i,r.shape),d=[h/c,c];if(h===0)return e.makeTensorInfo(r.shape,i.dtype);const p=tt({inputs:{x:i},backend:e,attrs:{shape:[l,a]}}),f=tt({inputs:{x:o},backend:e,attrs:{shape:[l,c]}}),m=tt({inputs:{x:r},backend:e,attrs:{shape:d}}),g=new Og(l,a,p.shape.length,f.shape.length,u,d,!1,!0),x=e.runWebGLProgram(g,[f,p,m],m.dtype),y=tt({inputs:{x},backend:e,attrs:{shape:r.shape}});return e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(x),y}const AY={kernelName:Wb,backendName:"webgl",kernelFunc:DY};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class FY{constructor(t,e){this.variableNames=["A"];const s=new Array(t.length);for(let o=0;o<s.length;o++)s[o]=t[o]*e[o];this.outputShape=s,this.rank=s.length;const r=Wt(this.rank),i=MY(t);this.userCode=`
      void main() {
        ${r} resRC = getOutputCoords();
        setOutput(getA(${i}));
      }
    `}}function MY(n){const t=n.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(t===1)return`imod(resRC, ${n[0]})`;const e=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],s=[];for(let r=0;r<n.length;r++)s.push(`imod(${e[r]}, ${n[r]})`);return s.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hI(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{reps:i}=s;if(r.dtype==="string"||r.shape.length>5){const l=e.readSync(r.dataId),c=r.dtype==="string"?l.map(d=>or(d)):l,u=kt(r.shape,r.dtype,c),h=z4(u,i);return e.makeTensorInfo(h.shape,h.dtype,h.values)}const o=new FY(r.shape,i);return e.runWebGLProgram(o,[r],r.dtype)}const PY={kernelName:nl,backendName:"webgl",kernelFunc:hI};class OY{constructor(t){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=t,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}}class BY{constructor(t){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=t,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tr(n,t){t!==null&&n.disposeIntermediateTensorInfo(t)}function Uy(n){let t=1;for(;t<n;)t*=2;return t}function LY(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{k:i,sorted:o}=s,a=O().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=O().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),c=r.shape,u=c[c.length-1];if(e.shouldExecuteOnCPU([r])||u<a||i>l){const T=e.readSync(r.dataId),[D,P]=U4(T,c,r.dtype,i,o);return[e.makeTensorInfo(D.shape,D.dtype,D.values),e.makeTensorInfo(P.shape,P.dtype,P.values)]}if(i===0)return c[c.length-1]=0,[e.makeTensorInfo(c,r.dtype,[]),e.makeTensorInfo(c,"int32",[])];if(u===1)return[r,vl({attrs:{shape:c,dtype:"int32",value:0},backend:e})];const h=e.texData.get(r.dataId),d=h!==null&&h.isPacked,p=d?e.unpackTensor(r):r,m=W(c)/u,g=tt({inputs:{x:p},attrs:{shape:[m,u]},backend:e});d&&Tr(e,p);const x=Uy(i),y=Uy(u);let w=null;const b=()=>w===null?[g,g]:[g,w],C=(T,D,P)=>{const B=b(),V=new OY(P),z=[[u],[w===null?1:0],[Number.NEGATIVE_INFINITY],[T],[D]],H=w;w=e.runWebGLProgram(V,B,"int32",z),Tr(e,H)};for(let T=1;T<x;T*=2){const D=T*2;for(let P=T;P>=1;P/=2)C(D,P,[m,y])}for(let T=y;T>x;T/=2){const D=b(),P=new BY([m,T/2]),V=[[u],[w===null?1:0],[x]],L=w;w=e.runWebGLProgram(P,D,"int32",V),Tr(e,L);const z=x/2,H=z*2;for(let G=z;G>=1;G/=2)C(H,G,w.shape)}let _=w;w=yo({inputs:{x:w},backend:e,attrs:{begin:0,size:[m,i]}}),Tr(e,_);let I=sI({inputs:{x:g,indices:w},backend:e,attrs:{axis:1,batchDims:1}});Tr(e,g);const v=c.slice(0,-1);v.push(i),_=w,w=tt({inputs:{x:w},attrs:{shape:v},backend:e}),Tr(e,_);const k=I;return I=tt({inputs:{x:I},attrs:{shape:v},backend:e}),Tr(e,k),[I,w]}const VY={kernelName:Mp,backendName:"webgl",kernelFunc:LY};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zY{constructor(t,e,s,r,i,o){this.variableNames=["Image","Transforms"],this.outputShape=o;const a=s==="nearest"?1:2;let l;switch(r){case"constant":l=1;break;case"reflect":l=2;break;case"wrap":l=3;break;case"nearest":l=4;break;default:l=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${l} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${l} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${l} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${t} && 0 <= coordX && coordX < ${e}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${i});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${i});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${e}));
                float mapY = mapCoord(inY, float(${t}));

                if (${a} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UY(n){const{inputs:t,backend:e,attrs:s}=n,{image:r,transforms:i}=t,{interpolation:o,fillMode:a,fillValue:l,outputShape:c}=s,[u,h,d,p]=r.shape,[f,m]=c??[h,d],g=[u,f,m,p],x=new zY(h,d,o,a,l,g);return e.runWebGLProgram(x,[r,i],"float32")}const WY={kernelName:Pp,backendName:"webgl",kernelFunc:UY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GY(n){const{inputs:t,attrs:e,backend:s}=n,{axis:r}=e,{x:i}=t;_l(i,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const o=s.readSync(i.dataId),{outputValues:a,outputShape:l,indices:c}=W4(o,r,i.shape,i.dtype);return[s.makeTensorInfo(l,i.dtype,a),s.makeTensorInfo([c.length],"int32",c)]}const HY={kernelName:Op,backendName:"webgl",kernelFunc:GY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XY(n){const{inputs:t,backend:e,attrs:s}=n,{value:r}=t;let{axis:i}=s;i<0&&(i+=r.shape.length);const o=r,a=o.shape.length,l=r.shape[i],c=new Array(a-1);let u=0;for(let m=0;m<a;m++)m!==i&&(c[u++]=o.shape[m]);const h=[],d=new Array(a).fill(0),p=o.shape.slice();p[i]=1;const f=new Array(l);for(let m=0;m<f.length;m++){d[i]=m;const g=yo({inputs:{x:o},backend:e,attrs:{begin:d,size:p}}),x=tt({inputs:{x:g},backend:e,attrs:{shape:c}});f[m]=x,h.push(g)}return h.forEach(m=>e.disposeIntermediateTensorInfo(m)),f}const jY={kernelName:Lu,backendName:"webgl",kernelFunc:XY};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qY{constructor(t,e){this.variableNames=["x","segmentIds"];const s=t.windowSize,r=t.batchSize,i=t.inSize,o=t.numSegments,a=o*Math.ceil(i/s);this.outputShape=[r,a];const l="0.0",c="sumValue",u=Math.floor(s/4)*4,h=s%4,d=`
        sumValue += dot(values, segFilter);
    `;let p="";i%s>0&&(p=`
        if (inIdx < 0 || inIdx >= ${i}) {
          return initializationValue;
        }
      `);let f="";i%s>0&&(f=`
        if (inIdx < 0 || inIdx >= ${i}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${l};

      float getValue(int batch, int inIdx) {
        ${p}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${f}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${o})) * float(${s}));
        int currentSeg = int(mod(float(outIdx), float(${o})));

        float sumValue = 0.0;

        for (int i = 0; i < ${u}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${d}
        }

        int inIdx = inOffset + ${u};
        if (${h===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${d}
        } else if (${h===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${d}
        } else if (${h===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${d}
        }
        setOutput(${c});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KY(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,segmentIds:i}=t,{numSegments:o}=s,a=r.shape.length,l=[];let c=0;const u=oe([c],a);let h=r;u!=null&&(h=qe({inputs:{x:r},backend:e,attrs:{perm:u}}),l.push(h),c=he(1,a)[0]);const d=Xw(h.shape,c,o),p=W([h.shape[c]]),f=tt({inputs:{x:h},backend:e,attrs:{shape:[-1,p]}});l.push(f);const m=Vp(r.dtype),g=(b,C,_,I,v)=>{const k=b.shape[0],T=b.shape[1],D=Hw(T,v),P={windowSize:D,inSize:T,batchSize:k,numSegments:v},B=new qY(P,C),V=e.compileAndRun(B,[b,_],I);if(l.push(V),V.shape[1]===v)return V;const L=uI({backend:e,attrs:{start:0,stop:v,step:1,dtype:"float32"}}),z=hI({inputs:{x:L},backend:e,attrs:{reps:[T/D]}});return l.push(L),l.push(z),g(V,C,z,I,v)},x=g(f,"unsortedSegmentSum",i,m,o),y=tt({inputs:{x},backend:e,attrs:{shape:d}});let w=y;if(u!=null){l.push(y);const b=mr(u);w=qe({inputs:{x:w},backend:e,attrs:{perm:b}})}return l.forEach(b=>e.disposeIntermediateTensorInfo(b)),w}const YY={kernelName:Vu,backendName:"webgl",kernelFunc:KY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JY=[FG,PG,LG,UG,GG,jG,KG,JG,eH,sH,oH,cH,dH,mH,bH,CH,SH,$H,NH,RH,MH,UH,GH,qH,YH,nX,rX,lX,xG,hX,mX,wX,kX,NX,RX,AX,MX,LX,UX,HX,jX,KX,JX,tj,nj,oj,lj,hj,fj,mj,wj,Ij,Tj,Rj,Fj,Mj,Oj,Lj,zj,Wj,Hj,Kj,Zj,eq,sq,oq,cq,pq,xq,mG,bq,fX,_q,vq,Tq,bG,Dq,Pq,Bq,Uq,Hq,Kq,Zq,n6,o6,c6,h6,g6,x6,b6,S6,v6,$6,N6,R6,M6,L6,W6,J6,_G,eK,rK,aK,uK,ZH,pK,gK,xK,wK,IK,CG,kK,TK,EK,DK,AK,QH,j6,PK,VK,GK,IG,qK,JK,e5,r5,l5,u5,p5,m5,b5,_5,v5,T5,D5,M5,L5,U5,VH,K6,H5,j5,K5,J5,Q5,eY,sY,iY,aY,uY,dY,fY,mY,bY,CY,SY,vY,q6,RG,TY,RY,AY,PY,VY,WY,DG,HY,jY,YY,fK];for(const n of JY)t0(n);_$("webgl");console.log(S$());let Zl=0,Ql=0,Bc=null;async function ZY(){try{Bc===null&&(Bc=await pP("/models/tjfs_model/model.json"),console.log("Model loaded successfully."))}catch(n){console.error("Error loading model:",n)}}async function QY(n){try{Bc===null&&await ZY();const t=Yl(n,[1,n.length]),r=(await Bc.predict(t).array())[0];let i=0;for(let o=1;o<r.length;o++)r[o]>r[i]&&(i=o);i==1?(Zl=0,Ql=0):i==2?(Zl=0,Ql=1):(Zl=1,Ql=0)}catch(t){console.error("Error during prediction:",t)}}const t8=[5,10,21,54,58,67,93,103,109,127,132,136,148,149,150,152,162,172,176,234,251,284,288,297,323,332,338,356,361,365,377,378,379,389,397,400,454,13,14,10,152];function e8(n,t){return n.map(s=>t[s])}const Wy=document.getElementsByClassName("input_video")[0],Lr=document.getElementsByClassName("output_canvas")[0],jl=Lr.getContext("2d"),n8=Lr.height/100,s8=Lr.width/100;let dI=0;function r8(n){const t=n[0].x-n[1].x,e=n[0].y-n[1].y;dI=-t/Math.hypot(t*s8,e*n8)*600}let pI=0,fI=0,gI=0;function i8(n,t){const e=n,s=e.maxY-e.minY,r=t[t.length-1].y-t[t.length-2].y;gI=Number((r/s*5).toFixed(3))}function o8(n,t){if(t.length>0){const e=n,{regX:s,regY:r}=a8(t,e);pI=s,fI=r}}function a8(n,t){const e=t.maxX-t.minX,s=t.maxY-t.minY,r=s-((n[19].y+n[36].y)/2-t.minY),i=e-(n[5].x-t.minX);let o=Number(((i/e-.71)*4).toFixed(2)),a=Number(((r/s*-1+.6)*5).toFixed(2));return{regX:o,regY:a}}function l8(n){let t=987654321,e=987654321,s=-987654321,r=-987654321;return n.forEach(i=>{i.x!==void 0&&i.y!==void 0&&(t>i.x&&(t=i.x),e>i.y&&(e=i.y),s<i.x&&(s=i.x),r<i.y&&(r=i.y))}),{minX:t,minY:e,maxX:s,maxY:r}}let Gy=performance.now();const c8=50;function u8(n){const t=performance.now();if(t-Gy>=c8){if(Gy=t,jl.save(),jl.clearRect(0,0,Lr.width,Lr.height),jl.drawImage(n.image,0,0,Lr.width,Lr.height),n.multiFaceLandmarks)for(const s of n.multiFaceLandmarks){const r=e8(t8,s),i=r.slice(0,-4),o=r.slice(1,-2),a=r.slice(-2);let l=s.flatMap(u=>[u.x,u.y,u.z]);l=l.slice(0,l.length-30),QY(l);let c=l8(i);i8(c,o),o8(c,i),r8(a)}jl.restore()}}const Bg=new FaceMesh({locateFile:n=>`https://cdn.jsdelivr.net/npm/@mediapipe/face_mesh/${n}`});Bg.setOptions({maxNumFaces:1,refineLandmarks:!0,minDetectionConfidence:.5,minTrackingConfidence:.5});Bg.onResults(u8);const h8=new Camera(Wy,{onFrame:async()=>{await Bg.send({image:Wy})},width:1280,height:720});h8.start();class d8 extends zc{loadAssets(t,e){this._modelHomeDir=t,fetch(`${this._modelHomeDir}${e}`).then(s=>s.arrayBuffer()).then(s=>{const r=new Yy(s,s.byteLength);this._state=1,this.setupModel(r)}).catch(s=>{Ut(`Failed to load file ${this._modelHomeDir}${e}`)})}setupModel(t){if(this._updating=!0,this._initialized=!1,this._modelSetting=t,this._modelSetting.getModelFileName()!=""){const d=this._modelSetting.getModelFileName();fetch(`${this._modelHomeDir}${d}`).then(p=>{if(p.ok)return p.arrayBuffer();if(p.status>=400)return Ut(`Failed to load file ${this._modelHomeDir}${d}`),new ArrayBuffer(0)}).then(p=>{this.loadModel(p,this._mocConsistency),this._state=3,e()}),this._state=2}else Kt.printMessage("Model data does not exist.");const e=()=>{if(this._modelSetting.getExpressionCount()>0){const d=this._modelSetting.getExpressionCount();for(let p=0;p<d;p++){const f=this._modelSetting.getExpressionName(p),m=this._modelSetting.getExpressionFileName(p);fetch(`${this._modelHomeDir}${m}`).then(g=>{if(g.ok)return g.arrayBuffer();if(g.status>=400)return Ut(`Failed to load file ${this._modelHomeDir}${m}`),new ArrayBuffer(0)}).then(g=>{const x=this.loadExpression(g,g.byteLength,f);this._expressions.getValue(f)!=null&&(Wi.delete(this._expressions.getValue(f)),this._expressions.setValue(f,null)),this._expressions.setValue(f,x),this._expressionCount++,this._expressionCount>=d&&(this._state=5,s())})}this._state=4}else this._state=5,s()},s=()=>{if(this._modelSetting.getPhysicsFileName()!=""){const d=this._modelSetting.getPhysicsFileName();fetch(`${this._modelHomeDir}${d}`).then(p=>{if(p.ok)return p.arrayBuffer();if(p.status>=400)return Ut(`Failed to load file ${this._modelHomeDir}${d}`),new ArrayBuffer(0)}).then(p=>{this.loadPhysics(p,p.byteLength),this._state=7,r()}),this._state=6}else this._state=7,r()},r=()=>{if(this._modelSetting.getPoseFileName()!=""){const d=this._modelSetting.getPoseFileName();fetch(`${this._modelHomeDir}${d}`).then(p=>{if(p.ok)return p.arrayBuffer();if(p.status>=400)return Ut(`Failed to load file ${this._modelHomeDir}${d}`),new ArrayBuffer(0)}).then(p=>{this.loadPose(p,p.byteLength),this._state=9,i()}),this._state=8}else this._state=9,i()},i=()=>{this._modelSetting.getEyeBlinkParameterCount()>0&&(this._eyeBlink=Uo.create(this._modelSetting),this._state=10),o()},o=()=>{this._breath=oa.create();const d=new ct;d.pushBack(new $i(this._idParamAngleX,0,15,6.5345,.5)),d.pushBack(new $i(this._idParamAngleY,0,8,3.5345,.5)),d.pushBack(new $i(this._idParamAngleZ,0,10,5.5345,.5)),d.pushBack(new $i(this._idParamBodyAngleX,0,4,15.5345,.5)),d.pushBack(new $i(Nt.getIdManager().getId(dt.ParamBreath),.5,.5,3.2345,1)),this._breath.setParameters(d),this._state=11,a()},a=()=>{if(this._modelSetting.getUserDataFile()!=""){const d=this._modelSetting.getUserDataFile();fetch(`${this._modelHomeDir}${d}`).then(p=>{if(p.ok)return p.arrayBuffer();if(p.status>=400)return Ut(`Failed to load file ${this._modelHomeDir}${d}`),new ArrayBuffer(0)}).then(p=>{this.loadUserData(p,p.byteLength),this._state=13,l()}),this._state=12}else this._state=13,l()},l=()=>{const d=this._modelSetting.getEyeBlinkParameterCount();for(let p=0;p<d;++p)this._eyeBlinkIds.pushBack(this._modelSetting.getEyeBlinkParameterId(p));this._state=14,c()},c=()=>{const d=this._modelSetting.getLipSyncParameterCount();for(let p=0;p<d;++p)this._lipSyncIds.pushBack(this._modelSetting.getLipSyncParameterId(p));this._state=15,u()},u=()=>{const d=new xn;if(this._modelSetting==null||this._modelMatrix==null){Ut("Failed to setupLayout().");return}this._modelSetting.getLayoutMap(d),this._modelMatrix.setupFromLayout(d),this._state=16,h()},h=()=>{this._state=17,this._model.saveParameters(),this._allMotionCount=0,this._motionCount=0;const d=[],p=this._modelSetting.getMotionGroupCount();for(let f=0;f<p;f++)d[f]=this._modelSetting.getMotionGroupName(f),this._allMotionCount+=this._modelSetting.getMotionCount(d[f]);for(let f=0;f<p;f++)this.preLoadMotionGroup(d[f]);p==0&&(this._state=20,this._motionManager.stopAllMotions(),this._updating=!1,this._initialized=!0,this.createRenderer(),this.setupTextures(),this.getRenderer().startUp(ot))}}setupTextures(){if(this._state==20){const e=this._modelSetting.getTextureCount();for(let s=0;s<e;s++){if(this._modelSetting.getTextureFileName(s)==""){console.log("getTextureFileName null");continue}let r=this._modelSetting.getTextureFileName(s);r=this._modelHomeDir+r;const i=o=>{this.getRenderer().bindTexture(s,o.id),this._textureCount++,this._textureCount>=e&&(this._state=22)};Lt.getInstance().getTextureManager().createTextureFromPngFile(r,!0,i),this.getRenderer().setIsPremultipliedAlpha(!0)}this._state=21}}reloadRenderer(){this.deleteRenderer(),this.createRenderer(),this.setupTextures()}update(){if(this._state!=22)return;const t=Kt.getDeltaTime();this._userTimeSeconds+=t,this._dragManager.update(t),this._dragX=this._dragManager.getX(),this._dragY=this._dragManager.getY(),Date.now()-this.func_time>500&&(this._emo_happy=Zl,this._emo_sad=Ql,this.func_time=Date.now()),this.faceDirectionX=pI,this.faceDirectionY=fI,this.testDragX=this.testDragX+(this.faceDirectionX-this.testDragX)/8,this.testDragY=this.testDragY+(this.faceDirectionY-this.testDragY)/8,this.mouthRatio=this.mouthRatio+(gI-this.mouthRatio)/4,this.faceInclination=this.faceInclination+(dI-this.faceInclination)/8,this._emo_happy_state=this._emo_happy_state+(this._emo_happy-this._emo_happy_state)/2,this._emo_sad_state=this._emo_sad_state+(this._emo_sad-this._emo_sad_state)/2;let s=!1;if(this._model.loadParameters(),this._motionManager.isFinished()?this.startRandomMotion(PI,BI):s=this._motionManager.updateMotion(this._model,t),this._model.saveParameters(),s||this._eyeBlink!=null&&this._eyeBlink.updateParameters(this._model,t),this._expressionManager!=null&&this._expressionManager.updateMotion(this._model,t),this._model.addParameterValueById(this._idParamAngleX,this.testDragX*30),this._model.addParameterValueById(this._idParamAngleY,this.testDragY*30),this._model.addParameterValueById(this._idParamEyeBallX,this.testDragX*10),this._model.addParameterValueById(this._idParamEyeBallY,this.testDragY*10),this._model.addParameterValueById(this._idParamMouthOpenY,this.mouthRatio),this._model.addParameterValueById(this._idParamAngleZ,this.faceInclination),this._model.addParameterValueById(this._idParamCheek3,this._emo_happy_state),this._model.addParameterValueById(this._idParamCheek2,this._emo_sad_state),this._model.addParameterValueById(this._idParamAngleX,this._dragX*30),this._model.addParameterValueById(this._idParamAngleY,this._dragY*30),this._model.addParameterValueById(this._idParamAngleZ,this._dragX*this._dragY*-30),this._model.addParameterValueById(this._idParamBodyAngleX,this._dragX*10),this._model.addParameterValueById(this._idParamEyeBallX,this._dragX),this._model.addParameterValueById(this._idParamEyeBallY,this._dragY),this._breath!=null&&this._breath.updateParameters(this._model,t),this._physics!=null&&this._physics.evaluate(this._model,t),this._lipsync){let r=0;this._wavFileHandler.update(t),r=this._wavFileHandler.getRms();for(let i=0;i<this._lipSyncIds.getSize();++i)this._model.addParameterValueById(this._lipSyncIds.at(i),r,.8)}this._pose!=null&&this._pose.updateParameters(this._model,t),this._model.update()}startMotion(t,e,s,r){if(s==Qg)this._motionManager.setReservePriority(s);else if(!this._motionManager.reserveMotion(s))return this._debugMode&&Kt.printMessage("[APP]can't start motion."),rc;const i=this._modelSetting.getMotionFileName(t,e),o=`${t}_${e}`;let a=this._motions.getValue(o),l=!1;a==null?fetch(`${this._modelHomeDir}${i}`).then(u=>{if(u.ok)return u.arrayBuffer();if(u.status>=400)return Ut(`Failed to load file ${this._modelHomeDir}${i}`),new ArrayBuffer(0)}).then(u=>{if(a=this.loadMotion(u,u.byteLength,null,r),a==null)return;let h=this._modelSetting.getMotionFadeInTimeValue(t,e);h>=0&&a.setFadeInTime(h),h=this._modelSetting.getMotionFadeOutTimeValue(t,e),h>=0&&a.setFadeOutTime(h),a.setEffectIds(this._eyeBlinkIds,this._lipSyncIds),l=!0}):a.setFinishedMotionHandler(r);const c=this._modelSetting.getMotionSoundFileName(t,e);if(c.localeCompare("")!=0){let u=c;u=this._modelHomeDir+u,this._wavFileHandler.start(u)}return this._debugMode&&Kt.printMessage(`[APP]start motion: [${t}_${e}`),this._motionManager.startMotionPriority(a,l,s)}startRandomMotion(t,e,s){if(this._modelSetting.getMotionCount(t)==0)return rc;const r=Math.floor(Math.random()*this._modelSetting.getMotionCount(t));return this.startMotion(t,r,e,s)}setExpression(t){const e=this._expressions.getValue(t);this._debugMode&&Kt.printMessage(`[APP]expression: [${t}]`),e!=null?this._expressionManager.startMotionPriority(e,!1,Qg):this._debugMode&&Kt.printMessage(`[APP]expression[${t}] is null`)}setRandomExpression(){if(this._expressions.getSize()==0)return;const t=Math.floor(Math.random()*this._expressions.getSize());for(let e=0;e<this._expressions.getSize();e++)if(e==t){const s=this._expressions._keyValues[e].first;this.setExpression(s);return}}motionEventFired(t){Kn("{0} is fired on LAppModel!!",t.s)}hitTest(t,e,s){if(this._opacity<1)return!1;const r=this._modelSetting.getHitAreasCount();for(let i=0;i<r;i++)if(this._modelSetting.getHitAreaName(i)==t){const o=this._modelSetting.getHitAreaId(i);return this.isHit(o,e,s)}return!1}preLoadMotionGroup(t){for(let e=0;e<this._modelSetting.getMotionCount(t);e++){const s=this._modelSetting.getMotionFileName(t,e),r=`${t}_${e}`;this._debugMode&&Kt.printMessage(`[APP]load motion: ${s} => [${r}]`),fetch(`${this._modelHomeDir}${s}`).then(i=>{if(i.ok)return i.arrayBuffer();if(i.status>=400)return Ut(`Failed to load file ${this._modelHomeDir}${s}`),new ArrayBuffer(0)}).then(i=>{const o=this.loadMotion(i,i.byteLength,r);if(o!=null){let a=this._modelSetting.getMotionFadeInTimeValue(t,e);a>=0&&o.setFadeInTime(a),a=this._modelSetting.getMotionFadeOutTimeValue(t,e),a>=0&&o.setFadeOutTime(a),o.setEffectIds(this._eyeBlinkIds,this._lipSyncIds),this._motions.getValue(r)!=null&&Wi.delete(this._motions.getValue(r)),this._motions.setValue(r,o),this._motionCount++,this._motionCount>=this._allMotionCount&&(this._state=20,this._motionManager.stopAllMotions(),this._updating=!1,this._initialized=!0,this.createRenderer(),this.setupTextures(),this.getRenderer().startUp(ot))}else this._allMotionCount--})}}releaseMotions(){this._motions.clear()}releaseExpressions(){this._expressions.clear()}doDraw(){if(this._model==null)return;const t=[0,0,fe.width,fe.height];this.getRenderer().setRenderState(Pd,t),this.getRenderer().drawModel()}draw(t){this._model!=null&&this._state==22&&(t.multiplyByMatrix(this._modelMatrix),this.getRenderer().setMvpMatrix(t),this.doDraw())}async hasMocConsistencyFromFile(){if(qn(this._modelSetting.getModelFileName().localeCompare("")),this._modelSetting.getModelFileName()!=""){const t=this._modelSetting.getModelFileName(),s=await(await fetch(`${this._modelHomeDir}${t}`)).arrayBuffer();return this._consistency=aa.hasMocConsistency(s),this._consistency?Kn("Consistent MOC3."):Kn("Inconsistent MOC3."),this._consistency}else Kt.printMessage("Model data does not exist.")}constructor(){super(),this.func_time=0,this.faceDirectionX=0,this.faceDirectionY=0,this.testDragX=0,this.testDragY=0,this._emo_happy=0,this._emo_sad=0,this._emo_happy_state=0,this._emo_sad_state=0,this._modelSetting=null,this._modelHomeDir=null,this._userTimeSeconds=0,this._eyeBlinkIds=new ct,this._lipSyncIds=new ct,this._motions=new xn,this._expressions=new xn,this._hitArea=new ct,this._userArea=new ct,this._idParamAngleX=Nt.getIdManager().getId(dt.ParamAngleX),this._idParamAngleY=Nt.getIdManager().getId(dt.ParamAngleY),this._idParamAngleZ=Nt.getIdManager().getId(dt.ParamAngleZ),this._idParamEyeBallX=Nt.getIdManager().getId(dt.ParamEyeBallX),this._idParamEyeBallY=Nt.getIdManager().getId(dt.ParamEyeBallY),this._idParamBodyAngleX=Nt.getIdManager().getId(dt.ParamBodyAngleX),this.mouthRatio=0,this.faceInclination=0,this._idParamMouthOpenY=Nt.getIdManager().getId(dt.ParamMouthOpenY),this._idParamCheek2=Nt.getIdManager().getId("ParamCheek2"),this._idParamCheek3=Nt.getIdManager().getId("ParamCheek3"),this._mocConsistency=!0,this._state=0,this._expressionCount=0,this._textureCount=0,this._motionCount=0,this._allMotionCount=0,this._wavFileHandler=new Hd,this._consistency=!1}}let ki=null;class ir{constructor(){this._finishedMotion=t=>{Kt.printMessage("Motion Finished:"),console.log(t)},this._viewMatrix=new ge,this._models=new ct,this._sceneIndex=0,this.changeScene(this._sceneIndex),this.isSizeUpButtonClicked=0}static getInstance(){return ki==null&&(ki=new ir),ki}static releaseInstance(){ki!=null&&(ki=void 0),ki=null}getModel(t){return t<this._models.getSize()?this._models.at(t):null}releaseAllModel(){for(let t=0;t<this._models.getSize();t++)this._models.at(t).release(),this._models.set(t,null);this._models.clear()}onDrag(t,e){for(let s=0;s<this._models.getSize();s++){const r=this.getModel(s);r&&r.setDragging(t,e)}}onTap(t,e){Kt.printMessage(`[APP]tap point: {x: ${t.toFixed(2)} y: ${e.toFixed(2)}}`);for(let s=0;s<this._models.getSize();s++)this._models.at(s).hitTest(Jg,t,e)?(Kt.printMessage(`[APP]hit area: [${Jg}]`),this._models.at(s).setRandomExpression()):this._models.at(s).hitTest(Zg,t,e)&&(Kt.printMessage(`[APP]hit area: [${Zg}]`),this._models.at(s).startRandomMotion(OI,LI,this._finishedMotion))}onUpdate(){const{width:t,height:e}=fe,s=this._models.getSize();for(let r=0;r<s;++r){const i=new ge,o=this.getModel(r);o.getModel()&&(this.isSizeUpButtonClicked==1?(o.getModel().getCanvasWidth()>1&&t<e?(o.getModelMatrix().setWidth(2),i.scale(1.3,t/e*1.3)):i.scale(e/t*1.3,1.3),i.translate(0,0)):this.isSizeUpButtonClicked==2?(o.getModel().getCanvasWidth()>1&&t<e?(o.getModelMatrix().setWidth(2),i.scale(1.75,t/e*1.75)):i.scale(e/t*1.75,1.75),i.translate(0,-.35)):o.getModel().getCanvasWidth()>1&&t<e?(o.getModelMatrix().setWidth(2),i.scale(1,t/e)):i.scale(e/t,1),this._viewMatrix!=null&&i.multiplyByMatrix(this._viewMatrix)),o.update(),o.draw(i)}}nextScene(){const t=(this._sceneIndex+1)%MI;this.changeScene(t)}changeScene(t){this._sceneIndex=t,Kt.printMessage(`[APP]model index: ${this._sceneIndex}`);const e=qy[t],s=`${FI}${e}/`,r=`${e}.model3.json`;this.releaseAllModel(),this._models.pushBack(new d8),this._models.at(0).loadAssets(s,r)}setViewMatrix(t){for(let e=0;e<16;e++)this._viewMatrix.getArray()[e]=t.getArray()[e]}}window.LAppLive2DManager=ir;class p8{constructor(){this._textures=new ct}release(){for(let t=this._textures.begin();t.notEqual(this._textures.end());t.preIncrement())ot.deleteTexture(t.ptr().id);this._textures=null}createTextureFromPngFile(t,e,s){for(let i=this._textures.begin();i.notEqual(this._textures.end());i.preIncrement())if(i.ptr().fileName==t&&i.ptr().usePremultply==e){i.ptr().img=new Image,i.ptr().img.addEventListener("load",()=>s(i.ptr()),{passive:!0}),i.ptr().img.src=t;return}const r=new Image;r.addEventListener("load",()=>{const i=ot.createTexture();ot.bindTexture(ot.TEXTURE_2D,i),ot.texParameteri(ot.TEXTURE_2D,ot.TEXTURE_MIN_FILTER,ot.LINEAR_MIPMAP_LINEAR),ot.texParameteri(ot.TEXTURE_2D,ot.TEXTURE_MAG_FILTER,ot.LINEAR),e&&ot.pixelStorei(ot.UNPACK_PREMULTIPLY_ALPHA_WEBGL,1),ot.texImage2D(ot.TEXTURE_2D,0,ot.RGBA,ot.RGBA,ot.UNSIGNED_BYTE,r),ot.generateMipmap(ot.TEXTURE_2D),ot.bindTexture(ot.TEXTURE_2D,null);const o=new f8;o!=null&&(o.fileName=t,o.width=r.width,o.height=r.height,o.id=i,o.img=r,o.usePremultply=e,this._textures.pushBack(o)),s(o)},{passive:!0}),r.src=t}releaseTextures(){for(let t=0;t<this._textures.getSize();t++)this._textures.set(t,null);this._textures.clear()}releaseTextureByTexture(t){for(let e=0;e<this._textures.getSize();e++)if(this._textures.at(e).id==t){this._textures.set(e,null),this._textures.remove(e);break}}releaseTextureByFilePath(t){for(let e=0;e<this._textures.getSize();e++)if(this._textures.at(e).fileName==t){this._textures.set(e,null),this._textures.remove(e);break}}}class f8{constructor(){this.id=null,this.width=0,this.height=0}}class mI extends ge{constructor(){super(),this._screenLeft=0,this._screenRight=0,this._screenTop=0,this._screenBottom=0,this._maxLeft=0,this._maxRight=0,this._maxTop=0,this._maxBottom=0,this._maxScale=0,this._minScale=0}adjustTranslate(t,e){this._tr[0]*this._maxLeft+(this._tr[12]+t)>this._screenLeft&&(t=this._screenLeft-this._tr[0]*this._maxLeft-this._tr[12]),this._tr[0]*this._maxRight+(this._tr[12]+t)<this._screenRight&&(t=this._screenRight-this._tr[0]*this._maxRight-this._tr[12]),this._tr[5]*this._maxTop+(this._tr[13]+e)<this._screenTop&&(e=this._screenTop-this._tr[5]*this._maxTop-this._tr[13]),this._tr[5]*this._maxBottom+(this._tr[13]+e)>this._screenBottom&&(e=this._screenBottom-this._tr[5]*this._maxBottom-this._tr[13]);const s=new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,t,e,0,1]);ge.multiply(s,this._tr,this._tr)}adjustScale(t,e,s){const r=this.getMaxScale(),i=this.getMinScale(),o=s*this._tr[0];o<i?this._tr[0]>0&&(s=i/this._tr[0]):o>r&&this._tr[0]>0&&(s=r/this._tr[0]);const a=new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,t,e,0,1]),l=new Float32Array([s,0,0,0,0,s,0,0,0,0,1,0,0,0,0,1]),c=new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,-t,-e,0,1]);ge.multiply(c,this._tr,this._tr),ge.multiply(l,this._tr,this._tr),ge.multiply(a,this._tr,this._tr)}setScreenRect(t,e,s,r){this._screenLeft=t,this._screenRight=e,this._screenBottom=s,this._screenTop=r}setMaxScreenRect(t,e,s,r){this._maxLeft=t,this._maxRight=e,this._maxTop=r,this._maxBottom=s}setMaxScale(t){this._maxScale=t}setMinScale(t){this._minScale=t}getMaxScale(){return this._maxScale}getMinScale(){return this._minScale}isMaxScale(){return this.getScaleX()>=this._maxScale}isMinScale(){return this.getScaleX()<=this._minScale}getScreenLeft(){return this._screenLeft}getScreenRight(){return this._screenRight}getScreenBottom(){return this._screenBottom}getScreenTop(){return this._screenTop}getMaxLeft(){return this._maxLeft}getMaxRight(){return this._maxRight}getMaxBottom(){return this._maxBottom}getMaxTop(){return this._maxTop}}var Hy;(n=>{n.CubismViewMatrix=mI})(Hy||(Hy={}));class g8{constructor(){this._startX=0,this._startY=0,this._lastX=0,this._lastY=0,this._lastX1=0,this._lastY1=0,this._lastX2=0,this._lastY2=0,this._lastTouchDistance=0,this._deltaX=0,this._deltaY=0,this._scale=1,this._touchSingle=!1,this._flipAvailable=!1}getCenterX(){return this._lastX}getCenterY(){return this._lastY}getDeltaX(){return this._deltaX}getDeltaY(){return this._deltaY}getStartX(){return this._startX}getStartY(){return this._startY}getScale(){return this._scale}getX(){return this._lastX}getY(){return this._lastY}getX1(){return this._lastX1}getY1(){return this._lastY1}getX2(){return this._lastX2}getY2(){return this._lastY2}isSingleTouch(){return this._touchSingle}isFlickAvailable(){return this._flipAvailable}disableFlick(){this._flipAvailable=!1}touchesBegan(t,e){this._lastX=t,this._lastY=e,this._startX=t,this._startY=e,this._lastTouchDistance=-1,this._flipAvailable=!0,this._touchSingle=!0}touchesMoved(t,e){this._lastX=t,this._lastY=e,this._lastTouchDistance=-1,this._touchSingle=!0}getFlickDistance(){return this.calculateDistance(this._startX,this._startY,this._lastX,this._lastY)}calculateDistance(t,e,s,r){return Math.sqrt((t-s)*(t-s)+(e-r)*(e-r))}calculateMovingAmount(t,e){if(t>0!=e>0)return 0;const s=t>0?1:-1,r=Math.abs(t),i=Math.abs(e);return s*(r<i?r:i)}}class m8{constructor(){this._programId=null,this._back=null,this._gear=null,this._touchManager=new g8,this._deviceToScreen=new ge,this._viewMatrix=new mI}initialize(){const{width:t,height:e}=fe,s=t/e,r=-s,i=s,o=TI,a=NI;if(this._viewMatrix.setScreenRect(r,i,o,a),this._viewMatrix.scale(Yg,Yg),this._viewMatrix.translate(0,0),this._deviceToScreen.loadIdentity(),t>e){const l=Math.abs(i-r);this._deviceToScreen.scaleRelative(l/t,-l/t)}else{const l=Math.abs(a-o);this._deviceToScreen.scaleRelative(l/e,-l/e)}this._deviceToScreen.translateRelative(-t*.5,-e*.5),this._viewMatrix.setMaxScale(kI),this._viewMatrix.setMinScale($I),this._viewMatrix.setMaxScreenRect(EI,RI,DI,AI)}release(){this._viewMatrix=null,this._touchManager=null,this._deviceToScreen=null,this._gear.release(),this._gear=null,this._back.release(),this._back=null,ot.deleteProgram(this._programId),this._programId=null}render(){ot.useProgram(this._programId),this._back&&this._back.render(this._programId),this._gear&&this._gear.render(this._programId),ot.flush();const t=ir.getInstance();t.setViewMatrix(this._viewMatrix),t.onUpdate()}initializeSprite(){fe.width,fe.height,Lt.getInstance().getTextureManager(),this._programId==null&&(this._programId=Lt.getInstance().createShader())}onTouchesBegan(t,e){this._touchManager.touchesBegan(t*window.devicePixelRatio,e*window.devicePixelRatio)}onTouchesMoved(t,e){const s=this.transformViewX(this._touchManager.getX()),r=this.transformViewY(this._touchManager.getY());this._touchManager.touchesMoved(t*window.devicePixelRatio,e*window.devicePixelRatio),ir.getInstance().onDrag(s,r)}onTouchesEnded(t,e){const s=ir.getInstance();s.onDrag(0,0);{const r=this._deviceToScreen.transformX(this._touchManager.getX()),i=this._deviceToScreen.transformY(this._touchManager.getY());s.onTap(r,i)}}transformViewX(t){const e=this._deviceToScreen.transformX(t);return this._viewMatrix.invertTransformX(e)}transformViewY(t){const e=this._deviceToScreen.transformY(t);return this._viewMatrix.invertTransformY(e)}transformScreenX(t){return this._deviceToScreen.transformX(t)}transformScreenY(t){return this._deviceToScreen.transformY(t)}}let Nr=null,Pd=null;class Lt{static getInstance(){return Nr==null&&(Nr=new Lt),Nr}static releaseInstance(){Nr!=null&&Nr.release(),Nr=null}initialize(){return document.body.appendChild(fe),this._resizeCanvas(),Pd||(Pd=ot.getParameter(ot.FRAMEBUFFER_BINDING)),ot.enable(ot.BLEND),ot.blendFunc(ot.SRC_ALPHA,ot.ONE_MINUS_SRC_ALPHA),"ontouchend"in fe?(fe.addEventListener("touchstart",w8,{passive:!0}),fe.addEventListener("touchmove",C8,{passive:!0}),fe.addEventListener("touchend",_8,{passive:!0}),fe.addEventListener("touchcancel",S8,{passive:!0})):(fe.addEventListener("mousedown",x8,{passive:!0}),fe.addEventListener("mousemove",y8,{passive:!0}),fe.addEventListener("mouseup",b8,{passive:!0})),this._view.initialize(),this.initializeCubism(),!0}onResize(){this._resizeCanvas(),this._view.initialize(),this._view.initializeSprite()}release(){this._textureManager.release(),this._textureManager=null,this._view.release(),this._view=null,ir.releaseInstance(),Nt.dispose()}run(){const t=()=>{Nr!=null&&(Kt.updateTime(),ot.clearColor(0,0,0,0),ot.enable(ot.DEPTH_TEST),ot.depthFunc(ot.LEQUAL),ot.clear(ot.COLOR_BUFFER_BIT|ot.DEPTH_BUFFER_BIT),ot.clearDepth(1),ot.enable(ot.BLEND),ot.blendFunc(ot.SRC_ALPHA,ot.ONE_MINUS_SRC_ALPHA),this._view.render(),requestAnimationFrame(t))};t()}createShader(){const t=ot.createShader(ot.VERTEX_SHADER);if(t==null)return Kt.printMessage("failed to create vertexShader"),null;ot.shaderSource(t,"precision mediump float;attribute vec3 position;attribute vec2 uv;varying vec2 vuv;void main(void){   gl_Position = vec4(position, 1.0);   vuv = uv;}"),ot.compileShader(t);const s=ot.createShader(ot.FRAGMENT_SHADER);if(s==null)return Kt.printMessage("failed to create fragmentShader"),null;ot.shaderSource(s,"precision mediump float;varying vec2 vuv;uniform sampler2D texture;void main(void){   gl_FragColor = texture2D(texture, vuv);}"),ot.compileShader(s);const i=ot.createProgram();return ot.attachShader(i,t),ot.attachShader(i,s),ot.deleteShader(t),ot.deleteShader(s),ot.linkProgram(i),ot.useProgram(i),i}getView(){return this._view}getTextureManager(){return this._textureManager}constructor(){this._captured=!1,this._mouseX=0,this._mouseY=0,this._isEnd=!1,this._cubismOption=new vI,this._view=new m8,this._textureManager=new p8}initializeCubism(){this._cubismOption.logFunction=Kt.printMessage,this._cubismOption.loggingLevel=VI,Nt.startUp(this._cubismOption),Nt.initialize(),ir.getInstance(),Kt.updateTime(),this._view.initializeSprite()}_resizeCanvas(){fe.width=fe.clientWidth*window.devicePixelRatio,fe.height=fe.clientHeight*window.devicePixelRatio,ot.viewport(0,0,ot.drawingBufferWidth,ot.drawingBufferHeight)}}function x8(n){if(!Lt.getInstance()._view){Kt.printMessage("view notfound");return}Lt.getInstance()._captured=!0;const t=n.pageX,e=n.pageY;Lt.getInstance()._view.onTouchesBegan(t,e)}function y8(n){if(!Lt.getInstance()._captured)return;if(!Lt.getInstance()._view){Kt.printMessage("view notfound");return}const t=n.target.getBoundingClientRect(),e=n.clientX-t.left,s=n.clientY-t.top;Lt.getInstance()._view.onTouchesMoved(e,s)}function b8(n){if(Lt.getInstance()._captured=!1,!Lt.getInstance()._view){Kt.printMessage("view notfound");return}const t=n.target.getBoundingClientRect(),e=n.clientX-t.left,s=n.clientY-t.top;Lt.getInstance()._view.onTouchesEnded(e,s)}function w8(n){if(!Lt.getInstance()._view){Kt.printMessage("view notfound");return}Lt.getInstance()._captured=!0;const t=n.changedTouches[0].pageX,e=n.changedTouches[0].pageY;Lt.getInstance()._view.onTouchesBegan(t,e)}function C8(n){if(!Lt.getInstance()._captured)return;if(!Lt.getInstance()._view){Kt.printMessage("view notfound");return}const t=n.target.getBoundingClientRect(),e=n.changedTouches[0].clientX-t.left,s=n.changedTouches[0].clientY-t.top;Lt.getInstance()._view.onTouchesMoved(e,s)}function _8(n){if(Lt.getInstance()._captured=!1,!Lt.getInstance()._view){Kt.printMessage("view notfound");return}const t=n.target.getBoundingClientRect(),e=n.changedTouches[0].clientX-t.left,s=n.changedTouches[0].clientY-t.top;Lt.getInstance()._view.onTouchesEnded(e,s)}function S8(n){if(Lt.getInstance()._captured=!1,!Lt.getInstance()._view){Kt.printMessage("view notfound");return}const t=n.target.getBoundingClientRect(),e=n.changedTouches[0].clientX-t.left,s=n.changedTouches[0].clientY-t.top;Lt.getInstance()._view.onTouchesEnded(e,s)}window.addEventListener("load",()=>{!Ld.getInstance()||!Lt.getInstance().initialize()||Lt.getInstance().run()},{passive:!0});window.addEventListener("beforeunload",()=>Lt.releaseInstance(),{passive:!0});window.addEventListener("resize",()=>{Lt.getInstance().onResize()},{passive:!0});
//# sourceMappingURL=index-_taSoYhx.js.map
